<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL</title>
      <link href="/MySQL/"/>
      <url>/MySQL/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="初始Mysql"><a href="#初始Mysql" class="headerlink" title="初始Mysql"></a>初始Mysql</h3><h4 id="为什么学习？"><a href="#为什么学习？" class="headerlink" title="为什么学习？"></a>为什么学习？</h4><ul><li>1.岗位需求</li><li>2.得数据者得天下</li><li>3.被迫需求：存数据</li><li>4.数据库是所有软件体系最核心得存在</li></ul><h4 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h4><ul><li>概念：数据仓库，软件，安装在操作系统之上</li><li>作用：存储数据，管理数据</li></ul><h4 id="数据库分类"><a href="#数据库分类" class="headerlink" title="数据库分类"></a>数据库分类</h4><ul><li><p>关系型数据库：(SQL)</p><ul><li>MySQL, Oracle,Sql Sever.DB2,SQLlite</li><li>通过表和表之间，行和列之间的关系进行数据的储存</li></ul></li><li><p>非关系型数据库：(NoSQL)</p><ul><li>Redis,MongDB</li><li>非关系型数据库，对象储存，通过对象的自身属性来决定</li></ul></li></ul><h4 id="DBMS-数据库管理系统"><a href="#DBMS-数据库管理系统" class="headerlink" title="DBMS(数据库管理系统)"></a>DBMS(数据库管理系统)</h4><ul><li>数据库的管理软件,科学有效的管理数据，维护和获取数据</li><li>MySQL实质是一个数据库管理系统</li></ul><h4 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h4><p>MySQL是一种的关系型数据库管理数据库管理系统（RDBMS），使用最常用的数据库管理语言（SQL）进行数据库管理。具有体积小，速度快，总体拥有成本低</p><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysql -u root -p123456 --连接数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p password --设置密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">------基本语句都要使用;结尾</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">show databases; --查看所有的数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">use school  --切换数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">show tables;  --查看数据库中所有的表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">describe student; --显示数据库中的所有表的信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">create databases westos;  ==创建一个数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span>;  --退出连接</span></pre></td></tr></table></figure><h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><p>操作数据库&gt;操作数据库中的表&gt;操作数据库中表的数据</p><p><strong>mysql不区分大小写</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [<span class="keyword">IF</span> <span class="keyword">NOT</span> EXISTS] westos  --创建一个数据库（如果不存在）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">DROP DATABASE <span class="keyword">IF</span> EXISTS WESTOS  --删除一个数据库（如果存在）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">USE school --使用数据库</span></pre></td></tr></table></figure><h4 id="数据库的数据类型-列类型"><a href="#数据库的数据类型-列类型" class="headerlink" title="数据库的数据类型(列类型)"></a>数据库的数据类型(列类型)</h4><p><strong>数值</strong></p><ul><li>tinyint——十分小的数据（一个字节）</li><li>smallint——较小的数据（两个字节）</li><li>mediumint——中等大小的数据（三个字节）</li><li><strong>int——标准的整数（四个字节）</strong></li><li>bigint——较大的数据（八个字节）</li><li>float——单精度浮点数（四个字节）</li><li>double——双精度浮点数（八个字节）</li><li>decimal——字符串形式的浮点数（一般用于金融计算）</li></ul><p><strong>字符串</strong></p><ul><li>char——字符串固定大小（0-255）</li><li><strong>varchar——可变字符串（0-65535）</strong></li><li>tinytext——微型文本(2^8-1)</li><li><strong>text——文本串（2^16-1）</strong></li></ul><p><strong>时间和日期</strong></p><ul><li>java.util.Date<ul><li>date——YYYY-MM-DD（日期格式）</li><li>time——HH:mm:ss（时间格式）</li><li><strong>datetime——YYYY-MM-DD HH:mm:ss（最常用的时间格式）</strong></li><li>timestamp——时间戳（1970.1.1~now）</li><li>year——年份表示</li></ul></li></ul><p><strong>NULL</strong></p><ul><li>没有值，未知</li><li>不要使用null进行运算</li></ul><h4 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h4><ul><li>Unsigned：无符号的整数，不能声明为负数</li><li>zerofill：0填充（不足的位数用0填充）</li><li>自增：通常理解为自动 在上一条记录的基础上加一，通常设置唯一的主键，且必须是整数类型，可以自定义起始值和步长</li><li>非空：设置之后如果不给它赋值就会报错</li><li>默认：设置默认的值，如果不填则会自动填充默认的值</li></ul><h4 id="创建一个表"><a href="#创建一个表" class="headerlink" title="创建一个表"></a>创建一个表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;student&#96;(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &#96;id&#96; INT(4) NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#96;name&#96; VARCHAR(30) NOT NULL DEFAULT &#39;匿名&#39; COMMENT &#39;姓名&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   &#96;password&#96; VARCHAR(20) NOT NULL DEFAULT &#39;123456&#39; COMMENT &#39;密码&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">   &#96;sex&#96; VARCHAR(2) NOT NULL COMMENT &#39;性别&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   &#96;birthday&#96; DATETIME DEFAULT NULL COMMENT &#39;出生日期&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   &#96;address&#96; VARCHAR(100) DEFAULT NULL COMMENT &#39;家庭住址&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">   &#96;email&#96; VARCHAR(50) DEFAULT NULL COMMENT &#39;邮箱&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   PRIMARY KEY(&#96;id&#96;)  #设置主键为id</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">)ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8</span></pre></td></tr></table></figure><p>格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TAABLE [IF NOT EXISTS] `表名`(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    '字段名'+列类型+属性+索引+注释,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    ......</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    '字段名'+列类型+属性+索引+注释</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">)[表类型][字符集设置][注释]</span></pre></td></tr></table></figure><p><strong>常用命令</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE school  <span class="comment">--查看创建数据库的语句</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE student <span class="comment">--查看student数据表的定义语句</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">DESC student <span class="comment">--显示表的语句</span></span></pre></td></tr></table></figure><h4 id="数据表的类型"><a href="#数据表的类型" class="headerlink" title="数据表的类型"></a>数据表的类型</h4><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键的表</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大</td></tr></tbody></table><p><strong>常规使用操作</strong></p><ul><li>MYISAM：节约空间，速度较快</li><li>INNODB：安全性高，支持事务的处理，多表多用户操作</li></ul><p>所有数据库文件都存在data目录下，本质就是文件的存储</p><p><strong>MySQL引擎在物理文件上的区别</strong></p><ul><li>InnoDB在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MYISAM对应文件<ul><li>*.frm——表结构对应的文件</li><li>*.MYD——数据文件(data)</li><li>*.MYI——索引文件(index)</li></ul></li></ul><h4 id="修改和删除表"><a href="#修改和删除表" class="headerlink" title="修改和删除表"></a>修改和删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改表名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE school RENAME AS teacher</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加表的字段</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE teaacher ADD phonenum INT(11)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改表的字段</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE teacher MODIFY age VARCHAR(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改表的字段名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE teacher CHANGE age age1 INT(10)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除表的字段</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE teacher DROP age1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除表(若存在就删除)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS teacher</span></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>字段名尽量使用 ``</li><li>注释用 –和/**/</li><li>sql大小写不敏感，建议用小写</li><li>都用英文</li></ul><h3 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h3><h4 id="外键（了解即可）"><a href="#外键（了解即可）" class="headerlink" title="外键（了解即可）"></a>外键（了解即可）</h4><p><strong>方式一：创建表的时候增加约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `student`(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   `id` INT(4) NOT NULL AUTO_INCREMENT COMMENT '学号',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   `name` VARCHAR(30) NOT NULL DEFAULT '匿名' COMMENT '姓名',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   `password` VARCHAR(20) NOT NULL DEFAULT '123456' COMMENT '密码',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">   `sex` VARCHAR(2) NOT NULL COMMENT '性别',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   `gradeid` INT(10) NOT NULL COMMENT '学生年纪',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   `birthday` DATETIME DEFAULT NULL COMMENT '出生日期',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">   `address` VARCHAR(100) DEFAULT NULL COMMENT '家庭住址',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   `email` VARCHAR(50) DEFAULT NULL COMMENT '邮箱',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">   PRIMARY KEY(`id`),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">   KEY `FK_gradeid` (`gradeid`),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">   CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `grade`(`gradeid`)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE `grade`(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  `gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT '年级id',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  `gradename` VARCHAR(50) NOT NULL COMMENT '年级名称',</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  PRIMARY KEY (`gradeid`)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span></pre></td></tr></table></figure><p><strong>方式二：创建表成功后再添加外键约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE `student`</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ADD CONSTRAINT `FK_gradeid` FOREIGN KEY(`gradeid`) REFERENCES `grade`(`gradeid`);</span></pre></td></tr></table></figure><p>以上两种方式都是物理外键，不建议使用！</p><h4 id="DML语言（全部记住）"><a href="#DML语言（全部记住）" class="headerlink" title="DML语言（全部记住）"></a>DML语言（全部记住）</h4><p>DML:数据操作语言</p><ul><li><p>增</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- INSERT INTO 表名(列名) VALUE(值)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">INSERT INTO `grade`(`gradename`) VALUE('大四')</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改多个值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">INSERT INTO `grade`(`gradename`) VALUE('大一'),('大二')</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改多个不同的值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">INSERT INTO `student`(`name`,`sex`,`password`) VALUE('李四','男','ahut123')</span></pre></td></tr></table></figure><p><strong>注意：</strong>字段是可以省略的，但是后面的值必须要一一对应,就算为空也要写上</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO `student` VALUE(3,'王五','sb250','男','3','2020-02-22','亳州','ahut@163.com')</span></pre></td></tr></table></figure></li><li><p>改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- UPDATE 表名 SET 列名=修改成的数据  where 条件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">UPDATE `student` SET `name`='李浩' WHERE id=2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- id大于等于2的全部修改</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">UPDATE `student` SET `name`='李浩' WHERE id&gt;=2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- id在2和5之间的全部修改(包括2和5)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">UPDATE `student` SET `name`='李浩' WHERE id BETWEEN 2 AND 5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 通过多个条件定位一个数据</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">UPDATE `student` SET `name`='孙凯' WHERE `name`='王五' AND sex='男';</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 看到这里有一小疑问，为啥name要用``，其他不用，这是因为name是关键词</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一般value是一个具体的值，但是也有特殊情况，比如时间,cuurent_time是获取当前时间</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">UPDATE `student` SET `birthday`=CURRENT_TIME WHERE `name`='张三';</span></pre></td></tr></table></figure></li></ul><ul><li><p>删</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- DELETE FROM 表名 WHERE 条件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">DELETE FROM `student` WHERE id=1;</span></pre></td></tr></table></figure><p>拓展：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">TRUNCATE `student`</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 它与delete的相同点是都能删除数据；而不同点是用TRUNCATE重新设置，计数置零，所以当删除表内所有数据的时候建议使用TRUNCATE</span></span></pre></td></tr></table></figure><p>delete删除问题：我们删除完毕之后重启数据库有这些现象：</p><ul><li>InnoDB：自增列会从1开始（存在内存中，断电即失）</li><li>MyISAM：继续从上一个自增量开始（存在文件中，不会丢失）</li></ul></li></ul><h3 id="DQL查询数据（重点）"><a href="#DQL查询数据（重点）" class="headerlink" title="DQL查询数据（重点）"></a>DQL查询数据（重点）</h3><ul><li>所有的查询工作都用它，是数据库中最核心的语言,使用频率最高</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全部学生</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SELECT * FROM student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询指定字段</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">SELECT `studentno`,`studentname` FROM student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给结果起一个名字  AS</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">SELECT `studentno` AS 学号, `studentname` AS 姓名 FROM student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 函数 Concat(a,b) -&gt;拼接字符串</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">SELECT CONCAT('姓名:',studentname) AS 新名字 FROM student</span></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>注解和反射</title>
      <link href="/%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84/"/>
      <url>/%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><p>注解的作用：</p><ul><li>对程序做出解释(这一点和我们用的注释没有什么区别)</li><li>可以被其他程序读取</li></ul><h4 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h4><ul><li>@overide：定义在java.lang.Override中，此注释只适用于修辞方法，表示一个方法声明打算重写超类中的另一个方法声明</li><li>@Deprecated：定义在java.lang.Deprecated中，此注释可以用于修辞方法，属性，类，表示不鼓励程序员使用这样的元素，通常是因为它很危险或者存在更好的选择</li><li>@SuppressWarnings：定义在java.lang.SuppressWarnings中，用来抑制编译时的警告信息<ul><li>与前两个注释有所不同，你需要添加一个参数才能正确使用，这些参数都是已经定义好了的，我们选择性的使用就好了</li><li>@SuppressWarnings（”all”）</li><li>@SuppressWarnings（”unchecked”）</li><li>@SuppressWarnings（value=（”unchecked”，”deprecation}）</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.annotation;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//什么是注解</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> <span class="title">extends</span> <span class="title">Object</span></span>&#123;  <span class="comment">//Object是所有类得老祖宗类，默认继承</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span>  <span class="comment">//这就是一个重写的注解</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String toString<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.toString();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Deprecated</span>  <span class="comment">//表示不推荐使用的，但是可以使用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> test<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"Deprecated"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"all"</span>)  <span class="comment">//抑制警告</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> test2<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h4><p>元注解的作用就是负责注解其他注解，Java定义了4个标准的meta-annotation类型，他们被用来提供对其他annotation类型作说明<br>这些类型和它们所支持的类在java.lang.annotation包中可以找到.（@Target@Retention，<br>@Documented，@lnherited）</p><ul><li>@Target：用于描述注解的使用范围（即：被描述的注解可以用在什么地方）</li><li>@Retention：表示需要在什么级别保存该注释信息，用于描述注解的生命周期<br>（SOURCE&lt;CLASS&lt; RUNTIME）</li><li>@Document：说明该注解将被包含在javadoc中</li><li>@lnherited：说明子类可以继承父类中的该注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.annotation;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试元注解</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@MyAnnotation</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> test<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个注解</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//target表示注解可以用在那些地方</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(value = &#123;ElementType.METHOD,ElementType.TYPE&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//RUNTIME&gt;CLASS&gt;SOURCE</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(value = RetentionPolicy.RUNTIME)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Documented 表示是否将我们的注解生成在JAVdoc中</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span>  MyAnnotation&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h4><p>使用@interface自定义注解时，自动继承了java.lang.annotation.Annotation接口</p><p>分析：</p><ul><li>@interface用来声明一个注解，格式：public@interface 注解名{定义内容}</li><li>其中的每一个方法实际上是声明了一个配置参数</li><li>方法的名称就是参数的名称</li><li>返回值类型就是参数的类型（返回值只能是基本类型，Class，String，enum）.</li><li>可以通过default来声明参数的默认值</li><li>如果只有一个参数成员，一般参数名为value注解元素必须要有值，我们定义注解元素时，经常使用空字符串，0作为默认值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.annotation;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo3</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//注解可以显示赋值，如果没有默认值，我们必须给注解赋值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@MyAnnotation</span>2(age = <span class="number">18</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> test<span class="params">()</span></span>&#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@MyAnnotation</span>3(<span class="string">""</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> test2<span class="params">()</span></span>&#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE,ElementType.METHOD&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span> MyAnnotation2&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//注解的参数：参数类型 + 参数名()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function">String name<span class="params">()</span> <span class="keyword">default</span> ""</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> age<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> id<span class="params">()</span> <span class="keyword">default</span>  -1</span>; <span class="comment">//-1代表不存在</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    String[] schools() <span class="keyword">default</span> &#123;<span class="string">"清华大学"</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果注解只有一个值，建议使用value，只有使用value的时候不需要赋值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span> MyAnnotation3&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="function">String value<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul><li>Reflection（反射）是Java被视为动态语言的关键，反射机制允许程序在执行期借助于ReflectionAPI取得任何类的内部信息，并能直接操作任意对象的内部属性及方法。</li><li>加载完类之后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构。这个对象就像一面镜子，透过这个镜子看到类的结构，所以，我们形象的称之为：反射</li></ul><p><strong>反射相关的主要APl</strong></p><ul><li><p>jalva.lang.Class：代表一个类</p></li><li><p>java.lang.reflect.Method：代表类的方法</p></li><li><p>java.lang.reflect.Field：代表类的成员变量<br>java.lang.reflect.Constructor：代表类的构造器</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.reflection;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> <span class="title">extends</span> <span class="title">Object</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通过反射获取类的class对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Class c1 = Class.forName(<span class="string">"javase.reflection.User"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Class c2 = Class.forName(<span class="string">"javase.reflection.User"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Class c3 = Class.forName(<span class="string">"javase.reflection.User"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Class c4 = Class.forName(<span class="string">"javase.reflection.User"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//一个类在内存中只有一个class对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//一个类被加载后，整个类都会被封装在class对象中</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c2.hashCode());  <span class="comment">//返回对象的哈希码表</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c3.hashCode());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c4.hashCode());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//打印出来的哈希码都一样，这就说明一个类只有一个class对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//实体类:pojo, entity</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> String name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> User<span class="params">(String name, <span class="keyword">int</span> id, <span class="keyword">int</span> age)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.age = age;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String getName<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> setName<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> getId<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> setId<span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> getAge<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> age;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> setAge<span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.age = age;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String toString<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\'</span><span class="string">' +</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="string">                ", id=" + id +</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"><span class="string">                ", age=" + age +</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="string">                '</span>&#125;<span class="string">';</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr></table></figure><h4 id="获取class名"><a href="#获取class名" class="headerlink" title="获取class名"></a>获取class名</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.reflection;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试class类的创建方式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo2</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Person person = <span class="keyword">new</span> Student();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"这个人是:"</span>+person.name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//方式一：通过对象获得</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Class c1 = person.getClass();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//方式二：forname获得</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Class c2 = Class.forName(<span class="string">"javase.reflection.Student"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c2.hashCode());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//方式三：通过类名.class获得</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        Class c3 = Student<span class="class">.<span class="keyword">class</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c3.hashCode());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//方式四：基本内置类型的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        Class c4 = Integer.TYPE;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c4);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//获得父类类型</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        Class c5 = c1.getSuperclass();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> String name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Person<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Person<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String toString<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\'</span><span class="string">' +</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="string">                '</span>&#125;<span class="string">';</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="string">class Student extends Person&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="string">    public Student()&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="string">        this.name = "学生";</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="string"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="string">class Teacher extends Person&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="string">    public Teacher()&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="string">        this.name = "学生";</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h3 id="线程简介"><a href="#线程简介" class="headerlink" title="线程简介"></a>线程简介</h3><p>1、进程：进程指正在运行的程序。确切的来说，当一个程序进入内存运行，即变成一个进程，进程是处于运行过程中的程序，并且具有一定独立功能</p><p>2、线程：线程是进程中的一个执行单元，负责当前进程中程序的执行，一个进程中至少有一个线程。一个进程中是可以有多个线程的，这个应用程序也可以称之为多线程程序,<strong>线程是CPU调度和执行的单位</strong></p><p>简而言之：一个程序运行后至少有一个进程，一个进程中可以包含多个线程</p><p>3、什么是多线程呢？即就是一个程序中有多个线程在同时执行</p><p>4、单线程程序：即，若有多个任务只能依次执行。当上一个任务执行结束后，下一个任务开始执行。如，去网吧上网，网吧只能让一个人上网，当这个人下机后，下一个人才能上网</p><p>5、多线程程序：即，若有多个任务可以同时执行。如，听歌的同时也能抄作业</p><p><strong>注意：很多的多线程都是模拟出来的，真正的多线程指的是多个cpu，即多核，如服务器。如果是模拟出来的多线程，即在一个cpu的情况下，在同一个时间点，cpu只能执行一个代码，因为切换的很快，所以就有同时执行的错象</strong></p><p>核心概念：</p><ul><li>线程就是独立的执行路径</li><li>在程序执行的时候，即使没有自己创建线程， 后台也会有多个线程，如主线程，gc线程</li><li>main()称之为主线程，位系统的入口，用于执行整个程序</li><li>在一个进程中，如果开辟了多个线程，线程的运行由调度器安排调度，调度器是与操作系统紧密相关的，先后顺序不能认为是干预的</li><li>对同一份资源操作时，会存在资源抢夺的问题，需要加入并发控制</li><li>线程会带来额外的开销，如cpu调度时间，并发控制开销</li><li>每个线程在自己的工作内存交互，内存控制不当则会造成数据不一致</li></ul><h3 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a>线程创建</h3><h4 id="三种创建方式"><a href="#三种创建方式" class="headerlink" title="三种创建方式"></a>三种创建方式</h4><ul><li><p>Thread class(继承Thread类)</p><ul><li><p>1.自定义线程类继承Thread类</p></li><li><p>2.重写run()方法，编写线程执行体</p></li><li><p>3.创建线程对象，调用start()方法开启线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo1</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建方式：继承Thread类，重写run()方法，调用start开启线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//run方法线程体</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"我在看代码"</span>+i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//main主线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//创建一个线程对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        demo1 demo = <span class="keyword">new</span> demo1();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//start方法用来开启线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        demo.run();  <span class="comment">//有先后顺序，普通的方法调用而已</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        demo.start();  <span class="comment">//同时进行，并发执行</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"我在学习多线程"</span>+i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>Runnable接口（实现Runnable接口）</p><ul><li><p>1.引入Runnable接口</p></li><li><p>2.重写run方法线程体</p></li><li><p>3.创建通过Runnable类实现的对象并丢入Thread中启用start方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入Runnable接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo02</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//run方法线程体</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"网络的深度覆盖---"</span>+i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//创建通过Runnable接口实现的类对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        demo02 p = <span class="keyword">new</span> demo02();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//把实例对象丢入Thread类中，并启用start方法即可</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(p).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p><strong>小结</strong></p><ul><li><p>Thread不建议使用，避免OOP单继承局限性</p></li><li><p>Runnable推荐使用，避免单继承局限性，灵活方便，方便同一个对象被多个线程使用（多个线程共用一个对象，多个对象共用一个线程均可）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个线程同时使用一个对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//比如买火车票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo03</span> <span class="title">implements</span>  <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//模拟延时.cpu跑得太快不好验证</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                Thread.sleep(<span class="number">200</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//通过currentThread方法的getName方法获取线程方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">"拿到了第"</span>+ticketNums--+<span class="string">"票"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        demo03 ticket = <span class="keyword">new</span> demo03();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">"小明"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">"老师"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(ticket,<span class="string">"黄牛党"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>但是多个线程共用一个对象的时候会存在一个问题：线程不安全，数据发生紊乱(并发问题)</p></li></ul><p><strong>模拟龟兔赛跑</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟龟兔赛跑</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo04</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//胜利者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//模拟兔子睡觉</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Thread.currentThread().getName().equals(<span class="string">"兔子"</span>) &amp;&amp; i&gt;=<span class="number">50</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                    Thread.sleep(<span class="number">1</span>);<span class="comment">//睡一毫秒</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                    e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">boolean</span> flag = gameOver(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">"跑了"</span>+i+<span class="string">"步"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//判断比赛是否结束</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> gameOver<span class="params">(<span class="keyword">int</span> step)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果已经存在胜利者，两个线程都要结束</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(winner!=<span class="keyword">null</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="comment">//如果不加这句话，有一方胜利后，另一方还会接着跑</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(step &gt;= <span class="number">100</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            winner = Thread.currentThread().getName();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            System.out.println(winner+<span class="string">"赢得了比赛"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        demo04 race = <span class="keyword">new</span> demo04();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">"兔子"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">"乌龟"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul></li></ul><ul><li>Callable接口（实现Callable接口）</li></ul><h4 id="Thread的深度刨析"><a href="#Thread的深度刨析" class="headerlink" title="Thread的深度刨析"></a>Thread的深度刨析</h4><ul><li><p>静态 代理模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">静态代理:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    真实对象和代理对象都要实现同一个接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    代理对象要代理真实角色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    好处：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">        代理对象可以做很多真实对象做不了的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">        真实对象专注自己的事情</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo05</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(()-&gt; System.out.println(<span class="string">"i love you"</span>)).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> company(<span class="keyword">new</span> you()).happy(); <span class="comment">//这里的happy就类似于start</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span>  <span class="title">marry</span></span>&#123;  <span class="comment">//创建一个marry接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> happy<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//真实角色，你去结婚</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">you</span> <span class="title">implements</span> <span class="title">marry</span></span>&#123; <span class="comment">//you继承了marry接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> happy<span class="params">()</span> </span>&#123;  <span class="comment">//重写了happy方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"你要结婚了，你很开心"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//代理角色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">company</span> <span class="title">implements</span>  <span class="title">marry</span></span>&#123; <span class="comment">//company也继承了marry窗口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> marry target;<span class="comment">//目标对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> company<span class="params">(marry target)</span></span>&#123;  <span class="comment">//company类构造器(用来初始化)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.target = target;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> happy<span class="params">()</span> </span>&#123; <span class="comment">//重写happy方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        before();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.target.happy();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        after();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> before<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"结婚之前，布置现场"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> after<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"结婚之后，收尾款"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h4 id="Lamda表达式"><a href="#Lamda表达式" class="headerlink" title="Lamda表达式"></a>Lamda表达式</h4><ul><li><p><strong>Function Interface（函数式接口）</strong>是Lamda表达式的关键，函数式接口即只包含一个抽象方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> run<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><p>为什么使用Lamda？</p><ul><li><p>1.避免匿名内部类定义过多</p></li><li><p>2.可以减少代码量</p><p>推导过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//推导lamda表达式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo06</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//3.静态内部类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">static</span>  <span class="class"><span class="keyword">class</span> <span class="title">love1</span> <span class="title">implements</span> <span class="title">ilove</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> lamda<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"i love1 lamda"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        ilove love = <span class="keyword">new</span> love();  <span class="comment">//用接口去new一个实现类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        love.lamda();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        love = <span class="keyword">new</span> love1();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        love.lamda();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//4.局部内部类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">love2</span> <span class="title">implements</span> <span class="title">ilove</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> lamda<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="string">"i love2 lamda"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        love = <span class="keyword">new</span> love2();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        love.lamda();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//5.匿名内部类,没有类的名称必须借助接口或者父类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        love = <span class="keyword">new</span> ilove() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> lamda<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="string">"i love3 lamda"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        love.lamda();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//6.用Lamda简化</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        love = ()-&gt;&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"i love4 lamda"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        love.lamda();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义一个只有一个抽象式方法的接口(Function Interface（函数式接口）)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ilove</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> lamda<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.实现类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">love</span> <span class="title">implements</span> <span class="title">ilove</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> lamda<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"i love lamda"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p>函数式接口的定义：</p><ul><li><p>任何接口，如果只包含唯一一个抽象方法，那么它就是一个函数式接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> run<span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p>对于函数式接口，我们可以通过lamda表达式来创建该接口的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo07</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">/*like like1 = (a)-&gt;&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">            System.out.println("i love "+a);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">        &#125;;*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//1.当只有一个语句的时候可以去掉“&#123;&#125;”</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//2.可以去掉参数类型，当有多个参数的时候需要加上“()”</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        like like1 = a-&gt;System.out.println(<span class="string">"i love "</span>+a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        like1.ilike(<span class="number">520</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">like</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> ilike<span class="params">(<span class="keyword">int</span> a)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul></li><li><p>总结：</p><p>到目前为止，我们应该有三种可以创建一个线程并启动的方法了：</p><p>1.节选自chatting中的one.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">send e = <span class="keyword">new</span> send(<span class="number">5555</span>,<span class="number">7777</span>,<span class="string">"localhost"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        Thread thread = <span class="keyword">new</span> Thread(e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        thread.start();</span></pre></td></tr></table></figure><p>2.节选自chatting中的one.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> receive(<span class="number">8888</span>,<span class="string">"警察"</span>)).start();</span></pre></td></tr></table></figure><p>3.只有一个方法的函数式接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(()-&gt; System.out.println(<span class="string">"i love you"</span>)).start();</span></pre></td></tr></table></figure></li></ul></li></ul><h3 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h3><p><img src="https://img04.sogoucdn.com/app/a/100520146/90f26580297a213b4f82bf4dfe37d680" alt=""></p><ol><li><p><strong>新建(NEW)</strong>：新创建了一个线程对象。</p></li><li><p><strong>可运行(RUNNABLE)</strong>：线程对象创建后，其他线程(比如main线程）调用了该对象的start()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获取cpu 的使用权 </p></li><li><p><strong>运行(RUNNING)</strong>：可运行状态(runnable)的线程获得了cpu 时间片（timeslice） ，执行程序代码。</p></li><li><p><strong>阻塞(BLOCKED)</strong>：阻塞状态是指线程因为某种原因放弃了cpu 使用权，也即让出了cpu timeslice，暂时停止运行。直到线程进入可运行(runnable)状态，才有机会再次获得cpu timeslice 转到运行(running)状态。阻塞的情况分三种： </p></li></ol><blockquote><p>(一). 等待阻塞：运行(running)的线程执行o.wait()方法，JVM会把该线程放入等待队列(waitting queue)中。<br>(二). 同步阻塞：运行(running)的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则JVM会把该线程放入锁池(lock pool)中。<br>(三). 其他阻塞：运行(running)的线程执行Thread.sleep(long ms)或t.join()方法，或者发出了I/O请求时，JVM会把该线程置为阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入可运行(runnable)状态。</p></blockquote><ol start="5"><li><strong>死亡(DEAD)</strong>：线程run()、main() 方法执行结束，或者因异常退出了run()方法，则该线程结束生命周期。死亡的线程不可再次复生</li></ol><h4 id="停止线程"><a href="#停止线程" class="headerlink" title="停止线程"></a>停止线程</h4><ul><li><p>不推荐使用stop()和destory()</p></li><li><p>建议使用一个标志位进行终止变量（当flag=false的时候，则终止线程运行）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">stoptest</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//1.线程中定义线程体使用的标识</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//2.线程体使用的标识</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"run...Thread"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//3.对外提供方法改变标识</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> stop<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.flag = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>demo:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*测试stop</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">1.建议让线程正常的停止（利用循环）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">2.建议使用标志位（设置一个标志位）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">3.不要使用stop或者destroy等过时或者JDK不建议使用的方法*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">stoptest</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//设置一个标志位</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"run...Thread"</span>+i++);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//设置一个公开的方法停止线程，转换标志位</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> stop<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.flag = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        stoptest demo = <span class="keyword">new</span> stoptest();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"main"</span>+i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i==<span class="number">900</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">                <span class="comment">//调用stop方法，切换标志位，让线程停止</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">                demo.stop();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="string">"线程停止了"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h4 id="线程休眠"><a href="#线程休眠" class="headerlink" title="线程休眠"></a>线程休眠</h4><ul><li><p>sleep指定当前线程阻塞的毫秒数</p></li><li><p>sleep存在异常InterruptedException</p></li><li><p>sleep时间达到后线程进入就绪状态</p></li><li><p>sleep可以模拟网络延时、倒计时等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟网络延时:方法问题的发生性</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sleeptest</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">static</span> Date time = <span class="keyword">new</span> Date(System.currentTimeMillis());<span class="comment">//获取系统当前时间</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            Thread.sleep(<span class="number">1000</span>);<span class="comment">//一秒延迟</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss"</span>).format(time));<span class="comment">//打印时间</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            time = <span class="keyword">new</span> Date(System.currentTimeMillis());<span class="comment">//刷新时间</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li>每一个对象都有一个锁，sleep不会释放锁</li></ul><h4 id="线程礼让"><a href="#线程礼让" class="headerlink" title="线程礼让"></a>线程礼让</h4><ul><li>礼让线程，让当前正在执行的线程暂停，但并不阻塞</li><li>让线程从运行状态转为就绪状态</li><li>让cpu重新调度，礼让不一定成功zaiix</li></ul><h4 id="线程强制执行Join"><a href="#线程强制执行Join" class="headerlink" title="线程强制执行Join"></a>线程强制执行Join</h4><ul><li>join合并线程，待此线程执行完成后，再去执行其他线程，其他线程阻塞</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试join方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//想象成插队</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">join</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"尊贵的vip"</span>+i+<span class="string">"驾临!!"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        join demo = <span class="keyword">new</span> join();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        Thread vip = <span class="keyword">new</span> Thread(demo);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        vip.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//主线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"普通用户排队中..."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i==<span class="number">20</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                vip.join();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><img src="https://img03.sogoucdn.com/app/a/100520146/908b843b1acf76817d77ba0442744c9a" alt=""></p><h3 id="线程优先级"><a href="#线程优先级" class="headerlink" title="线程优先级"></a>线程优先级</h3><ul><li>Java提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程，线程调度器按照优先级决定应该调度哪个线程来执行</li><li>线程的优先级用数字表示，范围从1~10<ul><li>Thread.MIN_PRIORITY=1</li><li>Thread.MAX_PRIORITY=10</li><li>Thread.NORM_PRIORITY=5</li></ul></li><li>使用以下方式改变或获取优先级<ul><li>getPriority().setPriority（int xxx）</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">priority</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;<span class="comment">//首先main方法的默认优先级为5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"--&gt;"</span>+Thread.currentThread().getPriority());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        mypriority demo = <span class="keyword">new</span> mypriority();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(demo,<span class="string">"a"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(demo,<span class="string">"b"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(demo,<span class="string">"c"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Thread t4 = <span class="keyword">new</span> Thread(demo,<span class="string">"d"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        Thread t5 = <span class="keyword">new</span> Thread(demo,<span class="string">"e"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Thread t6 = <span class="keyword">new</span> Thread(demo,<span class="string">"f"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//先设置优先级，在启动</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        t1.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        t2.setPriority(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        t2.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        t3.setPriority(<span class="number">4</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        t3.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        t4.setPriority(<span class="number">10</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        t4.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        t5.setPriority(-<span class="number">2</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        t5.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        t6.setPriority(<span class="number">11</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        t6.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mypriority</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"--&gt;"</span>+Thread.currentThread().getPriority());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>注意：先设置优先级再使用</strong></p><p>性能倒置：优先级只是意味着获得调度的概率低，并不是优先级低就不会被调用了，这要看cpu的调度</p><h3 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h3><ul><li><p>线程分为<strong>用户线程</strong>和<strong>守护线程</strong></p></li><li><p>虚拟机必须确保用户线程执行完毕，不用等待守护线程执行完毕</p></li><li><p>比如：后台记录操作日志，监控内存，垃圾回收等待</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">daemontest</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        You you = <span class="keyword">new</span> You();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        God god = <span class="keyword">new</span> God();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Thread demo = <span class="keyword">new</span> Thread(god);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        demo.setDaemon(<span class="keyword">true</span>); <span class="comment">//默认是false，也就是用户线程，改成true就是守护线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        demo.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(you).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">God</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"上帝保佑着你"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">36500</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"你开心幸福的活着"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"====bye bye===="</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h3 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h3><p>处理多线程问题时，<strong>多个线程访问同一个对象（并发问题）</strong>，并且某些线程还想修改这个对象.这时候我们就需要线程同步.线程同步其实就是一种等待机制，多个需要同时访问此对象的线程进入这个<strong>对象的等待池</strong>形成队列，等待前面线程使用完毕，下一个线程再使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//不安全的买票，会出现有负数或者相同的票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">unsafeticket</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Buyticket demo = <span class="keyword">new</span> Buyticket();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"你"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"我"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"他"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyticket</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;  <span class="comment">//外部停止方式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//买票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                buy();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> buy<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            flag = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//模拟延时</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        Thread.sleep(<span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//买票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"拿到了"</span>+ticketNums--);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>运行结果如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">他拿到了<span class="number">10</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">我拿到了<span class="number">8</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">你拿到了<span class="number">9</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">他拿到了<span class="number">6</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">我拿到了<span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">你拿到了<span class="number">7</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">他拿到了<span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">你拿到了<span class="number">3</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">我拿到了<span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">他拿到了<span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">你拿到了<span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">我拿到了<span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">我拿到了<span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">你拿到了<span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">他拿到了-<span class="number">1</span></span></pre></td></tr></table></figure><p><strong>结论：每个线程在自己的工作内存交互，内存控制不当就会造成数据不一致</strong></p><ul><li><p>队列和锁</p><p>由于同一进程的多个线程共享同一块存储空间，在带来方便的同时，也带来了访问冲突问题，为了保证数据在方法中被访问时的正确性，在访问时加入<strong>锁机制</strong>synchronized，当一个线程获得对象的排它锁，独占资源，其他线程必须等待，使用后释放锁即可.存在以下问题：</p><ul><li>一个线程持有锁会导致其他所有需要此锁的线程挂起</li><li>在多线程竞争下，加锁，释放锁会导致比较多的上下文切换和调度延时，引起性能问题</li><li>如果一个优先级高的线程等待一个优先级低的线程释放锁会导致优先级倒置，引起性能问题</li></ul></li><li><p>同步方法：<strong>synchronized</strong></p><p>由于同一进程的多个线程共享同一块存储空间，在带来方便的同时，也带来了访问冲突问题，为了保证数据在方法中被访问时的正确性，在访问时加入锁机制synchronized，当一个线程获得对象的排它锁，独占资源，其他线程必须等待，使用后释放锁即可.存在以下问题：</p><ul><li>一个线程持有锁会导致其他所有需要此锁的线程挂起；</li><li>在多线程竞争下，加锁，释放锁会导致比较多的上下文切换和调度延时，引起性能问题；</li><li>如果一个优先级高的线程等待一个优先级低的线程释放锁会导致优先级倒置，引起性能问题</li></ul><p>买票的demo可以改成这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//不安全的买票，会出现有负数或者相同的票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">unsafeticket</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Buyticket demo = <span class="keyword">new</span> Buyticket();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"你"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"我"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo,<span class="string">"他"</span>).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyticket</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">1000</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;  <span class="comment">//外部停止方式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//买票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                buy();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//synchronized 同步方法，锁的是this</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> buy<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(ticketNums&lt;=<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            flag = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//模拟延时</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        Thread.sleep(<span class="number">10</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//买票</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"拿到了"</span>+ticketNums--);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>这样，三个线程排好队，每个线程完成一次之后才能离开</p><p>但是当我们在银行取款的demo中，却行不通,这是为什么呢？</p><p>因为<strong>synchroized默认锁的是this</strong>，这时候我们就需要使用同步块：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.imageio.stream.ImageInputStream;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">unsafebank</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="number">100</span>,<span class="string">"结婚基金"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        take you = <span class="keyword">new</span> take(account,<span class="number">50</span>,<span class="string">"男人"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        take girl = <span class="keyword">new</span> take(account,<span class="number">100</span>,<span class="string">"女人"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        you.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        girl.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟账户银行卡</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> money; <span class="comment">//余额</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    String name; <span class="comment">//卡名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Account<span class="params">(<span class="keyword">int</span> money,String name)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.money = money;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟取款操作</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">take</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    Account account;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> take<span class="params">(Account account,<span class="keyword">int</span> take,String name)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">super</span>(name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">this</span>.account = account;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">this</span>.take = take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (account.money - take &lt; <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">"的余额不足"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            Thread.sleep(<span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        account.money = account.money - take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        System.out.println(account.name+<span class="string">"账户余额为："</span>+account.money);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="keyword">this</span>.getName()+<span class="string">"取走了"</span>+take);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//结婚基金账户余额为：-50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//男人取走了50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//结婚基金账户余额为：-50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//女人取走了100</span></span></pre></td></tr></table></figure></li></ul><ul><li><p>同步块：synchronized（Obj）{}<br>Obj称之为同步监视器</p><ul><li><p>Obj可以是任何对象，但是推荐使用共享资源作为同步监视器<br>同步方法中无需指定同步监视器，因为同步方法的同步监视器就是this，就是这个对象本身，或者是class[反射中讲解]</p></li><li><p>同步监视器的执行过程<br>1.第一个线程访问，锁定同步监视器，执行其中代码。<br>2.第二个线程访问，发现同步监视器被锁定，无法访问，<br>3.第一个线程访问完毕，解锁同步监视器.<br>4.第二个线程访问，发现同步监视器没有锁，然后锁定并访问</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.imageio.stream.ImageInputStream;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">unsafebank</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="number">100</span>,<span class="string">"结婚基金"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        take you = <span class="keyword">new</span> take(account,<span class="number">20</span>,<span class="string">"男人"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        take girl = <span class="keyword">new</span> take(account,<span class="number">10</span>,<span class="string">"女人"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        you.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        girl.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟账户银行卡</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> money; <span class="comment">//余额</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    String name; <span class="comment">//卡名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Account<span class="params">(<span class="keyword">int</span> money,String name)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.money = money;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟取款操作</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">take</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    Account account;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> take<span class="params">(Account account,<span class="keyword">int</span> take,String name)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">super</span>(name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">this</span>.account = account;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">this</span>.take = take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">synchronized</span> (account)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (account.money - take &lt; <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">"取钱的时候的余额不足"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                Thread.sleep(<span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            account.money = account.money - take;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            System.out.println(account.name+<span class="string">"账户余额为："</span>+account.money);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="keyword">this</span>.getName()+<span class="string">"取走了"</span>+take);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//结婚基金账户余额为：-50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//男人取走了50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//结婚基金账户余额为：-50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//女人取走了100</span></span></pre></td></tr></table></figure><p><strong>同步方法块的难点主要是确定synchronized的锁定对象，而这个对象的判断标准是：发生了增删改查的对象</strong></p></li></ul><h3 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h3><h4 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h4><p>多个线程各自占有一些共享资源，并且互相等待其他线程占有的资源才能运行，而导致两个或者多个线程都在等待对方释放资源，都停止执行的情形.某一个同步块同时拥有“两个以上对象的锁”时，就可能会发生“死锁”的问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//死锁：多个线程相互抱着对方需要的资源，然后形成僵持</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadLock</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Makeup girl1 = <span class="keyword">new</span> Makeup(<span class="number">0</span>,<span class="string">"灰姑娘"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Makeup girl2 = <span class="keyword">new</span> Makeup(<span class="number">1</span>,<span class="string">"白姑娘"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        girl1.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        girl2.start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//口红</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lipstick</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//镜子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mirror</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Makeup</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//需要的资源只有一份，用static来保证只有一份</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">static</span> Lipstick lipstick = <span class="keyword">new</span> Lipstick();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">static</span> Mirror mirror = <span class="keyword">new</span> Mirror();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> choice;  <span class="comment">//选择</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    String name; <span class="comment">//使用化妆品的人</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    Makeup(<span class="keyword">int</span> choice,String name)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.choice = choice;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            make();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> make<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (choice==<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">synchronized</span> (lipstick)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得口红的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">                Thread.sleep(<span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">synchronized</span> (mirror)&#123; <span class="comment">//一秒钟后需要镜子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">                    System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得镜子的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">synchronized</span> (mirror)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得镜子的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">                Thread.sleep(<span class="number">2000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">synchronized</span> (lipstick)&#123; <span class="comment">//一秒钟后需要镜子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">                    System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得口红的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">灰姑娘获得口红的锁🔒</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">白姑娘获得镜子的锁🔒</span></pre></td></tr></table></figure><p>这就形成了死锁</p><p>解决办法：把锁拿出来，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span> (lipstick)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得口红的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    Thread.sleep(<span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">synchronized</span> (mirror)&#123; <span class="comment">//一秒钟后需要镜子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得镜子的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">synchronized</span> (mirror)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得镜子的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Thread.sleep(<span class="number">2000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">synchronized</span> (lipstick)&#123; <span class="comment">//一秒钟后需要镜子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="keyword">this</span>.name+<span class="string">"获得口红的锁🔒"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><h4 id="Lock锁"><a href="#Lock锁" class="headerlink" title="Lock锁"></a>Lock锁</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lock</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Buy demo = <span class="keyword">new</span> Buy();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(demo).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buy</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                lock.lock();  <span class="comment">//上锁</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span> (ticketNums &gt; <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                        Thread.sleep(<span class="number">100</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">                        e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">                    System.out.println(ticketNums--);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            &#125;<span class="keyword">finally</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                    lock.unlock(); <span class="comment">//解锁</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>总结：synchronized 与Lock的对比</strong><br>Lock是显式锁（手动开启和关闭锁，别忘记关闭锁）synchronized是隐式锁，出了作用域自动释放<br>Lock只有代码块锁，synchronized有代码块锁和方法锁<br>使用Lock锁，JVM将花费较少的时间来调度线程，性能更好。并且具有更好的扩展性（提供更多的子类）<br>优先使用顺序：Lock&gt;同步代码块（已经进入了方法体，分配了相应资源）&gt;同步方法（在方法体之外）</p><h3 id="线程通信：生产者消费者模式"><a href="#线程通信：生产者消费者模式" class="headerlink" title="线程通信：生产者消费者模式"></a>线程通信：生产者消费者模式</h3><p>在生产者消费者问题中，仅有synchronized是不够的synchronized 可阻止并发更新同一个共享资源，实现了同步。但不能用来实现不同线程之间的消息传递（通信）</p><ul><li>wait()  表示线程一直等待，直到其他线程通知，与sleep不同，会释放锁</li><li>notify() 唤醒一个处于等待状态的线程</li></ul><h4 id="1-管程法"><a href="#1-管程法" class="headerlink" title="1.管程法"></a>1.管程法</h4><p>并发协作模型“生产者/消费者模式–&gt;管程法<br>生产者：负责生产数据的模块（可能是方法，对象，线程，进程）</p><p>消费者：负责处理数据的模块（可能是方法，对象，线程，进程）</p><p>缓冲区：消费者不能直接使用生产者的数据，他们之间有个十缓冲区生产者将生产好的数据放入缓冲区，消费者从缓冲区拿出数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPc</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Continer continer = <span class="keyword">new</span> Continer();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Productor(continer).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Customer(continer).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Productor</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    Continer continer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Productor<span class="params">(Continer continer)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.continer = continer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                continer.push(<span class="keyword">new</span> Chicken(i));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"生产者生产了第"</span>+i+<span class="string">"只鸡"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//消费者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    Continer continer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Customer<span class="params">(Continer continer)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.continer = continer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="string">"消费者消费了第"</span>+continer.pop().id+<span class="string">"只鸡"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//产品</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chicken</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> id;  <span class="comment">//产品编号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Chicken<span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Continer</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    Chicken[] chickens = <span class="keyword">new</span> Chicken[<span class="number">10</span>]; <span class="comment">//容器容量是十只鸡</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//容器的计数器</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//生产方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> push<span class="params">(Chicken chicken)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果容器满了</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(count == chickens.length)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//生产等待，通知消费者消费</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.wait();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果容器没满,计数器加一，然后把产品放入容器内</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        chickens[count] = chicken;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        count++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知消费者来消费</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.notifyAll();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//消费方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Chicken pop<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果容器内产品数量为零</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//等待生产者生产</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.wait();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//不为零，就计数器减一</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">        count--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//把消费者消费的那个产品保存下来并返回</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        Chicken chicken = chickens[count];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.notifyAll();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> chicken;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="2-信号灯法"><a href="#2-信号灯法" class="headerlink" title="2.信号灯法"></a>2.信号灯法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPc2</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        Light light = <span class="keyword">new</span> Light();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Car(light).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Passerby(light).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//汽车</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    Light light;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Car<span class="params">(Light light)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.light = light;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">this</span>.light.car();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                    e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//行人</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Passerby</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    Light light;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Passerby<span class="params">(Light light)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.light = light;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span> != <span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">this</span>.light.passerby();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">                    e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//信号灯</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Light</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//信号灯，true表示汽车可以通过（行人等待），false表示行人通过（汽车等待）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//汽车通过方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> car<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(flag)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"汽车通过，行人等待"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//通知行人等待</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.wait();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.flag = !flag;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果信号灯没亮,通知行人通过</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.notifyAll();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//行人通过方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> passerby<span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(flag)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//通知汽车通过</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.notifyAll();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.flag = !flag;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知汽车通过</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.wait();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"行人通过，汽车等待"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>其实就是加一个flag判断</p><h4 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h4><ul><li>背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程，对性能影响很大。</li><li>思路：提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。<br>可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。</li><li>好处：<ul><li>提高响应速度（减少了创建新线程的时间）</li><li>降低资源消耗（重复利用线程池中线程，不需要每次都创建）</li><li>便于线程管理（…）<ul><li>corePoolSize：核心池的大小</li><li>maximumPoolSize：最大线程数</li><li>keepAlive Time：线程没有任务时最多保持多长时间后会终止</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试线程池</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPc3</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//1.创建服务，创建线程池</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//参数是线程池的大小</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        ExecutorService service = Executors.newFixedThreadPool(<span class="number">10</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//执行runnable接口的实现类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        service.execute(<span class="keyword">new</span> MyThread());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        service.execute(<span class="keyword">new</span> MyThread());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        service.execute(<span class="keyword">new</span> MyThread());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        service.execute(<span class="keyword">new</span> MyThread());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//2.关闭链接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        service.shutdown();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Thread.currentThread().getName());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Thread;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//总结线程创建的方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewThread</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> MyThread1().start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread2()).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> FutureTask(<span class="keyword">new</span> MyThread3());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(futureTask).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        Integer integer = futureTask.get();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        System.out.println(integer);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.继承Thread</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="title">extends</span> <span class="title">Thread</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"实现Thread接口"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.实现Runnable接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"实现Runnable接口"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.实现Callable接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread3</span> <span class="title">implements</span> <span class="title">Callable</span>&lt;<span class="title">Integer</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Integer call<span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"实现Callable接口"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">100</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创建和引用</title>
      <link href="/%E7%96%91%E9%97%AE-new%E5%92%8C%E5%BC%95%E7%94%A8/"/>
      <url>/%E7%96%91%E9%97%AE-new%E5%92%8C%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><p>最近在看狂神的网络编程教程的时候看到狂神写了一行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> InetAddress();</span></pre></td></tr></table></figure><p>然后就亮起了红线，这就说明了InetAddress这个类是不能被构造的。但是Java中有这样一句话，Java中对于构造器有这样一句话：<strong>如果没有定义构造器，则会默认一个无参构造器，这就是为什么你定义了一个对象，比如 People，没有定义任何构造器却可以new这个对象,比如 new People() 。如果自定义了构造器，则会覆盖默认构造器。</strong></p><p>这就说明了无论我们有没有手动写构造器函数，我们都可以new一个对象。但是在这里就行不通。</p><p>去查了一下帮助文档，有这样一段代码 ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InetAddress getByName<span class="params">(String host)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">throws</span> UnknownHostException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> InetAddress.getAllByName(host)[<span class="number">0</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>这说明InetAdress类是静态方法的。而前面我们提到过：<strong>在static方法内部不能调用非静态方法，反过来是可以的。而且可以在没有创建任何对象的前提下，仅仅通过类本身来调用static方法。这实际上正是static方法的主要用途</strong></p><p>但是我想，难道这样就行得通了吗？既然它是在没有创建对象的前提下可以直接调用，那如果我非要new一个对象，为什么却出错了呢？</p><p>直到我在Java的接口中学到了这样一个知识点：<strong>接口不能被实例化，没有构造方法</strong></p><p>所以我就断定，getByName这个函数必定是在一个接口中，所以在创建对象的时候总是会出错，果不其然，这个函数在一个类中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InetAddress</span> <span class="title">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span></span></pre></td></tr></table></figure><p>进一步验证了我的猜想。原来绕了半天还是自己没有好好看帮助文档，没有消化每一句话的意思。。。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java原始类型和原始封装类型</title>
      <link href="/Java%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%A7%8B%E5%B0%81%E8%A3%85%E7%B1%BB%E5%9E%8B/"/>
      <url>/Java%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%A7%8B%E5%B0%81%E8%A3%85%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><p>今天在使用java定义一个栈的时候:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Stack&lt;<span class="keyword">int</span>&gt; s;</span></pre></td></tr></table></figure><p>出现了报错：<strong>type argument cannot be of primitive type</strong></p><p>这就引入了两个问题：</p><ul><li>什么是原始类型，什么是封装类型？</li><li>区别是什么？</li></ul><p>Java  提供两种不同的类型：引用类型和原始类型（或内置类型）。比如:Int是java的原始数据类型，Integer是java为int提供的封装类。Java为每个原始类型提供了封装类,常见的原始与对应的封装类如下:</p><table><thead><tr><th>原始类型</th><th>封装类</th></tr></thead><tbody><tr><td>boolean</td><td>Boolean</td></tr><tr><td>char</td><td>Character</td></tr><tr><td>byte</td><td>Byte</td></tr><tr><td>short</td><td>Short</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>long</td><td>Long</td></tr><tr><td>float</td><td>Float</td></tr><tr><td>double</td><td>Double</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络编程</title>
      <link href="/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>其实网络编程的过程就类似于信件。</p><p><img src="https://img02.sogoucdn.com/app/a/100520146/6b75c145e895877c561d185b89d8b2e2" alt=""></p><p>计算机网络是指将<strong>地理位置不同</strong>的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，再网路操作系统，网络管理软件及网络通信协议的管理和协调下，实现 资源共享和信息传递的计算机系统。</p><p><strong>网络编程的目的：</strong></p><p>传播交流信息，数据交换，通信…</p><p><img src="https://img03.sogoucdn.com/app/a/100520146/afcead76a338c3192708eea47b1f18d5" alt=""></p><p><strong>怎么做到？</strong></p><p> 1.如何定位一台主机?（192.168.16.124: “+端口号”）</p><p>在CMD下：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> www.baidu.com</span></pre></td></tr></table></figure><p> 2.找到后怎么去传输数据？</p><p>3.要素</p><ul><li>IP和端口号</li><li>网络通信协议 UDP/TCP</li></ul><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><p>ip地址：IntelAddress</p><ul><li><p>唯一定位一台网络上的计算机</p></li><li><p>127.0.0.1 : 本机localhost</p></li><li><p>ip分类：</p><ul><li>ipv4/ipv6<ul><li>IPV4 : 127.0.0.1, 四个字节（0-255）组成,45亿（北美独占30亿）</li><li>IPV6 :  2001:0bb2:aaaa:0015:0000:0000:1aaa:1312,八个无符号整数(128)</li></ul></li><li>公网（互联网）-私网（局域网）<ul><li>192.168.xx.xx,局域网，专门给组织机构使用</li></ul></li></ul></li><li><p>域名：记忆ip</p></li><li><p>获取ip</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//查询本地ip</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            InetAddress a = InetAddress.getByName(<span class="string">"127.0.0.1"</span>);  <span class="comment">//获得ip地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            System.out.println(a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            InetAddress b = InetAddress.getByName(<span class="string">"localhost"</span>);  <span class="comment">//本机ip</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            System.out.println(b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            InetAddress c = InetAddress.getLocalHost(); <span class="comment">//本机名字</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            System.out.println(c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//查询网址ip</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            InetAddress e = InetAddress.getByName(<span class="string">"www.baidu.com"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            System.out.println(e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//常用方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            System.out.println(e.getCanonicalHostName());  <span class="comment">//获取规范的名字</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            System.out.println(e.getHostAddress());  <span class="comment">//ip</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            System.out.println(e.getHostName());  <span class="comment">//域名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">catch</span>(UnknownHostException e)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            e.printStackTrace();  <span class="comment">//如果出错就返回错误</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>  <strong>端口表示计算机上的一个程序的进程</strong>，举一个形象的比喻：一栋楼就是一个ip地址，一栋楼中的每一户人家的门就是一个个的端口号。</p><ul><li><p>不同的进程有不同的端口号，用来区分软件</p></li><li><p>电脑的端口号被规定数量是0～65535（理想化）</p></li><li><p>TCP/UDP ：65535*2，单个协议下，端口号不能重复（比如TCP用了一个80端口，那么UDP就不能再用了）</p></li><li><p>端口分类</p><ul><li><p>公有端口：0~1023</p><ul><li>HTTP：80</li><li>HTTPS：443</li><li>FTP：21</li><li>Telent ：23</li></ul></li><li><p>程序注册端口：1024-49151（分配给用户或者程序）</p><ul><li>Tomcat：8080</li><li>MySQL：3306</li><li>Oracle：1521</li></ul></li><li><p>动态、私有：49152~65535</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">netstat -nao  #查看所有端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">netstat -ano <span class="built_in">findstr</span> "<span class="number">5900</span>" #查看指定的端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">tasklist|<span class="built_in">findstr</span> "" #查看某个端口被什么占用了</span></pre></td></tr></table></figure></li><li><pre><code class="java"><span class="keyword">package</span> javase;<span class="keyword">import</span> java.net.InetSocketAddress;<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>{        InetSocketAddress a = <span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>,<span class="number">8080</span>);        System.out.println(a);        System.out.println(a.getAddress());<span class="comment">//返回地址+端口</span>        System.out.println(a.getHostName());<span class="comment">//返回地址</span>        System.out.println(a.getPort()); <span class="comment">//返回端口</span>    }}&lt;!--￼<span class="number">3</span>--&gt;</code></pre></li></ul></li></ul><p>服务器</p><p>1.首先建立服务端口ServerSocket</p><p>2.等待客户端连接accept</p><p>3.然后读取客户端发送过来的信息getInputStream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Tcpdemo;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.Socket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//服务端</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TcpSever</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    ServerSocket serverSocket = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    Socket socket = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    InputStream is = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    ByteArrayOutputStream bos = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//1.首先要有一个地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9999</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//2.等待客户端连接过来</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            socket = serverSocket.accept(); <span class="comment">//监听到客户端的socket后建立连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//3.读取客户端的消息</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            is = socket.getInputStream();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//管道流</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            bos = <span class="keyword">new</span> ByteArrayOutputStream();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">int</span> len;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">while</span>((len=is.read(buffer))!=-<span class="number">1</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">                bos.write(buffer,<span class="number">0</span>,len); <span class="comment">//从0到len写入</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            System.out.println(bos.toString());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (IOException ioException) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            ioException.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//关闭资源</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">                bos.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">                is.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">                socket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">                serverSocket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><p><strong>发送消息</strong></p><p>服务端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.UdpClientdemo;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//还是要等待客户端的连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpServerdemo1</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//开放端口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">9090</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//接收数据包</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buffer,<span class="number">0</span>,buffer.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        socket.receive(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="keyword">new</span> String(packet.getData()));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        socket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.UdpClientdemo;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UdpClientdemo1</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//建立一个Socket</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">8080</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//建个包</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        String msg = <span class="string">"你好服务端"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//发送目标</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        InetAddress localhost = InetAddress.getByName(<span class="string">"localhost"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> port = <span class="number">9090</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(msg.getBytes(),<span class="number">0</span>,msg.getBytes().length,localhost,port);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//发送包</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        socket.send(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//关闭</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        socket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>循环发送</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//服务端</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">person1</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">6666</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//准备接受包裹</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">byte</span>[] container = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(container, <span class="number">0</span>, container.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        socket.receive(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//断开连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">byte</span>[] data = packet.getData();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        String receiveData = <span class="keyword">new</span> String(data,<span class="number">0</span>,data.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        System.out.println(receiveData);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(receiveData.equals(<span class="string">"bye"</span>))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    socket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">person2</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">8888</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            String s = reader.readLine();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">byte</span>[] data = s.getBytes();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(data, <span class="number">0</span>, data.length, <span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">6666</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            socket.send(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(data.equals(<span class="string">"bye"</span>))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        socket.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>实现多线程聊天</strong></p><p><img src="https://img02.sogoucdn.com/app/a/100520146/7e8793a8667a5fa3980f6edbf5fb467f" alt=""></p><p>接受方</p><ul><li>1.通过构造器初始化参数</li><li>2.准备接受包DatagramPacket</li><li>3.开始解析包String，并输出</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">talkreceive</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;  <span class="comment">//实现多线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    DatagramSocket socket = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> String msgFrom;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> talkreceive<span class="params">(<span class="keyword">int</span> port,String msgFrom)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.port = port;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.msgFrom = msgFrom;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            socket = <span class="keyword">new</span> DatagramSocket(port);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">                <span class="comment">//准备接受包裹</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">byte</span>[] container = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">                DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(container, <span class="number">0</span>, container.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">                socket.receive(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                <span class="comment">//断开连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">byte</span>[] data = packet.getData();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">                String receiveData = <span class="keyword">new</span> String(data,<span class="number">0</span>,data.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                System.out.println(msgFrom+ <span class="string">"："</span> + receiveData);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span>(receiveData.equals(<span class="string">"bye"</span>))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            &#125;<span class="keyword">catch</span>(IOException e)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>发送方</p><ul><li>1.DatagramSocket连接</li><li>2.从控制台读取输入信息InputStreamReader</li><li>3.解析输入信息，发送包</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.SocketException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">talksend</span> <span class="title">implements</span> <span class="title">Runnable</span></span>&#123;  <span class="comment">//实现多线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    DatagramSocket socket = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    BufferedReader reader = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fromPort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> String toIP;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> toPort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> talksend<span class="params">(<span class="keyword">int</span> fromIp, String toIP, <span class="keyword">int</span> toPort)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.fromPort = fromPort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.toIP = toIP;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.toPort = toPort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            socket = <span class="keyword">new</span> DatagramSocket(fromPort);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> run<span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            String s = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">                s = reader.readLine();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">byte</span>[] data = s.getBytes();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">                DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(data, <span class="number">0</span>, data.length, <span class="keyword">new</span> InetSocketAddress(<span class="keyword">this</span>.toIP, <span class="keyword">this</span>.toPort));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">                socket.send(packet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span> (data.equals(<span class="string">"bye"</span>)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (IOException ioException) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                ioException.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>person1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">talkstudent</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//开启两个线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> talksend(<span class="number">7777</span>,<span class="string">"localhost"</span>,<span class="number">9999</span>)).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> talkreceive(<span class="number">8888</span>,<span class="string">"老师"</span>)).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>person2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.chatting;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">talkteacher</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//开启两个线程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> talksend(<span class="number">5555</span>,<span class="string">"localhost"</span>,<span class="number">8888</span>)).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> talkreceive(<span class="number">9999</span>,<span class="string">"学生"</span>)).start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>至此，也算是学完了基于TCP/UDP协议的通信，现在就来总结一下：</p><p><strong>UDP:</strong></p><ul><li><p>发送方</p><ul><li>1.通过端口创建一个DatagramSocket连接</li><li>2.创建一个BufferedReader对象来接收InputStreamReader对象里面的输入</li><li>3.读取信息，并把它转换成字节流</li><li>4.创建一个DatagramPacket对象的包</li><li>5.发送包</li></ul><p>但是总结之后，无非就是两步：开放端口，发送包</p></li><li><p>接收方</p><ul><li>1.通过端口创建一个DatagramSocket连接</li><li>2.创建一个DatagramSocket包，用来接受发送端发送过来的信息</li><li>3.通过getData获取包的数据，然后解析成字符串String，并打印出来</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo图片无法加载</title>
      <link href="/hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD/"/>
      <url>/hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h4 id="图片不显示"><a href="#图片不显示" class="headerlink" title="图片不显示"></a>图片不显示</h4><p>在使用过程中，会发现有的引用图片无法显示的问题。但是如果直接复制图片地址到浏览器打开的话显示正常,403 forbidden，说明了这个网络资源这样获取是被拒绝的，那么通过简单的百度，找到了相关的解决方法，并去实际尝试：</p><p><strong>解决办法</strong> :只需要在文章的头部加上 <meta name="referrer" content="no-referrer" /></p><p>但是这样一个一个的修改有些麻烦，不如直接修改文章模板，一劳永逸.</p><p>找到blog根目录下的scaffolds，打开后在post.md文件中修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">date: &#123;&#123; date &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">tags:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">description: </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;referrer&quot; content&#x3D;&quot;no-referrer&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span></pre></td></tr></table></figure><p>即可,亲测有效.</p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GUI</title>
      <link href="/GUI/"/>
      <url>/GUI/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>核心技术：Swing和AWT</p><h4 id="AWT"><a href="#AWT" class="headerlink" title="AWT"></a>AWT</h4><p>1.包含很多类和接口</p><p>2.元素：窗口，文本框，按钮</p><p><strong>frame(窗口)</strong></p><p><strong>panel(面板)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">frameclass</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Panel panel = <span class="keyword">new</span> Panel();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//设置布局</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        box.setLayout(<span class="keyword">null</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//可视化（默认为false）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">500</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        box.setBackground(Color.white);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        panel.setBounds(<span class="number">50</span>,<span class="number">50</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        panel.setBackground(Color.black);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        box.add(panel);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//监听事件,监听窗口关闭事件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//适配器模式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        box.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//窗口点击关闭的时候要做的事情</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> windowClosing<span class="params">(WindowEvent e)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                System.exit(<span class="number">0</span>);<span class="comment">//结束进程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>布局管理器</strong></p><ul><li>流式布局FlowLayout</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">flowlayout</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//组件：按钮</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Button button1 = <span class="keyword">new</span> Button(<span class="string">"1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Button button2 = <span class="keyword">new</span> Button(<span class="string">"2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//设置为流式布局</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        box.setLayout(<span class="keyword">new</span> FlowLayout()); <span class="comment">//默认是(CENTER, 5, 5)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        box.setBackground(Color.white);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        box.add(button1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.add(button2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>东南西北中BorderLayout</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">borderlayout</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Button east = <span class="keyword">new</span> Button(<span class="string">"east"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Button west = <span class="keyword">new</span> Button(<span class="string">"west"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Button north = <span class="keyword">new</span> Button(<span class="string">"north"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        Button south = <span class="keyword">new</span> Button(<span class="string">"south"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Button center = <span class="keyword">new</span> Button(<span class="string">"center"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        box.add(east,BorderLayout.EAST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        box.add(west,BorderLayout.WEST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        box.add(north,BorderLayout.NORTH);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.add(south,BorderLayout.SOUTH);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        box.add(center,BorderLayout.CENTER);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        box.setBackground(Color.white);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>表格布局Grid</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gridtest</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Button btn1 = <span class="keyword">new</span> Button(<span class="string">"btn1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Button btn2 = <span class="keyword">new</span> Button(<span class="string">"btn2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Button btn3 = <span class="keyword">new</span> Button(<span class="string">"btn3"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        Button btn4 = <span class="keyword">new</span> Button(<span class="string">"btn4"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Button btn5 = <span class="keyword">new</span> Button(<span class="string">"btn5"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        Button btn6 = <span class="keyword">new</span> Button(<span class="string">"btn6"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        box.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">4</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.add(btn1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        box.add(btn2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        box.add(btn3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        box.add(btn4);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        box.add(btn5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        box.add(btn6);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//box.pack(); 自动填充大小</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        box.setBackground(Color.white);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>总结后可以完成：</p><p><img src="https://img03.sogoucdn.com/app/a/100520146/ae2cb09f2de588c71cfcc43e36aa1fcc" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.border.Border;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gridtest</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//总框架：上下</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        box.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//四个面板</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        Panel panel1 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> BorderLayout());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        Panel panel2 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        Panel panel3 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> BorderLayout());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        Panel panel4 = <span class="keyword">new</span> Panel(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">2</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//上部分</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        panel1.add(<span class="keyword">new</span> Button(<span class="string">"East"</span>),BorderLayout.EAST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        panel1.add(<span class="keyword">new</span> Button(<span class="string">"WEST"</span>),BorderLayout.WEST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        panel2.add(<span class="keyword">new</span> Button(<span class="string">"p2-btn-1"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        panel2.add(<span class="keyword">new</span> Button(<span class="string">"p2-btn-2"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        panel1.add(panel2,BorderLayout.CENTER);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//下部分</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        panel3.add(<span class="keyword">new</span> Button(<span class="string">"East"</span>),BorderLayout.EAST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        panel3.add(<span class="keyword">new</span> Button(<span class="string">"WEST"</span>),BorderLayout.WEST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        panel4.add(<span class="keyword">new</span> Button(<span class="string">"p4-btn-1"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        panel4.add(<span class="keyword">new</span> Button(<span class="string">"p4-btn-2"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        panel4.add(<span class="keyword">new</span> Button(<span class="string">"p4-btn-3"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        panel4.add(<span class="keyword">new</span> Button(<span class="string">"p4-btn-4"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        panel3.add(panel4,BorderLayout.CENTER);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        box.add(panel1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        box.add(panel3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">600</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        Button btn = <span class="keyword">new</span> Button();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        mylilstener listener = <span class="keyword">new</span> mylilstener();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        btn.addActionListener(listener);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        windowclose(box);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.add(btn,BorderLayout.CENTER);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//窗口关闭</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> windowclose<span class="params">(Frame frame)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> windowClosing<span class="params">(WindowEvent e)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                System.exit(<span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//按钮按下的事件监听</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mylilstener</span> <span class="title">implements</span>  <span class="title">ActionListener</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> actionPerformed<span class="params">(ActionEvent e)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"asf"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>还可以多个按钮同时使用一个监听事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.*;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//两个按钮，实现同一个监听</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        Frame box = <span class="keyword">new</span> Frame(<span class="string">"开始-暂停"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Button btn1 = <span class="keyword">new</span> Button(<span class="string">"start"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Button btn2 = <span class="keyword">new</span> Button(<span class="string">"stop"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        mylistener e = <span class="keyword">new</span> mylistener();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        btn1.addActionListener(e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        btn2.addActionListener(e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        box.add(btn1,BorderLayout.NORTH);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        box.add(btn2,BorderLayout.SOUTH);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        windowclose(box);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        box.setVisible(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        box.setBounds(<span class="number">800</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> windowclose<span class="params">(Frame frame)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> windowClosing<span class="params">(WindowEvent e)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                System.exit(<span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个按钮只用这一个监听事件即可，然后进行判断即可</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mylistener</span> <span class="title">implements</span> <span class="title">ActionListener</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> actionPerformed<span class="params">(ActionEvent e)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"按钮被点击"</span>+e.getActionCommand()); <span class="comment">//getActionCommand可以获取按钮信息</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(e.getActionCommand().equals(<span class="string">"start"</span>))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>输入框监听</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/java/"/>
      <url>/java/</url>
      
        <content type="html"><![CDATA[<h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">System.out.println();</span></pre></td></tr></table></figure><p>就是调用System类里面的out对象里面的println方法</p><p>println方法输出之后会换行，print则不会</p><p>在一个类中，方法的定义就是 访问修饰符+返回值类型+方法名(参数列表),与python中的概念相同,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> m=<span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> n=<span class="number">3</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//实参，要传入实际的参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> c = hello.add(m,n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> d = hello.max(m,n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        System.out.println(c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        System.out.print(d);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//形参，形式参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> add<span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;  <span class="comment">//两数相加方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> a+b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> max<span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;  <span class="comment">//取最大值方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> a&gt;b?a:b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>方法的重载</strong></p><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数，比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> max<span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;  <span class="comment">//取最大值方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> a&gt;b?a:b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> max<span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>由此，方法可以有无数多个重名的，但是必须要保证参数类型不同</p><h4 id="类和对象："><a href="#类和对象：" class="headerlink" title="类和对象："></a>类和对象：</h4><p>类就是一类具有共性的事物，对象就是对其中一个事物的具体化。比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;  <span class="comment">//人就是一个类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//属性</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    String name; <span class="comment">//人的名字</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> age;  <span class="comment">//人的年龄</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> say<span class="params">()</span></span>&#123;<span class="comment">//这个人说了什么</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>那么我们就可以在main函数中把这一个类具体化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        Person student = Person(); <span class="comment">//这里的student就是一个实例化后的对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>构造器</strong></p><p>一个类就算什么都不写，也会有一个方法，称为构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>相当于:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> Person&#123;<span class="comment">//注意，是没有返回值的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>注意</strong></p><p>1.必须和类的名字相同</p><p>2.必须没有返回值类型，也不能写void</p><p><strong>new一个对象的本质就是调用构造器</strong></p><p><strong>构造器用来初始化值</strong></p><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><p>继承形式类似于人类社会中子女对父母财产的继承，是财产的叠加.其结构像是树结构，根叫做父类，其下的都称为派生类（子类）</p><p><strong>extends</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="title">extends</span> <span class="title">Person</span> </span>&#123; <span class="comment">//子类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> say<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"我是一名学生"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> test<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        say();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.say();  <span class="comment">//this指针，指向本程序的student类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">super</span>.say(); <span class="comment">//super是指向student类的父类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123; <span class="comment">//父类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> say<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"我是一个人"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        Student student = <span class="keyword">new</span> Student();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        student.say();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        student.test();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        Person s2 = <span class="keyword">new</span> Student();<span class="comment">//父类的引用指向了子类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        s2.say();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        s1.say();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>现实中，比如我们按下 F1 键这个动作：</p><ul><li>如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；</li><li>如果当前在 Word 下弹出的就是 Word 帮助；</li><li>在 Windows 下弹出的就是 Windows 帮助和支持。</li></ul><p>同一个事件发生在不同的对象上会产生不同的结果，这就是java的多态。</p><p>比如上面的程序中都是new了一个学生对象，但是却有不同的表现形式。</p><p><strong>Static</strong></p><p>static方法就是没有this的方法。在static方法内部不能调用非静态方法，反过来是可以的。而且可以在没有创建任何对象的前提下，仅仅通过类本身来调用static方法。这实际上正是static方法的主要用途。</p><p>一句话简单来说：使用static就是<strong>方便在没有创建对象的情况下来进行调用（方法/变量）</strong></p><h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><p><strong>抛出异常</strong></p><p><strong>捕获异常</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main<span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span>&#123;<span class="comment">//try监控区域</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            System.out.println(a/b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">catch</span>(ArithmeticException e)&#123;<span class="comment">//捕获异常</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"程序异常，被除数不能是0"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">finally</span>&#123;<span class="comment">//处理善后（无论有没有捕获到异常都会执行finally代码块的语句）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"finally"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="接口I"><a href="#接口I" class="headerlink" title="接口I"></a>接口I</h4><ul><li>什么是接口？</li></ul><p><strong>接口的本质是契约，一种约束</strong></p><p>demo:接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Idemo;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//interface关键字，接口都需要有实现类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//所有定义的属性其实都是常量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> n = <span class="number">10</span>;<span class="comment">//但是一般都不会在接口中定义属性</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//接口的所有定义的方法其实都是抽象的public obstract</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> add<span class="params">(String name)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> delete<span class="params">(String name)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> update<span class="params">(String name)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> query<span class="params">(String name)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>demo:接口的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javase.Idemo;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现接口的类，需要重写接口的方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以利用接口实现“多继承”，一个类可以写入多个接口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="title">implements</span>  <span class="title">UserService</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> add<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> delete<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> update<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> query<span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>接口的作用:</strong></p><p>1.约束</p><p>2.定义一些方法，让不同的人实现</p><p>3.方法都是public abstract</p><p>4.接口不能被实例化，没有构造方法</p><p>5.implements可以实现多个接口</p><p>6.必须要重写接口中的方法</p><h4 id="IO流对象"><a href="#IO流对象" class="headerlink" title="IO流对象"></a>IO流对象</h4><h5 id="IO流的分类"><a href="#IO流的分类" class="headerlink" title="IO流的分类"></a>IO流的分类</h5><ul><li>根据处理数据类型的不同分为：字符流和字节流</li><li>根据数据流向的不同分为：输入流和输出流</li></ul><p><strong>字节流和字符流</strong></p><p>字符流的由来： 因为数据编码的不同，而有了对字符进行高效操作的流对象。本质其实就是基于字节流读取时，去查了指定的码表。字节流和字符流的区别：</p><p>（1）读写单位不同：字节流以字节（8bit）为单位，字符流以字符为单位，根据码表映射字符，一次可能读多个字节。</p><p>（2）处理对象不同：字节流能处理所有类型的数据（如图片、avi等），而字符流只能处理字符类型的数据。</p><p>（3）字节流在操作的时候本身是不会用到缓冲区的，是文件本身的直接操作的；而字符流在操作的时候下后是会用到缓冲区的，是通过缓冲区来操作文件，我们将在下面验证这一点。</p><p>结论：优先选用字节流。首先因为硬盘上的所有文件都是以字节的形式进行传输或者保存的，包括图片等内容。但是字符只是在内存中才会形成的，所以在开发中，字节流使用广泛。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三件套</title>
      <link href="/%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
      <url>/%E4%B8%89%E4%BB%B6%E5%A5%97/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><a id="more"></a><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>学习路线：HTML5——CSS3——Javascript</p><p>结构写到HTML文件中，样式写到CSS中，行为写到JavaScript中</p><h3 id="HTML——身体"><a href="#HTML——身体" class="headerlink" title="HTML——身体"></a>HTML——身体</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><strong>首先</strong>：HTML语言只是一套“标签”而已，它可以加入图片、声音、多媒体等内容，还可以从一个文件跳转到另一个文件，与各主机的文件连接。</p><p><strong>常用浏览器</strong></p><table><thead><tr><th align="center">浏览器</th><th>内核</th><th>备注</th></tr></thead><tbody><tr><td align="center">IE</td><td>Trident</td><td>IE、百度、360</td></tr><tr><td align="center">Firefox</td><td>Gecko</td><td>火狐浏览器</td></tr><tr><td align="center">Safari</td><td>Webkit</td><td>苹果浏览器</td></tr><tr><td align="center">Chrome/Opera</td><td>Blink</td><td>WebKit的分支</td></tr></tbody></table><p><strong>HTML骨架</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html&gt;</span>//文档的根标签</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;title&gt;</span><span class="tag">&lt;/title&gt;</span>//文档的标题</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/head&gt;</span>//文档的头部</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;body&gt;</span><span class="tag">&lt;/body&gt;</span>//文档的主体</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h4 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h4><h5 id="1-1标题标签"><a href="#1-1标题标签" class="headerlink" title="1.1标题标签"></a>1.1标题标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h1&gt;</span>一级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h2&gt;</span>二级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h3&gt;</span>三级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h4&gt;</span>四级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h5&gt;</span>五级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h6&gt;</span>六级标题<span class="tag">&lt;/h1&gt;</span></span></pre></td></tr></table></figure><h5 id="1-2段落标签和换行标签"><a href="#1-2段落标签和换行标签" class="headerlink" title="1.2段落标签和换行标签"></a>1.2段落标签和换行标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;p&gt;</span>段落标签<span class="tag">&lt;/p&gt;</span>//会根据窗口大小自动换行且段落之间会保有空隙</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;br/&gt;</span>//单标签换行标签，强制换行</span></pre></td></tr></table></figure><h5 id="1-3文本格式化标签"><a href="#1-3文本格式化标签" class="headerlink" title="1.3文本格式化标签"></a>1.3文本格式化标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">加粗：<span class="tag">&lt;strong&gt;</span><span class="tag">&lt;/strong&gt;</span>或者<span class="tag">&lt;b&gt;</span><span class="tag">&lt;/b&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">倾斜：<span class="tag">&lt;em&gt;</span><span class="tag">&lt;/em&gt;</span>或者<span class="tag">&lt;i&gt;</span><span class="tag">&lt;/i&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">删除线：<span class="tag">&lt;del&gt;</span><span class="tag">&lt;/del&gt;</span>或者<span class="tag">&lt;s&gt;</span><span class="tag">&lt;/s&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">下划线：<span class="tag">&lt;ins&gt;</span><span class="tag">&lt;/ins&gt;</span>或者<span class="tag">&lt;u&gt;</span><span class="tag">&lt;/u&gt;</span></span></pre></td></tr></table></figure><h5 id="1-4div和span"><a href="#1-4div和span" class="headerlink" title="1.4div和span"></a>1.4div和span</h5><p>div：独占一行，可以看成一个大盒子，在里面装填内容，比如在这个首页中，每一个框都可以看成是一个div盒子</p><p>span：一行可以写多个，可以看成一个小盒子</p><p><img src="https://img02.sogoucdn.com/app/a/100520146/720b5e24a1282b1aa90c2aabc66bb5c8" alt="demo"></p><h5 id="1-5图像标签和路径"><a href="#1-5图像标签和路径" class="headerlink" title="1.5图像标签和路径"></a>1.5图像标签和路径</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;img src = "图像路径" alt = "替换文本(图片显示不出来的时候用这里的文字替换)" title = "光标指向图片的时候现实的辅助文字"/&gt;</span></span></pre></td></tr></table></figure><h5 id="1-6超链接路径"><a href="#1-6超链接路径" class="headerlink" title="1.6超链接路径"></a>1.6超链接路径</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;a href = "跳转目标" target = "打开的方式(_self为默认值，_blank是在新窗口打开)"&gt;</span>这里是点击的对象<span class="tag">&lt;/a&gt;</span></span></pre></td></tr></table></figure><h5 id="1-7特殊字符"><a href="#1-7特殊字符" class="headerlink" title="1.7特殊字符"></a>1.7特殊字符</h5><table><thead><tr><th>特殊字符</th><th>描述</th><th>字符代码</th></tr></thead><tbody><tr><td>&amp;lt</td><td>小于号</td><td>&lt;</td></tr><tr><td>&amp;gt</td><td>大于号</td><td>&gt;</td></tr><tr><td>&amp;amp</td><td>和号</td><td>&amp;</td></tr><tr><td>&amp;reg</td><td>注册</td><td>®</td></tr><tr><td>&amp;trade</td><td>商标</td><td>™</td></tr><tr><td>&amp;nbsp</td><td>空白符</td><td></td></tr></tbody></table><h5 id="1-8表格标签"><a href="#1-8表格标签" class="headerlink" title="1.8表格标签"></a>1.8表格标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;table&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr&gt;</span>//表格中的行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;th&gt;</span>单元格里面的文字<span class="tag">&lt;/th&gt;</span>//这个是表头单元格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td&gt;</span>表格内容<span class="tag">&lt;/td&gt;</span>//表格中的单元格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/table&gt;</span></span></pre></td></tr></table></figure><p>表格标签具有的属性：</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center、right</td><td>对齐方式</td></tr><tr><td>border</td><td>边框的像素大小(正数)</td><td>规定表格是否有边框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>单元边沿与内容之间的留白</td></tr><tr><td>cellspacing</td><td>像素值</td><td>单元格之间的空白</td></tr><tr><td>width</td><td>像素值或百分比</td><td>表格的宽度</td></tr></tbody></table><p>表格的结构标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;table&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;thead&gt;</span>//头部区域</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span>//表格中的行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">             <span class="tag">&lt;th&gt;</span>单元格里面的文字<span class="tag">&lt;/th&gt;</span>//这个是表头单元格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/thead&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tbody&gt;</span>//内容区域</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>表格内容<span class="tag">&lt;/td&gt;</span>//表格中的单元格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tbody&gt;</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/table&gt;</span></span></pre></td></tr></table></figure><p>合并单元格：</p><ul><li><p>跨行合并：rowspan = “合并单元格的个数”</p></li><li><p>跨列合并：colspan = “合并单元格的个数”</p><p><strong>demo_个人简历</strong>比如写一个个人简历：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;table border="1px" cellspacing="0px"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td colspan="7" align="center"&gt;</span>个人简历<span class="tag">&lt;/td&gt;</span><span class="comment">&lt;!--colspan='x'代表这一个单元格占据x个单元格的宽度--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span><span class="comment">&lt;!--设置单元格的高度--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>姓名<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>性别<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>年龄<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td rowspan="4" align="center"&gt;</span>照片<span class="tag">&lt;/td&gt;</span><span class="comment">&lt;!--同理，代表一列占多少个单元格--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>学历<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>籍贯<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td colspan="3" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>电话<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>政治面貌<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td colspan="3" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>毕业院校<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td colspan="5" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;tr height=<span class="string">'40px'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td width="100px" align="center"&gt;</span>求职意向<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;td colspan="6" align="center"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/table&gt;</span></span></pre></td></tr></table></figure><h5 id="1-9列表标签"><a href="#1-9列表标签" class="headerlink" title="1.9列表标签"></a>1.9列表标签</h5><p>表格是用来显示数据，而列表是用来布局的.可使布局整齐有序</p><ul><li><p>无序列表</p><p>应用：</p><p><img src="https://img04.sogoucdn.com/app/a/100520146/0041aa433700449687386abe6b7f6423" alt=""></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;ul&gt;</span>//无序列表项目（ul里面只能嵌套li标签）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;li&gt;</span><span class="tag">&lt;/li&gt;</span>//列表项（而li标签相当于一个容器，可以容纳所有元素）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;li&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/ul&gt;</span></span></pre></td></tr></table></figure><ul><li>有序列表</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;ol&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;li&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;li&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/ol&gt;</span></span></pre></td></tr></table></figure><ul><li><p>自定义列表</p><p>应用：</p><p><img src="https://img04.sogoucdn.com/app/a/100520146/a1cfd43383dfaed9f9894bb93be6d87c" alt=""></p><p>比如写上面第一列的列表，如下：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;dl&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;dt&gt;</span>帮助中心<span class="tag">&lt;/dt&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;dd&gt;</span>账户管理<span class="tag">&lt;/dd&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;dd&gt;</span>购物指南<span class="tag">&lt;/dd&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;dd&gt;</span>订单操作<span class="tag">&lt;/dd&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/dl&gt;</span></span></pre></td></tr></table></figure><h5 id="1-10表单信息"><a href="#1-10表单信息" class="headerlink" title="1.10表单信息"></a>1.10表单信息</h5><p>应用场景：</p><p><img src="https://img04.sogoucdn.com/app/a/100520146/ea494f608dac737bc4f9ee4d9f212e77" alt=""></p><p>主要目的就是为了收集用户信息，由三部分组成：表单域、表单控件、提示信息</p><p><img src="https://img03.sogoucdn.com/app/a/100520146/61cc106d99d1072ebbd2199aea68d978" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;form action="url地址（用于指定接受并处理表单数据的服务器程序的url地址）" method="提交方式（get/post）" name="表单域名称"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;input type="属性值(button:按钮;text:文本框;password:密码字段，输入的字符可以被掩码;submit:提交按钮;radio:定义单选按钮;checkbox:多选框;value:表单框里面的提示信息)"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/form&gt;</span></span></pre></td></tr></table></figure><p>上面的属性中存在一个问题，就是当需要单选框的时候（比如性别的男和女只能选择一个）却能够都选上。这时候就应该设置相同的name值,比如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">性别：男<span class="tag">&lt;input type="radio" name="sex"&gt;</span>女<span class="tag">&lt;input type="radio" name="sex"&gt;</span></span></pre></td></tr></table></figure><p>由此我们可以预见，name值相同的radio类型的input只能同时存在一个，不同的则可以存在多个</p><p>单选框和复选框如果想要处于默认选中的状态，则应该令checked = “checked”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;input type="" name="" value="" checked = "checked"/&gt;</span></span></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可点击按钮</td></tr><tr><td>checkbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，供文件上传</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码字段，该字段的字符会被掩码</td></tr><tr><td>radio</td><td>定义单选按钮</td></tr><tr><td>reset</td><td>定义重置按钮，会清空表单中的所有数据</td></tr><tr><td>submit</td><td>定义提交按钮，会把数据提交到服务器</td></tr><tr><td>text</td><td>定义单行的输入字段，默认宽度20</td></tr></tbody></table><p><strong>扩展：label</strong></p><p>label标签用于绑定一个表单元素，当点击标签内的文本的时候，浏览器会自动将焦点(光标)转到或者选择对应的表单元素上，用来增加用户体验。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;input type="radio" name="sex" id="man"/&gt;</span><span class="tag">&lt;label for="man"&gt;</span>男<span class="tag">&lt;/label&gt;</span></span></pre></td></tr></table></figure><p><strong>扩展：下拉菜单select</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">地区:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;option&gt;</span>北京<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;option&gt;</span>上海<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;option&gt;</span>广东<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/select&gt;</span></span></pre></td></tr></table></figure><p><strong>扩展：文本域</strong></p><p>文本输入框text可输入的最大长度是20个，但是当我们需要输入很多文字的时候就需要文本域了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">留言板:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;textarea&gt;</span><span class="tag">&lt;/textarea&gt;</span></span></pre></td></tr></table></figure><p>学了上面的知识，我们可以写一个demo，不妨先自己尝试着写一下:</p><p><strong>demo_注册界面</strong></p><p><img src="https://img02.sogoucdn.com/app/a/100520146/f452171f9a3005bb42786c495862cf64" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;h3&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/h3&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;table width="500px"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>性别:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="radio" name="sex" id="nan"&gt;</span><span class="tag">&lt;label for="nan"&gt;</span>男<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="radio" name="sex" id="girl"&gt;</span><span class="tag">&lt;label for="girl"&gt;</span>女<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>生日:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>-选择年份-<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>1999<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>2000<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>-选择月份-<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>01<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>02<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>-选择日期-<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>01<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;option&gt;</span>02<span class="tag">&lt;/option&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/select&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>所在地区:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;input type="text"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>婚姻状况:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="radio" name="marry" id="no"&gt;</span><span class="tag">&lt;label for="no"&gt;</span>未婚<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="radio" name="marry" id="yes"&gt;</span><span class="tag">&lt;label for="yes"&gt;</span>已婚<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="radio" name="marry" id="married"&gt;</span><span class="tag">&lt;label for="married"&gt;</span>离婚<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>喜欢类型:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="checkbox" name="one" id="1"&gt;</span><span class="tag">&lt;label for="1"&gt;</span>可爱<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="checkbox" name="two" id="2"&gt;</span><span class="tag">&lt;label for="2"&gt;</span>御姐<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="checkbox" name="three" id="3"&gt;</span><span class="tag">&lt;label for="3"&gt;</span>妩媚<span class="tag">&lt;/label&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span>自我介绍:<span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;textarea&gt;</span><span class="tag">&lt;/textarea&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;input type="submit" value="免费注册"&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;input type="checkbox" checked="checked"&gt;</span><span class="tag">&lt;label&gt;</span>我同意注册条款和会员加入标准<span class="tag">&lt;/label&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;a href="#"&gt;</span>我是会员，立即登录<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span><span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;td&gt;</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;h3&gt;</span>我承诺<span class="tag">&lt;/h3&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;li&gt;</span>年满18岁、单身<span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;li&gt;</span>抱着严肃态度<span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;li&gt;</span>真诚寻找另一半<span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/td&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/tr&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/table&gt;</span></span></pre></td></tr></table></figure><h3 id="CSS-——-衣服"><a href="#CSS-——-衣服" class="headerlink" title="CSS —— 衣服"></a>CSS —— 衣服</h3><p>简单来说，CSS主要由两个部分组成 : 选择器以及一条或多条声明</p><p>选择器是用于指定样式的HTML标签，而花括号内则是对该对象的具体样式设置。</p><p><img src="https://img03.sogoucdn.com/app/a/100520146/e67ad077761b81ab31d249871351ad03" alt=""></p><p>CSS的代码写在<style>中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    这里是样式修改区域</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/style&gt;</span></span></pre></td></tr></table></figure><p>当然style属性也可以写在标签内部，但是不推荐使用</p><h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><p>选择器具有优先级，越精确的优先级最高</p><h5 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h5><table><thead><tr><th>选择器</th><th>分类</th><th>形式</th><th>作用</th></tr></thead><tbody><tr><td>基础选择器</td><td>标签选择器</td><td>HTML标签名</td><td>可以把某一类标签全部显示出来</td></tr><tr><td></td><td>类选择器</td><td>class属性  “.class”</td><td>可以选择某所有为相同class的标签</td></tr><tr><td></td><td>id选择器</td><td>id属性  “#id”</td><td>可以选择某所有为相同id的标签</td></tr><tr><td></td><td>通配符选择器</td><td>*</td><td>给所有元素修改样式</td></tr></tbody></table><h4 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h4><p><strong>1.字体</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">font-family: "字体的样式名";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">font-size: "字号大小(单位为px)";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">font-weight: "normal|bold|lighter|number";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">font-style: "normal|italic"</span></pre></td></tr></table></figure><p>综合写法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">格式:font: font-style font-weight font-size/font-height font-family</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">font: normal normal 16px 26px "Microsoft yahei";</span></pre></td></tr></table></figure><p><strong>2.文本属性</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">color: black/RGB()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">text-align: center/left/right; //注意：只适用于设置元素内文本内容的水平对齐方式</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">text-decoration: underline/line-through //下划线，删除线</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">text-indent: 10px;  //首行缩进</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">line-height: 20px;  //行间距</span></pre></td></tr></table></figure><h5 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h5><p>并集选择器用逗号分隔,比如我们想同时修改div标签和p标签同样的样式，我们可以直接这样写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">div,p&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h5 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">a:link  //选择所有未被访问的连接</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">a:visited //选择所有已被访问的链接</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">a:hover  //选择鼠标指针位于其上的链接</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">a:active  //选择活动链接(鼠标按下未松开的时候)</span></pre></td></tr></table></figure><p>当我们浏览网页时，鼠标放在具有超链接的文字上的时候，文字的颜色会发生变化，这就用到了伪类选择器</p><h4 id="JavaScript-——行为"><a href="#JavaScript-——行为" class="headerlink" title="JavaScript ——行为"></a>JavaScript ——行为</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熟悉Github</title>
      <link href="/%E7%86%9F%E6%82%89Github/"/>
      <url>/%E7%86%9F%E6%82%89Github/</url>
      
        <content type="html"><![CDATA[<h4 id="最常用的GIT命令"><a href="#最常用的GIT命令" class="headerlink" title="最常用的GIT命令"></a>最常用的GIT命令</h4><ul><li>git clone</li></ul><p>​       克隆代码：git clone + 地址</p><ul><li>git pull</li></ul><p>​       拉取代码</p><ul><li><p>git status</p><p>查看工作区状态</p></li><li><p>git log</p><p>查看过往记录</p></li><li><p>git add</p><p>提交到暂存区</p></li><li><p>git commit -m “提交注释”</p><p>提交到本地仓库</p></li><li><p>git push</p><p>提交到远程仓库</p></li></ul><h4 id="Github搜索技巧"><a href="#Github搜索技巧" class="headerlink" title="Github搜索技巧"></a>Github搜索技巧</h4><ul><li><p>in:name dev-tester</p><p>按项目名称(name)查找</p></li><li><p>in:description</p><p>按项目描述查找</p></li><li><p>in:readme</p><p>按照README描述查找</p></li><li><p>starts:&gt;1000</p><p>设置星星数查询范围</p></li><li><p>forks:&gt;500</p><p>设置fork数查询范围</p></li><li><p>language:</p><p>按照项目语言查询</p></li><li><p>user:</p><p>按照项目作者查找</p></li><li><p>size:&gt;=500</p><p>按照项目大小查询</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>拉勾网项目</title>
      <link href="/%E6%8B%89%E5%8B%BE%E7%BD%91%E9%A1%B9%E7%9B%AE/"/>
      <url>/%E6%8B%89%E5%8B%BE%E7%BD%91%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span> type="text/css"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    *&#123;margin: 0; padding: 0;&#125;/*统一去掉所有图片的内边距*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-tag">input</span>&#123;border: none;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    a&#123;text-decoration: none; color: black;&#125;/*去掉文字的下划线*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    li&#123;list-style: none;&#125;/*清除元素的默认样式*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    .main&#123;   /*把共同的CSS样式提取出来以便重复利用*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">      width: 1205px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">      margin: 0 auto;  /*上下为0，左右为auto（居中）*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    /**/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.fl</span>&#123;float: left;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.fr</span>&#123;float: right;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    .clearfloat:after&#123;  /*清除float样式*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">      content: "";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      display: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      clear: both;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    .header&#123;         /*头部*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      height: 160px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    .header .h_top&#123;    /*头部的上部分*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#2a2e2f</span>;  </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    .header .h_top .topCon&#123;  /*头部的上部分的内容*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">      line-height: 40px; /*使其上下居中*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.leftTxt1</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.leftTxt1</span> <span class="selector-class">.logo</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#00b38a</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">      font-size: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">      padding-right: 34px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.leftTxt1</span> <span class="selector-class">.city</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#42f3cd</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">      font-size: 13px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">      padding-right: 12px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.leftTxt1</span> <span class="selector-class">.change_city</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">      font-size: 12px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#bbb5ac</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">      padding-right: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.ulList</span> <span class="selector-tag">li</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">      float: left;  /*这里进行浮动，它的父级元素就会进行塌陷,所以要找到父级元素清除浮动*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">      padding-left: 21px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">      padding-right: 21px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conLeft</span> <span class="selector-class">.ulList</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#e8e6e3</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">      line-height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">      float: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">      display: block;  /*如果不加则必须点击文字的时候才能触发，如果加了就会把它变成块元素，只要点击那一块区域即可*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#bbb5ac</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-class">.login</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">      padding-left: 28px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">      background-position: 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">      background-image: url(../拉勾网/icon_login.png);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">      background-repeat: no-repeat;  /*不让图标重复填满指定的区域*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">      background-size: 18px 18px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-class">.zc</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">      padding: 0px 7px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-class">.zc</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">      padding-right: 32px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-class">.app</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#35f2d4</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">      padding-right: 20px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_top</span> <span class="selector-class">.topCon</span> <span class="selector-class">.conRight</span> <span class="selector-class">.ul_list</span> <span class="selector-tag">li</span> <span class="selector-class">.app</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">      float: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">      width: 12px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">      height: 18px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">      display: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">      background-image: url(../拉勾网/icon_phone.png);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">      background-repeat: no-repeat;  /*不让图标重复填满指定的区域*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">      background-size: 12px 18px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">      background-position: 0px 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">      margin-top: 11px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">      margin-right: 8px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">    .header .h_bottom&#123;   /*头部的下部分*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">      height: 120px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#008f6e</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">      height: 120px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conleft</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">      position: relative;  /*把conleft当成参考物*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">      width: 573px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">      height: 120px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">      background: url(../拉勾网/logo_41a2761.png) no-repeat;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">      background-size: 228px 120px; /*宽 高*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conleft</span> <span class="selector-class">.imgBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">      position: absolute;  /*absolute是相对于relative，即".header .h_bottom .botCon .conleft"的位置*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">      top: 38px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">      left: 246px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conleft</span> <span class="selector-class">.imgBox</span> <span class="selector-tag">img</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">156</span></pre></td><td class="code"><pre><span class="line">      width: 334px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">157</span></pre></td><td class="code"><pre><span class="line">      height: 30px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">158</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">159</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">160</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">161</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conleft</span> <span class="selector-class">.textBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">162</span></pre></td><td class="code"><pre><span class="line">      width: 334px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">163</span></pre></td><td class="code"><pre><span class="line">      height: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">164</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">165</span></pre></td><td class="code"><pre><span class="line">      top: 74px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">166</span></pre></td><td class="code"><pre><span class="line">      left: 246px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">167</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">168</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#e8e6e3</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">169</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">170</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">171</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">172</span></pre></td><td class="code"><pre><span class="line">      width: 486px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">173</span></pre></td><td class="code"><pre><span class="line">      height: 120px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">174</span></pre></td><td class="code"><pre><span class="line">      position: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">175</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">176</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">177</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">178</span></pre></td><td class="code"><pre><span class="line">      height: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">179</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">180</span></pre></td><td class="code"><pre><span class="line">      top: 35%;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">181</span></pre></td><td class="code"><pre><span class="line">      width: 100%;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">182</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#757575</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">183</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">184</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">185</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">186</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span> <span class="selector-class">.phone_number</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">187</span></pre></td><td class="code"><pre><span class="line">      width: 212px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">188</span></pre></td><td class="code"><pre><span class="line">      height: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">189</span></pre></td><td class="code"><pre><span class="line">      margin-right: 8px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">190</span></pre></td><td class="code"><pre><span class="line">      text-indent: 10px; /*缩进xx个像素*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">191</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">192</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">193</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span> <span class="selector-class">.code</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">194</span></pre></td><td class="code"><pre><span class="line">      width: 146px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">195</span></pre></td><td class="code"><pre><span class="line">      height: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">196</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">197</span></pre></td><td class="code"><pre><span class="line">      margin-right: 10px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">198</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">199</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">200</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span> <span class="selector-class">.code</span> <span class="selector-class">.text_code</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">201</span></pre></td><td class="code"><pre><span class="line">      width: 94px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">202</span></pre></td><td class="code"><pre><span class="line">      height: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">203</span></pre></td><td class="code"><pre><span class="line">      text-indent: 10px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">204</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">205</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">206</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span> <span class="selector-class">.code</span> <span class="selector-class">.get</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">207</span></pre></td><td class="code"><pre><span class="line">      padding: 6px 4px 6px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">208</span></pre></td><td class="code"><pre><span class="line">      width: 51px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">209</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#2ff1cb</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">210</span></pre></td><td class="code"><pre><span class="line">      background: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">211</span></pre></td><td class="code"><pre><span class="line">      height: 35px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">212</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">213</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">214</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.header</span> <span class="selector-class">.h_bottom</span> <span class="selector-class">.botCon</span> <span class="selector-class">.conright</span> <span class="selector-class">.btnBox</span> <span class="selector-class">.sub</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">215</span></pre></td><td class="code"><pre><span class="line">      width: 106px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">216</span></pre></td><td class="code"><pre><span class="line">      height: 34px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">217</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-id">#ccefe7</span> <span class="selector-tag">solid</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">218</span></pre></td><td class="code"><pre><span class="line">      background-color: unset;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">219</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#bad5cc</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">220</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">221</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">222</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.sear</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">223</span></pre></td><td class="code"><pre><span class="line">      height: 132px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">224</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#f2f5f4</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">225</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">226</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">227</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.sear</span> <span class="selector-class">.searCon</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">228</span></pre></td><td class="code"><pre><span class="line">      height: 132px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">229</span></pre></td><td class="code"><pre><span class="line">      position: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">230</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">231</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">232</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.sear</span> <span class="selector-class">.searCon</span> <span class="selector-class">.search</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">233</span></pre></td><td class="code"><pre><span class="line">      height: 47px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">234</span></pre></td><td class="code"><pre><span class="line">      width: 937px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">235</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">236</span></pre></td><td class="code"><pre><span class="line">      top: 30px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">237</span></pre></td><td class="code"><pre><span class="line">      left: 137px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">238</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">239</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">240</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.sear</span> <span class="selector-class">.searCon</span> <span class="selector-class">.search</span> <span class="selector-tag">input</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">241</span></pre></td><td class="code"><pre><span class="line">      width: 794px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">242</span></pre></td><td class="code"><pre><span class="line">      height: 45px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">243</span></pre></td><td class="code"><pre><span class="line">      text-indent: 17px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">244</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-id">#65625e</span> <span class="selector-tag">solid</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">245</span></pre></td><td class="code"><pre><span class="line">      background: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">246</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">247</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.sear</span> <span class="selector-class">.searCon</span> <span class="selector-class">.search</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">248</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#008f6e</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">249</span></pre></td><td class="code"><pre><span class="line">      padding: 10px 54px 15px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">250</span></pre></td><td class="code"><pre><span class="line">      text-align: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">251</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">252</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">253</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">254</span></pre></td><td class="code"><pre><span class="line">      height: 462px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">255</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">256</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">257</span></pre></td><td class="code"><pre><span class="line">      width: 304px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">258</span></pre></td><td class="code"><pre><span class="line">      height: 346px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">259</span></pre></td><td class="code"><pre><span class="line">      background: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">260</span></pre></td><td class="code"><pre><span class="line">      margin-top: 48px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">261</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">262</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">263</span></pre></td><td class="code"><pre><span class="line">      width: 842px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">264</span></pre></td><td class="code"><pre><span class="line">      height: 347px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">265</span></pre></td><td class="code"><pre><span class="line">      margin-top: 46px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">266</span></pre></td><td class="code"><pre><span class="line">      position: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">267</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">268</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span> <span class="selector-class">.banlist</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">269</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">270</span></pre></td><td class="code"><pre><span class="line">      width: 281px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">271</span></pre></td><td class="code"><pre><span class="line">      height: 346px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">272</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">273</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">274</span></pre></td><td class="code"><pre><span class="line">      padding-bottom: 29px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">275</span></pre></td><td class="code"><pre><span class="line">      width: 321px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">276</span></pre></td><td class="code"><pre><span class="line">      height: 18px;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">277</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">278</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">279</span></pre></td><td class="code"><pre><span class="line">      color: black;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">280</span></pre></td><td class="code"><pre><span class="line">      padding: 0px 8px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">281</span></pre></td><td class="code"><pre><span class="line">      margin: 0px 0px 5px 5px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">282</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">283</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">284</span></pre></td><td class="code"><pre><span class="line">      padding-top: 5px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">285</span></pre></td><td class="code"><pre><span class="line">      color: black;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">286</span></pre></td><td class="code"><pre><span class="line">      font-family: "宋体";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">287</span></pre></td><td class="code"><pre><span class="line">      float: right;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">288</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">289</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_left</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">290</span></pre></td><td class="code"><pre><span class="line">      font-size: 17px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">291</span></pre></td><td class="code"><pre><span class="line">      padding: 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">292</span></pre></td><td class="code"><pre><span class="line">      margin: 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">293</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">294</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">295</span></pre></td><td class="code"><pre><span class="line">      width: 840px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">296</span></pre></td><td class="code"><pre><span class="line">      height: 346px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">297</span></pre></td><td class="code"><pre><span class="line">      overflow: hidden;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">298</span></pre></td><td class="code"><pre><span class="line">      position: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">299</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">300</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-id">#banImgBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">301</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">302</span></pre></td><td class="code"><pre><span class="line">      height: 346px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">303</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">304</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-id">#banImgBox</span> <span class="selector-tag">img</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">305</span></pre></td><td class="code"><pre><span class="line">      float: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">306</span></pre></td><td class="code"><pre><span class="line">      width: 840px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">307</span></pre></td><td class="code"><pre><span class="line">      list-style: none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">308</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">309</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-id">#select</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">310</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">311</span></pre></td><td class="code"><pre><span class="line">      bottom: 15px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">312</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">313</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-id">#select</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">314</span></pre></td><td class="code"><pre><span class="line">      width: 8px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">315</span></pre></td><td class="code"><pre><span class="line">      height: 8px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">316</span></pre></td><td class="code"><pre><span class="line">      margin: 0 3px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">317</span></pre></td><td class="code"><pre><span class="line">      background: red;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">318</span></pre></td><td class="code"><pre><span class="line">      float: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">319</span></pre></td><td class="code"><pre><span class="line">      text-decoration: none; /*取消下划线*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">320</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">321</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-id">#select</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">322</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">323</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">324</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">325</span></pre></td><td class="code"><pre><span class="line">      display: block; /*鼠标移出的时候不显示*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">326</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">327</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-tag">span</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">328</span></pre></td><td class="code"><pre><span class="line">      width: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">329</span></pre></td><td class="code"><pre><span class="line">      height: 36px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">330</span></pre></td><td class="code"><pre><span class="line">      font-size: 36px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">331</span></pre></td><td class="code"><pre><span class="line">      color: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">332</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">opacity</span>: 0<span class="selector-class">.7</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">333</span></pre></td><td class="code"><pre><span class="line">      font-family: "宋体";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">334</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">335</span></pre></td><td class="code"><pre><span class="line">      top: 152px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">336</span></pre></td><td class="code"><pre><span class="line">      display: none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">337</span></pre></td><td class="code"><pre><span class="line">      font-weight: bolder;  /*加粗字体*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">338</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">339</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-class">.btnright</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">340</span></pre></td><td class="code"><pre><span class="line">      right: 20px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">341</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">342</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.banner</span> <span class="selector-class">.banner_right</span> <span class="selector-class">.btnleft</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">343</span></pre></td><td class="code"><pre><span class="line">      left: 20px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">344</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">345</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.top1</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">346</span></pre></td><td class="code"><pre><span class="line">      line-height: 53px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">347</span></pre></td><td class="code"><pre><span class="line">      margin-top: 16px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">348</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(53,58,60,0<span class="selector-class">.6</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">349</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">350</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.top1</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">351</span></pre></td><td class="code"><pre><span class="line">      font-size: 16px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">352</span></pre></td><td class="code"><pre><span class="line">      color: black;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">353</span></pre></td><td class="code"><pre><span class="line">      margin-right: 60px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">354</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">355</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.top1</span> <span class="selector-class">.hot</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">356</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border-bottom</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(53,58,60,0<span class="selector-class">.9</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">357</span></pre></td><td class="code"><pre><span class="line">      padding-bottom: 15px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">358</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">359</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">360</span></pre></td><td class="code"><pre><span class="line">      width: 390px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">361</span></pre></td><td class="code"><pre><span class="line">      height: 200px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">362</span></pre></td><td class="code"><pre><span class="line">      margin: 16px 14px 16px 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">363</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(53,58,60,0<span class="selector-class">.6</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">364</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">365</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">366</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conUI3</span> <span class="selector-class">.conBox</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">367</span></pre></td><td class="code"><pre><span class="line">      margin-right: 0px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">368</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">369</span></pre></td><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">370</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.more</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">371</span></pre></td><td class="code"><pre><span class="line">      width: 388px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">372</span></pre></td><td class="code"><pre><span class="line">      height: 43px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">373</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">374</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#4fffd7</span>; </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">375</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">376</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">377</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.more</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">378</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#4fffd7</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">379</span></pre></td><td class="code"><pre><span class="line">      width: 388px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">380</span></pre></td><td class="code"><pre><span class="line">      height: 43px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">381</span></pre></td><td class="code"><pre><span class="line">      display: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">382</span></pre></td><td class="code"><pre><span class="line">      text-align: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">383</span></pre></td><td class="code"><pre><span class="line">      line-height: 42px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">384</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">385</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">386</span></pre></td><td class="code"><pre><span class="line">      padding-top: 20px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">387</span></pre></td><td class="code"><pre><span class="line">      width: 352px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">388</span></pre></td><td class="code"><pre><span class="line">      height: 159px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">389</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">390</span></pre></td><td class="code"><pre><span class="line">      position: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">391</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">392</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_top</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">393</span></pre></td><td class="code"><pre><span class="line">      width: 351px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">394</span></pre></td><td class="code"><pre><span class="line">      height: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">395</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">396</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_top</span> <span class="selector-tag">img</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">397</span></pre></td><td class="code"><pre><span class="line">      height: 16px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">398</span></pre></td><td class="code"><pre><span class="line">      width: 16px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">399</span></pre></td><td class="code"><pre><span class="line">      position: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">400</span></pre></td><td class="code"><pre><span class="line">      top: 24px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">401</span></pre></td><td class="code"><pre><span class="line">      left: 205px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">402</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">403</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_top</span> <span class="selector-class">.left</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">404</span></pre></td><td class="code"><pre><span class="line">      color: black;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">405</span></pre></td><td class="code"><pre><span class="line">      text-indent: 19px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">406</span></pre></td><td class="code"><pre><span class="line">      font-size: 17px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">407</span></pre></td><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">408</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_top</span> <span class="selector-class">.mid</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">409</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#c8c3bc</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">410</span></pre></td><td class="code"><pre><span class="line">      padding-left: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">411</span></pre></td><td class="code"><pre><span class="line">      font-size: 13px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">412</span></pre></td><td class="code"><pre><span class="line">      height: 22px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">413</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">414</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_top</span> <span class="selector-class">.right</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">415</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#fa4d27</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">416</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">417</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_mid</span> <span class="selector-class">.top</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">418</span></pre></td><td class="code"><pre><span class="line">      width: 115px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">419</span></pre></td><td class="code"><pre><span class="line">      padding: 5px 0 12px 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">420</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">421</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_mid</span> <span class="selector-class">.top</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">422</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">423</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#a8a095</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">424</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">425</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_mid</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">426</span></pre></td><td class="code"><pre><span class="line">      width: 350px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">427</span></pre></td><td class="code"><pre><span class="line">      height: 74px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">428</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-tag">rgba</span>(53,58,60,0<span class="selector-class">.8</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">429</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">430</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_mid</span> <span class="selector-class">.mid</span>&#123;   </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">431</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(53,58,60,0<span class="selector-class">.6</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">432</span></pre></td><td class="code"><pre><span class="line">      width: 73px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">433</span></pre></td><td class="code"><pre><span class="line">      height: 26px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">434</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#a8a095</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">435</span></pre></td><td class="code"><pre><span class="line">      line-height: 26px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">436</span></pre></td><td class="code"><pre><span class="line">      font-size: 12px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">437</span></pre></td><td class="code"><pre><span class="line">      margin-right: 12px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">438</span></pre></td><td class="code"><pre><span class="line">      text-align: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">439</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">440</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">441</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_bottom</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">442</span></pre></td><td class="code"><pre><span class="line">      width: 351px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">443</span></pre></td><td class="code"><pre><span class="line">      height: 61px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">444</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">445</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_bottom</span> <span class="selector-tag">img</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">446</span></pre></td><td class="code"><pre><span class="line">      width: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">447</span></pre></td><td class="code"><pre><span class="line">      height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">448</span></pre></td><td class="code"><pre><span class="line">      padding-top: 18px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">449</span></pre></td><td class="code"><pre><span class="line">      float: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">450</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">451</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_bottom</span> <span class="selector-tag">ul</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">452</span></pre></td><td class="code"><pre><span class="line">      margin-top: 15px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">453</span></pre></td><td class="code"><pre><span class="line">      text-indent: 13px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">454</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">455</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">456</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-class">.line1</span> <span class="selector-class">.linetop</span> <span class="selector-class">.conUI</span> <span class="selector-class">.conBox</span> <span class="selector-class">.conBox_content</span> <span class="selector-class">.content_bottom</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">457</span></pre></td><td class="code"><pre><span class="line">      font-size: 14px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">458</span></pre></td><td class="code"><pre><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#a8a095</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">459</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">460</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/style&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">461</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">462</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">463</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> imgList = <span class="built_in">document</span>.getElementById(<span class="string">'banImgBox'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">464</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> imgNum = <span class="built_in">document</span>.getElementById(<span class="string">'banImgBox'</span>).getElementsByTagName(<span class="string">'img'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">465</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> banner_right = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'banner_right'</span>)[<span class="number">0</span>];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">466</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> select = <span class="built_in">document</span>.getElementById(<span class="string">'select'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">467</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> a = <span class="built_in">document</span>.getElementById(<span class="string">'select'</span>).getElementsByTagName(<span class="string">'a'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">468</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">469</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      imgList.style.width = <span class="number">850</span> * imgNum.length + <span class="string">'px'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">470</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      select.style.left = (banner_right.offsetWidth - select.offsetWidth)/<span class="number">2</span> + <span class="string">'px'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">471</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      imgList.style.left = <span class="number">0</span> + <span class="string">'px'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">472</span></pre></td><td class="code"><pre><span class="line">      index = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">473</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;imgNum.length;i++)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">474</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        a[i].num = i;<span class="comment">//给a[i]添加一个新属性“num”，用来记录它是第几个a标签</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">475</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        a[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">476</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">          index = <span class="keyword">this</span>.num;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">477</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">          <span class="comment">/* imgList.style.left = -840*index + 'px'; */</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">478</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">          <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;imgNum.length;j++)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">479</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">            a[j].style.background = <span class="string">''</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">480</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">481</span></pre></td><td class="code"><pre><span class="line">               </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">482</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          a[index].style.background = <span class="string">'black'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">483</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">          <span class="comment">//添加移动动画</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">484</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          <span class="function"><span class="keyword">function</span> move(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">485</span></pre></td><td class="code"><pre><span class="line">            </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">486</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">            timer = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">487</span></pre></td><td class="code"><pre><span class="line">              speed = 20;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">488</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">              <span class="keyword">var</span> oldnum = <span class="built_in">parseInt</span>(imgList.style.left);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">489</span></pre></td><td class="code"><pre><span class="line">              if(oldnum &lt; -840*index)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">490</span></pre></td><td class="code"><pre><span class="line">                speed = -speed;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">491</span></pre></td><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">492</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">              <span class="keyword">var</span> newnum = oldnum - speed;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">493</span></pre></td><td class="code"><pre><span class="line">              </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">494</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">              imgList.style.left = newnum + <span class="string">'px'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">495</span></pre></td><td class="code"><pre><span class="line">              if(newnum == -840*index)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">496</span></pre></td><td class="code"><pre><span class="line">                clearInterval(timer);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">497</span></pre></td><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">498</span></pre></td><td class="code"><pre><span class="line">            &#125;,3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">499</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">500</span></pre></td><td class="code"><pre><span class="line">          move();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">501</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">502</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">503</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">504</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">505</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">506</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body style="background: white; height: 10000px;"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">507</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="box"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">508</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div class="header"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">509</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="h_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">510</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div class="topCon main"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">511</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="conLeft fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">512</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;div class="leftTxt1 fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">513</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;a href="#" class="logo"&gt;</span><span class="tag">&lt;b&gt;</span>拉钩<span class="tag">&lt;/b&gt;</span><span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">514</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;a href="#" class="city"&gt;</span>全国站<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">515</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;a href="#" class="change_city"&gt;</span>[切换城市]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">516</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">517</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;ul class="ulList clearfloat fr"&gt;</span><span class="comment">&lt;!--ul表示列表--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">518</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>首页<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span>  <span class="comment">&lt;!--li标签定义列表项目--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">519</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>公司<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">520</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>校园招聘<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">521</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>职位<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">522</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>言职<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">523</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="#"&gt;</span>课程<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">524</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">525</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">526</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="conRight fr"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">527</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;ul class="ul_list clearfloat"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">528</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="" class="login"&gt;</span><span class="tag">&lt;span&gt;</span><span class="tag">&lt;/span&gt;</span>登录<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">529</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="" class="zc"&gt;</span><span class="tag">&lt;span&gt;</span>|<span class="tag">&lt;/span&gt;</span>注册<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">530</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href="" class="app"&gt;</span><span class="tag">&lt;span&gt;</span><span class="tag">&lt;/span&gt;</span>拉钩APP<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">531</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>进入企业版<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">532</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">533</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">534</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">535</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">536</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="h_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">537</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div class="botCon main"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">538</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="conleft fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">539</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;div class="imgBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">540</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;img src="../拉勾网/想去互联网好公司，就上拉钩.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">541</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">542</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;div class="textBox"&gt;</span>1020956家公司 | 77699606个职位，在拉勾等你<span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">543</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">544</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="conright fr"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">545</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;div class="btnBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">546</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="text" placeholder="输入手机号" class="fl phone_number"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">547</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;p class="fl code"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">548</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;input type="text" placeholder="验证码" class="text_code"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">549</span></pre></td><td class="code"><pre><span class="line">                |<span class="tag">&lt;a href="" class="get"&gt;</span>获取<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">550</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">551</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;input type="submit" value="登录/注册" class="fl sub"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">552</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">553</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">554</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">555</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">556</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span><span class="comment">&lt;!--头部区域--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">557</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div class="sear"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">558</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="searCon main"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">559</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div class="search"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">560</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;input type="text" placeholder="搜索职位、公司或地点"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">561</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;a href=""&gt;</span>搜索<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">562</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">563</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">564</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span><span class="comment">&lt;!--搜索区域--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">565</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div class="banner main clearfloat"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">566</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="banner_left fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">567</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;ul class="banlist"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">568</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">569</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>技术<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">570</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>Java<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">571</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>PHP<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">572</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>C++<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">573</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>区块链<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">574</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">575</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">576</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">577</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>产品<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">578</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>产品总监<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">579</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>产品经理<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">580</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">581</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">582</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">583</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>设计<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">584</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>UI设计师<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">585</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>交互设计<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">586</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>网页设计师<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">587</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">588</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">589</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">590</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>运营<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">591</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href="" &gt;</span>新媒体运营<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">592</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>编辑<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">593</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>数据运营<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">594</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">595</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">596</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">597</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>市场<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">598</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>市场营销<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">599</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>市场推广<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">600</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>市场策划<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">601</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">602</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">603</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">604</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>销售<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">605</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>销售专员<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">606</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>销售经理<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">607</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>销售总监<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">608</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">609</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">610</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">611</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>职能<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">612</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>HR<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">613</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>行政<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">614</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>财务<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">615</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>审计<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">616</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">617</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">618</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">619</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>游戏<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">620</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>小游戏开发<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">621</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>U3D<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">622</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>游戏策划<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">623</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;span&gt;</span>&amp;gt;<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">624</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">625</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">626</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">627</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="banner_right fr"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">628</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div id="banImgBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">629</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;img src="../拉勾网/1.JPG"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">630</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;img src="../拉勾网/2.JPG"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">631</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;img src="../拉勾网/3.JPG"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">632</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">633</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div id="select"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">634</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;a href="javascript:;"&gt;</span><span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">635</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;a href="javascript:;"&gt;</span><span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">636</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;a href="javascript:;"&gt;</span><span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">637</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">638</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;span class="btnleft"&gt;</span><span class="tag">&lt;a href=""&gt;</span>&amp;lt;<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">639</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;span class="btnright"&gt;</span><span class="tag">&lt;a href=""&gt;</span>&amp;gt;<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">640</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">641</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span><span class="comment">&lt;!--轮播图区域--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">642</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div class="content main"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">643</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;div class="line1"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">644</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;div class="linetop"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">645</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="top1"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">646</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href="" class="hot"&gt;</span>24Hour热门<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">647</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;a href=""&gt;</span>最新职位<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">648</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">649</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="conUI clearfloat"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">650</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;ul class="conUI1 fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">651</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">652</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">653</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">654</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">655</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">656</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">657</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">658</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">659</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">660</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">661</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">662</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">663</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">664</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">665</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">666</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">667</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">668</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">669</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">670</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">671</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">672</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">673</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">674</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">675</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">676</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">677</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">678</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">679</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">680</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">681</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">682</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">683</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">684</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">685</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">686</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">687</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">688</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">689</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">690</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">691</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">692</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">693</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">694</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">695</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">696</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">697</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">698</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">699</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">700</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">701</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">702</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">703</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">704</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">705</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">706</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">707</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">708</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">709</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">710</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">711</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">712</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">713</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">714</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">715</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">716</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">717</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">718</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">719</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">720</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">721</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">722</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">723</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">724</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">725</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">726</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">727</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">728</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">729</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">730</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">731</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">732</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">733</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">734</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">735</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">736</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">737</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">738</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">739</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">740</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">741</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">742</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">743</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">744</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">745</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;ul class="conUI2 fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">746</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">747</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">748</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">749</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">750</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">751</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">752</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">753</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">754</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">755</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">756</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">757</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">758</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">759</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">760</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">761</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">762</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">763</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">764</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">765</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">766</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">767</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">768</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">769</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">770</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">771</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">772</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">773</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">774</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">775</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">776</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">777</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">778</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">779</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">780</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">781</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">782</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">783</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">784</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">785</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">786</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">787</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">788</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">789</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">790</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">791</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">792</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">793</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">794</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">795</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">796</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">797</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">798</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">799</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">800</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">801</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">802</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">803</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">804</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">805</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">806</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">807</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">808</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">809</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">810</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">811</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">812</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">813</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">814</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">815</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">816</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">817</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">818</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">819</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">820</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">821</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">822</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">823</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">824</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">825</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">826</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">827</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">828</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">829</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">830</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">831</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">832</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">833</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">834</span></pre></td><td class="code"><pre><span class="line">                        <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">835</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">836</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">837</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">838</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">839</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">840</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;ul class="conUI3 fr"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">841</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">842</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">843</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">844</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">845</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">846</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">847</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">848</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">849</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">850</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">851</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">852</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">853</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">854</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">855</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">856</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">857</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">858</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">859</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">860</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">861</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">862</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">863</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">864</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">865</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">866</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">867</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">868</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">869</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">870</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">871</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">872</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;div class="conBox"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">873</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;div class="conBox_content"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">874</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">875</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="left"&gt;</span>测试leader...<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">876</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="mid"&gt;</span>[一天前发布]<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">877</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/icon_chat2_d162651.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">878</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;a class="right fr"&gt;</span>30k-50k<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">879</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">880</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_mid"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">881</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="top"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">882</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;a&gt;</span>经验3-5年 / 本科<span class="tag">&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">883</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">884</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">885</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="arm"&gt;</span>ARM<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">886</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">887</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">888</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="zhineng"&gt;</span>人工智能<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">889</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">890</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;div class="mid fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">891</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;span class="android"&gt;</span>Android<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">892</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">893</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">894</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;div class="content_bottom"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">895</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;img src="../拉勾网/Cgq2xl5p5GCAOVKpAAC0WGrasfc907.png"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">896</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;ul class="fl"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">897</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a href=""&gt;</span>安思疆<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">898</span></pre></td><td class="code"><pre><span class="line">                      <span class="tag">&lt;li&gt;</span><span class="tag">&lt;a&gt;</span>人工智能 / B轮 / 深圳<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">899</span></pre></td><td class="code"><pre><span class="line">                    <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">900</span></pre></td><td class="code"><pre><span class="line">                  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">901</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">902</span></pre></td><td class="code"><pre><span class="line">              <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">903</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">904</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">905</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;div class="more"&gt;</span><span class="tag">&lt;a href=""&gt;</span>查看更多<span class="tag">&lt;/a&gt;</span><span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">906</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">907</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">908</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span><span class="comment">&lt;!--内容区域--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">909</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div class="footer"&gt;</span><span class="tag">&lt;/div&gt;</span><span class="comment">&lt;!--底部区域--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">910</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">911</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">912</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://i.loli.net/2020/10/26/uPGelWd4K6jH7vg.png" alt="FireShot Capture 012 - Document - .png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="/%E8%AE%B0%E4%B8%80%E6%AC%A1/"/>
      <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1/</url>
      
        <content type="html"><![CDATA[<p>经历了一个漫长假期，我也终于来到了当初所期待的大三，但是一切并没有想象的那个样子。。。或者生活本该如此吧。看着陆陆续续拖着行李箱进入校园的学弟学妹们，突然意识到自己竟不知不觉间成为了大三老腊肉T﹏T可能也是因为到了大三了吧，面临着考研和就业的选择，我也突然意识到自己在大学期间并没有学到什么能够真正在工作中应用到的技能。有所谓：技多不压身，可我反复细数，自己可怜的连一个都没有。后悔啊，后悔当初没有好好学习，拿奖学金，没有趁早参与到比赛中去。可现在一切都晚了。<br> • 永远不要为已经发生过的事情去后悔，那将毫无意义<br>最近接触了前端之后，突然对这个短期内可以有获得感的领悟欣喜万分。为什么就没有早点接触它呢？我想这一刻我找到了自己想要的东西，它来的有点晚，但总是还不算太晚。当是上天给我指明的方向吧。<br> • 但行此事，莫问前程<br>我这个人总是顾虑很多，像是与人对弈般小心翼翼，生怕自己的一个决定毁了整个人生。当我下定决心选择It行业后，我会想it是不是已经趋于饱和了？毕业以后是不是要去大城市与父母常年见不了几次面？甚至我连后面的几十年都能考虑到。可能正是这些顾虑导致了今天的我。当然，我是不后悔的，毕竟一路走来都是自己的选择。或许说，大部分时候，根本没有正确的选择，我们只不过是要努力奋斗，让当初的选择变得正确吧。现在的我再也不想听：“通信专业虽然难但是熬下去还是很吃香的；你想好了没，IT可不是想进就能进的；现在学前端没有前途了，学人工智能才有前途”诸如此类的话了。现在的我只想为了自己向前冲一次，哪怕跌的粉身碎骨也心甘情愿，看看这小子到底能走多远。我把今年一年的时间当成最后的救命稻草，我拼命的想要抓住它，惟愿心安。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/JavaScript/"/>
      <url>/JavaScript/</url>
      
        <content type="html"><![CDATA[<h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h4 id="创建带文本的元素节点"><a href="#创建带文本的元素节点" class="headerlink" title="创建带文本的元素节点"></a>创建带文本的元素节点</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    创建一个节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    createElement():<span class="built_in">document</span>.createElement(标签名);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    把创建的节点添加到里面</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    appendChild():parent.appendChild(newNode)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    将 newNode插入到parent子节点末尾</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    createTextNode():<span class="built_in">document</span>.createElement(<span class="string">'span'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    创建一个文本节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">  <span class="comment">//创建一个带文本的节点并插入到指定的节点当中去</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> obtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">'name'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    obtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//  var node = document.createElement('span');</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="comment">//给span标签文本</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//  var otext = document.createTextNode('文本内容');</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//  node.appendChild(otext);</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">// odiv.appendChild(node);</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    createElementWidthTxt(<span class="string">'span'</span>,<span class="string">'是大概多少'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">  <span class="comment">//把上面的功能封装成一个函数</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> createElementWidthTxt(<span class="params">tagName, txt</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> node  = <span class="built_in">document</span>.createElement(tagName);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> oTxt = <span class="built_in">document</span>.createTextNode(txt);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">'name'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    node.appendChild(oTxt);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    odiv.appendChild(node);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="name"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;p&gt;</span>p<span class="tag">&lt;/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;em&gt;</span>斜体<span class="tag">&lt;/em&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;button id="btn"&gt;</span>按钮<span class="tag">&lt;/button&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="元素节点的属性"><a href="#元素节点的属性" class="headerlink" title="元素节点的属性"></a>元素节点的属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    节点分为元素节点、属性节点、文本节点，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    而这些节点都有三个属性：nodeName、nodeType、nodeValue</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">'div1'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes.length); <span class="comment">//childNodes就是获取当前元素的所有子节点</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//元素节点的三个属性输出</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes[<span class="number">0</span>].nodeName);<span class="comment">//EM</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes[<span class="number">0</span>].nodeType);<span class="comment">//1</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    alert(odiv.childNodes[<span class="number">0</span>].nodeValue);<span class="regexp">//</span><span class="literal">null</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//文本节点的三个属性输出</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes[<span class="number">1</span>].nodeName);<span class="comment">//#text</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes[<span class="number">1</span>].nodeType);<span class="comment">//3</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.childNodes[<span class="number">1</span>].nodeValue);<span class="comment">//文本内容</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">       firstChild  快速找到元素节点的子节点的第一个</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">       lastChild   快速找到元素节点子节点的最后一个</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.firstChild.nodeName); <span class="comment">//EM</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    alert(odiv.lastChild.nodeName); <span class="comment">//strong</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="div1"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;em&gt;</span>斜体<span class="tag">&lt;/em&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    文本内容</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;strong&gt;</span>粗体<span class="tag">&lt;/strong&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="元素节点获取的封装"><a href="#元素节点获取的封装" class="headerlink" title="元素节点获取的封装"></a>元素节点获取的封装</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    id  <span class="built_in">document</span>.getElementById()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    tagName  node.getElementByTagName()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    name  <span class="built_in">document</span>。getElementsByname()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    className  <span class="built_in">document</span>.getElementsByClassName()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    下列可以通过封装一个函数，拥有上述几种获取元素节点的功能(CSS选择器)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">   <span class="function"><span class="keyword">function</span> $(<span class="params">vArg</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">     <span class="comment">//对参数区分</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">     <span class="keyword">switch</span>(vArg[<span class="number">0</span>])&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">case</span> <span class="string">'#'</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(vArg.substring(<span class="number">1</span>));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">case</span> <span class="string">'.'</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="keyword">return</span> elementByClassName(<span class="built_in">document</span>, vArg.substring(<span class="number">1</span>));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">default</span>: </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        <span class="keyword">var</span> str = vArg.substring(<span class="number">0</span>,<span class="number">5</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="keyword">if</span>(str == <span class="string">'name='</span>)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByName(vArg.substring(<span class="number">5</span>));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(vArg);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">     &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">   <span class="comment">//因为classname在ie浏览器中不兼容，所以要封装一下</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">   <span class="function"><span class="keyword">function</span> elementByClassName(<span class="params">parent, classStr</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> nodes = parent.getElementsByTagName(<span class="string">'*'</span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">var</span> result = [];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;nodes.length;i++)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        if(nodes[i].className == classStr)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">          result.push(nodes[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">return</span> result;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">   <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">     alert($(<span class="string">"#div1"</span>).innerHTML);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">     alert($(<span class="string">'.box'</span>).length);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">     alert($(<span class="string">'.box'</span>)[<span class="number">0</span>].innerHTML);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">     alert($(<span class="string">'name=hello'</span>)[<span class="number">0</span>].innerHTML);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="div1"&gt;</span>11111<span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div class="box"&gt;</span>22222<span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div name = <span class="string">'hello'</span>&gt;</span>33333<span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> str = <span class="string">'Abcabcabcdab'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    alert(str.indexOf(<span class="string">"abcd"</span>,<span class="number">2</span>));<span class="regexp">//</span>出现子串<span class="string">"abcd"</span>的首个位置的下标,数字<span class="number">2</span>代表从下标<span class="number">2</span>开始查</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//同理，lastIndexOf(子串)代表子串在最后一次出现的位置(如果没有则返回-1)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    alert(str.search(<span class="regexp">/abc/g</span>)); <span class="regexp">//i</span>代表忽略大小写，g代表全局匹配</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> string = <span class="string">'how are are you'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    alert(string.replace(<span class="string">'are'</span>,<span class="string">'old are'</span>));  <span class="regexp">//</span>代表用<span class="string">'old are'</span>代表<span class="string">'are'</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    alert(string.replace(<span class="regexp">/are/g</span>,<span class="string">'old are'</span>));<span class="regexp">//g</span>代表全局替换</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="attribute方法"><a href="#attribute方法" class="headerlink" title="attribute方法"></a>attribute方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      odiv = <span class="built_in">document</span>.getElementById(<span class="string">'123'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      odiv.setAttribute(<span class="string">'xxx'</span>,<span class="string">'yyy'</span>); <span class="regexp">//</span>把yyy赋值给为xxx的标签(如果没有这个标签则创建)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      alert(odiv.getAttribute(<span class="string">'xxx'</span>)); <span class="regexp">//</span>得到标签为<span class="string">'xxx'</span>的内容</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      odiv.removeAttribute(<span class="string">'title'</span>);<span class="regexp">//</span>删除标签为title的标签</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="123" title="doc" class="nav"&gt;</span><span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="history方法"><a href="#history方法" class="headerlink" title="history方法"></a>history方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> write=<span class="built_in">document</span>.getElementById(<span class="string">'write'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      write.onclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        alert(history.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> forward=<span class="built_in">document</span>.getElementById(<span class="string">'forward'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      forward.onclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        history.forward();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> back=<span class="built_in">document</span>.getElementById(<span class="string">'back'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      back.onclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        history.back();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;input type="button" value="记录" id="write"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;input type="button" value="前进" id="forward"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;input type="button" value="后退" id="back"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="insertbefore"><a href="#insertbefore" class="headerlink" title="insertbefore"></a>insertbefore</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> src="tool.js"&gt;</span><span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">     把某个新建的节点插入到旧节点之前</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> node = createElementWithTxt(<span class="string">'strong'</span>,<span class="string">'strong文本'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> ospan = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'span'</span>)[<span class="number">0</span>];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    insertAfter(node,ospan);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">  <span class="comment">//js中没有插入到旧节点之后的，所以自己动手封装一个</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> insertAfter(<span class="params">newNode, oldNode</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//判断oldNode是否是最后一个节点</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> parent = oldNode.parentNode;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    if(oldNode == parent.lastChild)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="comment">//最后一个节点，直接插入到子节点的末尾</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">      parent.append(newNode);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="comment">//插入到oldNode的下一个节点之前</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">      parent.insertBefore(newNode,oldNode.nextSibling);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="div1"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;p&gt;</span>p<span class="tag">&lt;/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;span&gt;</span>span<span class="tag">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;em&gt;</span>em<span class="tag">&lt;/em&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><hr><h4 id="ownerDocument"><a href="#ownerDocument" class="headerlink" title="ownerDocument"></a>ownerDocument</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    /*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">       ownerDocument属性</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">         返回该节点的文档对象根节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">      parentNode属性返回该节点的父节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      previousSibling属性返回该节点的前一个同级节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">      nextSibling属性返回该节点的最后一个同级节点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">var</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">'div1'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      alert(odiv.ownerDocument == <span class="built_in">document</span>); <span class="regexp">//</span><span class="literal">true</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      alert(odiv.parentNode.nodeName);<span class="comment">//BODY</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      alert(odiv.previousSibling.nodeName);<span class="comment">//#text</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id="div1"&gt;</span><span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;p&gt;</span><span class="tag">&lt;/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h4 id="秒表实现"><a href="#秒表实现" class="headerlink" title="秒表实现"></a>秒表实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> $(<span class="params">id</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">var</span> count = <span class="number">0</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">var</span> timer = <span class="literal">null</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      $(<span class="string">'start'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        timer = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">//setInterval(function()&#123; alert("Hello"); &#125;, 3000); 每三秒（3000 毫秒）弹出 "Hello"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">          count++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          $(<span class="string">'id_S'</span>).innerHTML = showNum(count % <span class="number">60</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          $(<span class="string">'id_M'</span>).innerHTML = showNum(<span class="built_in">parseInt</span>(count/<span class="number">60</span>) % <span class="number">60</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">          $(<span class="string">'id_H'</span>).innerHTML = showNum(<span class="built_in">parseInt</span>(count/<span class="number">3600</span>));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &#125;,100);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      $(<span class="string">'pause'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//只要执行了pause事件，就会触发function函数</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        clearInterval(timer);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      $(<span class="string">'stop'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        clearInterval(timer);<span class="comment">//取消定时器</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        count = <span class="number">0</span>; <span class="comment">//数据清零</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        $(<span class="string">'id_S'</span>).innerHTML = <span class="string">'00'</span>;  <span class="regexp">//i</span>nnerHTML就是获取标签间的内容</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        $(<span class="string">'id_M'</span>).innerHTML = <span class="string">'00'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        $(<span class="string">'id_H'</span>).innerHTML = <span class="string">'00'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> showNum(<span class="params">num</span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">      if(num &lt; 10)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="string">'0'</span>+num;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      &#125;<span class="keyword">else</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">        <span class="keyword">return</span> num;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-id">#div1</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">      width: 300px; height: 500px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">      margin-top: 200px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">      border: black 1px solid;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">      background: rgb(58, 176, 212);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-id">#div1</span> <span class="selector-tag">input</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">      width: 200px; height: 50px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-id">#count</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">      width: 180px; height: 20px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">      background: cadetblue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">      margin-top: 100px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">      margin-bottom: 100px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">      border: black 3px solid;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">      color: chartreuse;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="css">    <span class="selector-id">#button</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">      width: 200px; height: 300px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">      margin: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/style&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;div id = <span class="string">'div1'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div id = <span class="string">'count'</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;span id = <span class="string">'id_H'</span>&gt;</span>00<span class="tag">&lt;/span&gt;</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;span id = <span class="string">'id_M'</span>&gt;</span>00<span class="tag">&lt;/span&gt;</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;sapn id = <span class="string">'id_S'</span>&gt;</span>00<span class="tag">&lt;/sapn&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;div id="button"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;input id=<span class="string">'start'</span> type="button" value="开始"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;input id=<span class="string">'pause'</span> type="button" value="暂停"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;input id=<span class="string">'stop'</span> type="button" value="置零"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//es5</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">return</span> <span class="number">1</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//es6:单条语句</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> ofo = <span class="function"><span class="params">()</span> =&gt;</span> <span class="number">2</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(foo(),ofo());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//多条语句</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> oof = <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">let</span> b=<span class="number">10</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">      <span class="keyword">return</span> a+b; </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oof(<span class="number">10</span>));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;ul id=<span class="string">'test'</span>&gt;</span><span class="tag">&lt;/ul&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//ES5</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    /* var obj = &#123;'name':'john','age':20&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> name = obj.name;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> age = obj.age;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(name + <span class="string">'的年龄是'</span> + age); *<span class="regexp">/</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//ES6</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> ect = &#123;<span class="string">'name'</span>:<span class="string">'john'</span>,<span class="string">'age'</span>:<span class="number">20</span>&#125;;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span>&#123;name, age&#125; = ect;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;name&#125;</span>的年龄是<span class="subst">$&#123;age&#125;</span>`</span>); <span class="regexp">//</span>注意是反引号<span class="string">`</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> oul = <span class="built_in">document</span>.getElementById(<span class="string">'test'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> html=<span class="string">''</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      html += <span class="string">'&lt;li&gt;'</span>+arr[i]+<span class="string">'&lt;/li&gt;'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    oul.innerHTML = html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">      html += `<span class="tag">&lt;li&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;a href=<span class="string">''</span>&gt;</span>$&#123;arr[i]&#125;<span class="tag">&lt;/a&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/li&gt;</span>`;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    oul.innerHTML = html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h4 id="ES6-1"><a href="#ES6-1" class="headerlink" title="ES6"></a>ES6</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ES6是2015年发布的JS最新标准--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    /*  let: 用来声明变量，用法类似于var，但是声明的变量只在let命令所在的代码块内有效</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">           不允许重复定义一个变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">           不能重复声明*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> a = <span class="number">10</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    if(a &gt; 5)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="keyword">let</span> b = <span class="number">20</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//console.log(b);//代码块外无效，所以不能输出，会出错</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//解构赋值</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> [c,d,e] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(c,d,e); <span class="regexp">//</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> &#123;f:g&#125; = &#123;f:<span class="number">111</span>&#125;;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//console.log(f); //出错</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">let</span> &#123;h,i=<span class="number">5</span>&#125; = &#123;h:<span class="number">1</span>&#125;;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(h,i); <span class="regexp">//</span><span class="number">1</span>,<span class="number">5</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure><h4 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;html lang="en"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta charset="UTF-8"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;meta name="viewport" content="width=<span class="string">device-width,</span> initial-scale=<span class="string">1.0</span>"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;title&gt;</span>Document<span class="tag">&lt;/title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/head&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    /* var foo = ()=&gt;&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    foo(); */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    <span class="keyword">var</span> name = <span class="string">'window'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj = &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="string">'name'</span>:<span class="string">'john'</span>,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="string">'sayhello'</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    obj.sayhello(); <span class="regexp">//</span>输出john，说明<span class="keyword">this</span>指向的是obj的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//this指向定义时指向的作用域，而不是执行时所在的作用域</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> ofo = &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="string">'name'</span>:<span class="string">'john'</span>,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="string">'sayhello'</span>:<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    ofo.sayhello(); <span class="regexp">//</span>输出<span class="built_in">window</span>，这时<span class="keyword">this</span>指向的是顶端的name</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="comment">//其实上面的程序相当于下面的这一段程序，所以才会显示window而不是john</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="actionscript">    <span class="keyword">var</span> foo = &#123;&#125;;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    foo.name = <span class="string">'john'</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">    foo.sayhello = <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    foo.sayhello();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/body&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/html&gt;</span></span></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语六级打卡</title>
      <link href="/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E6%89%93%E5%8D%A1/"/>
      <url>/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7%E6%89%93%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<p>flags:    </p><p>英语六级</p><p>教师资格证</p><p>数据结构</p><a id="more"></a><p>人真的是越懒就越懒，拖拖拉拉了很久，终于找到了近期的目标。</p><p>我将在这里完成六级词汇的打卡。</p><hr><p>第一天  打卡！！</p><hr><p>第二天  打卡！！</p><hr><p>第三天  打卡！！</p><hr><p>第四天  打卡！！</p><hr><p>第五天  打卡！！</p><hr><p>第六天 &amp; 第七天  打卡！！</p><hr><p>第八天  打卡！！</p><hr><p>第九天  打卡！！</p><hr><p>第十天  打卡！！</p><hr><p>尴尬了。这周和父亲一起去了合肥找二姐玩了两天，然后就。。。就没心思背单词了。到现在为止，已经一周没打卡了。。明天接着继续！！！</p><hr><p>第十一天  打卡！！</p><hr><p>第十二天  打卡！！</p><hr><p>第十三天  打卡！！</p><hr><p>第十四天  打卡！！</p><hr><p>第十五天  打卡！！</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><h4 id="括号匹配"><a href="#括号匹配" class="headerlink" title="括号匹配"></a>括号匹配</h4><p><strong>问题描述</strong></p><p>假设表达式中允许有两种括号：圆括号和方括号，其嵌套的顺序随意，即（（）[ ]）或[（[ ] [ ]）]等为正确格式，[（ ]）或（（（]均为不正确的格式。检验括号是否匹配的方法可用“期待的紧迫程度”这个概念来描述。例如：考虑下列的括号序列：　　[　(　[　]　[　]　)　]</p><p><strong>基本要求</strong></p><p>读入含有圆括号和方括号的任意序列，输出“匹配”或“此串括号匹配不合法”。</p><p><strong>设计思路</strong></p><p>当栈接受了第一个括号“[”后，它期待与其匹配的“]”出现，然而等来的却是“(”，这时候“[”只能“靠边站”，“(”的迫切程度更大，它期待着”）”的出现……以此类推，匹配成功的消去，不成功的继续匹配直到匹配成功</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">string</span> s = <span class="string">"&#123;[([][])]"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; st;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  st.push(s[<span class="number">0</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s.length();i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    st.push(s[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> a = st.top();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    st.pop();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> b = st.top();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//取栈顶元素赋给a，然后把出栈，再把栈顶元素赋给b，如果a，b符合条件就全部出栈</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(<span class="keyword">int</span>(a) == <span class="keyword">int</span>(b)+<span class="number">1</span> || <span class="keyword">int</span>(a) == <span class="keyword">int</span>(b)+<span class="number">2</span>)&#123; <span class="comment">//(的ascii值是28，)的是29，[的是91，]的是93</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">      st.pop();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//如果不匹配就把元素压入栈中</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      st.push(s[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span>(st.empty())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"false"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="走迷宫"><a href="#走迷宫" class="headerlink" title="走迷宫"></a>走迷宫</h4><p><strong>题目描述</strong></p><p>给定一个迷宫，0表示通路，1表示障碍物。找出一个最佳路线（即不能重复经过同一个点）</p><p><strong>题目分析</strong></p><p>由于题目是“一条路走到黑”，直到不能走了才能退回，所以符合栈的数据类型。当下一个要走的点是0就把它压入栈中，如果是1就出栈从而实现退回的效果。</p><p><strong>代码实现</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> x;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> y;<span class="comment">//存放有效路径</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;font;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">8</span>][<span class="number">8</span>]=&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> m = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> n = <span class="number">1</span>; <span class="comment">//用来存放起点位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> endx = <span class="number">6</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> endy = <span class="number">6</span>; <span class="comment">//用来存放出口位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> dix[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> diy[<span class="number">4</span>] = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;<span class="comment">//两个数组用来存放顺时针移动时的方向</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">stack</span>&lt;font&gt; s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    font e;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span>(!(m==endx &amp;&amp; n==endy))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        e.x = m+dix[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        e.y = n+diy[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        s.push(e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(<span class="built_in">map</span>[e.x][e.y]==<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">map</span>[e.x][e.y] = <span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            m = e.x;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            n = e.y;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'('</span>&lt;&lt;m&lt;&lt;<span class="string">','</span>&lt;&lt;n&lt;&lt;<span class="string">')'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            i = j = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            s.pop();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            i++;j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">8</span>;t++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>;r&lt;<span class="number">8</span>;r++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">          <span class="built_in">cout</span>&lt;&lt;<span class="built_in">map</span>[t][r];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">       &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">       <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h4><p>KMP算法中比较核心的部分就是next数组的代码</p><p>所谓next数组，也就是当前下标之前的一段字母中最大匹配长度。比如给定一段字符串“ABABCABAA”，我们可以求得它的先行数组为：</p><p><img src="https://i.loli.net/2020/08/07/irXM1RpSnfl89vc.png" alt="QQ截图20200807165140.png"></p><p><img src="https://i.loli.net/2020/08/07/AdYC6cqsTr2hynM.png" alt="QQ截图20200807165439.png"></p><p>代码是如何写？</p><p><img src="https://i.loli.net/2020/08/07/qVwLSKIYiAlO3zJ.png" alt="QQ截图20200807165855.png"></p><p>定义一个 i 变量指向pattern数组，j 变量指向 prefix 数组</p><p>如果pattern[i] == pattern[j],那就令prefix[j]等于前一个位置上数字加一，并且i++,j++</p><p>如果pattern[i] != pattern[j],那就再进行判断，因为有这种情况：</p><p><img src="https://i.loli.net/2020/08/08/l9YgRPjzVSbkmK2.png" alt="QQ截图20200808122137.png"></p><p>这时候，C不等于A，我们不能直接令 i 等于零，prefix[j]=0，因为这里的prefix[j]=1,它们有公共部分“A”，所以当判断不相等的时候我们还要再进行判断。只要i大于零，就不停地回溯，直到指向第一个位置，这时候再判断是否相等来决定prefix[j]的值。</p><p>具体代码实现如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> prefix_table<span class="params">(<span class="keyword">char</span> pattern[],<span class="keyword">int</span> prefix[],<span class="keyword">int</span> n)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    prefix[<span class="number">0</span>]=<span class="number">0</span>; <span class="comment">//prefix数组的第一个元素都默认为零</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>,i=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span>(j&lt;n)&#123;    <span class="comment">//这里用while循环比for要好</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(pattern[j]==pattern[i])&#123;   <span class="comment">//如果相等</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            prefix[j] = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span>&#123;         <span class="comment">//如果不相等</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                i = prefix[i<span class="number">-1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                prefix[j] = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            &#125;         </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> pattern[] = <span class="string">"ABABCABAA"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> n = <span class="number">9</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> prefix[<span class="number">9</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    prefix_table(pattern,prefix,n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d "</span>,prefix[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>知道了先行数组prefix之和，要对其进行处理，以方便操作。即把数组中的每一位往后移一位，第一个数字令其为-1。</p><p><img src="https://i.loli.net/2020/08/08/ldvS3iOuLUTBfq1.png" alt="QQ截图20200808122746.png"></p><p>这样，我们就可以写出完整的程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> prefix_table<span class="params">(<span class="keyword">char</span> pattern[],<span class="keyword">int</span> prefix[],<span class="keyword">int</span> n)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    prefix[<span class="number">0</span>]=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>,i=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span>(j&lt;n)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(pattern[j]==pattern[i])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            prefix[j] = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                i = prefix[i<span class="number">-1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                prefix[j] = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            &#125;         </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> move_prefix_table<span class="params">(<span class="keyword">int</span> prefix[],<span class="keyword">int</span> n)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        prefix[i] = prefix[i<span class="number">-1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    prefix[<span class="number">0</span>] = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> kmp_search<span class="params">(<span class="keyword">char</span> pattern[],<span class="keyword">char</span> <span class="built_in">text</span>[])</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> m = <span class="built_in">strlen</span>(<span class="built_in">text</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(pattern);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span>* prefix = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    prefix_table(pattern,prefix,n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    move_prefix_table(prefix,n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(j==n<span class="number">-1</span> &amp;&amp; pattern[j]==<span class="built_in">text</span>[i])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"Found position of the pattern at: %d"</span>,i-j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//j = prefix[j];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(pattern[j]==<span class="built_in">text</span>[i])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">                i++;j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span>(prefix[j]==<span class="number">-1</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">                i++;j++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">                j = prefix[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> pattern[] = <span class="string">"ABABCABAA"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> <span class="built_in">text</span>[] = <span class="string">"ABABABCABAABABABAB"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    kmp_search(pattern,<span class="built_in">text</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h4 id="二叉树创建"><a href="#二叉树创建" class="headerlink" title="二叉树创建"></a>二叉树创建</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">char</span> data;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  node *left, *right; <span class="comment">//左子树和右子树</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function">node* createTree<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  node* p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">char</span> s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">cin</span>&gt;&gt;s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span>(s==<span class="string">'#'</span>)&#123; <span class="comment">//如果树为空</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    p = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    p = (node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node)); <span class="comment">//创建一个树节点</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    p-&gt;data = s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    p-&gt;left = createTree();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    p-&gt;right = createTree();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">return</span> p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> visit<span class="params">(node* p)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">cout</span>&lt;&lt;p-&gt;data;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//先序遍历</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> pretravel<span class="params">(node* p)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    visit(p);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    pretravel(p-&gt;left);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    pretravel(p-&gt;right);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"input: "</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">  node* t = createTree();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">  pretravel(t);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordCloud</title>
      <link href="/WordCloud/"/>
      <url>/WordCloud/</url>
      
        <content type="html"><![CDATA[<p>先来一张效果图</p><p><img src="https://i.loli.net/2020/02/07/kDn5ecsYOyI2PNb.png" alt="wordcloud3.png"></p><p>是不是有那么一丝丝的帅气呢</p><p>下面就来介绍模板 wordcloud 的使用：</p><h3 id="英语-拼音"><a href="#英语-拼音" class="headerlink" title="英语/拼音"></a>英语/拼音</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">string = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">From fairest creatures we desire increase,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">That thereby beauty's rose might never die,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">But as the riper should by time decease,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">His tender heir might bear his memory:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">But thou contracted to thine own bright eyes,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">Feed'st thy light's flame with self-substantial fuel,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">Making a famine where abundance lies,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">Thy self thy foe, to thy sweet self too cruel:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">Thou that art now the world's fresh ornament,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">And only herald to the gaudy spring,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">Within thine own bud buriest thy content,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="string">And tender churl mak'st waste in niggarding:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">Pity the world, or else this glutton be,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="string">To eat the world's due, by the grave and thee.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">wc = WordCloud(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#font_path = , 如果string 的内容是中文就要添加font_path参数的内容。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  background_color =<span class="string">'white'</span>,   <span class="comment">#背景色为白色</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  width = <span class="number">1000</span>,            <span class="comment">#宽度为1000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  height = <span class="number">800</span>             <span class="comment">#高度为800</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  ).generate(string)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">wc.to_file(<span class="string">'十四行诗.png'</span>)   <span class="comment">#保存图片，其格式为.png(可以根据需求变换格式)</span></span></pre></td></tr></table></figure><p>运行之后源文件目录下会生成图片:</p><p><img src="https://i.loli.net/2020/02/07/t5XiwWb4dOD9oPC.png" alt="十四行诗.png"></p><h3 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h3><p>不要以为做出了英文形式的，中文就是比葫芦画瓢了，不然会生成一堆乱码，比如:</p><p><img src="https://i.loli.net/2020/02/07/sW5DiBmH2aJNjvy.jpg" alt="wordcloud6.jpg"></p><p>这是由于没有给参数 font_path 进行赋值，必须赋值为中文字体.</p><p>或者是这种情况：</p><p><img src="https://i.loli.net/2020/02/07/qDIVFL4mozJdvGK.jpg" alt="wordcloud4.jpg"></p><p>虽然看起来很正常但是它是每一句话成一行，比较生硬，我们要实现分词功能</p><p>比如这样：</p><p><img src="https://i.loli.net/2020/02/07/DWkEM85rOofq637.jpg" alt="wordcloud5.jpg"></p><p>先看上面这个的代码是如何实现的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">text = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">对天生的尤物我们要求蕃盛，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">以便美的玫瑰永远不会枯死，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">但开透的花朵既要及时凋零，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">就应把记忆交给娇嫩的后嗣；</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">但你，只和你自己的明眸定情，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">把自己当燃料喂养眼中的火焰，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">和自己作对，待自己未免太狠，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">把一片丰沃的土地变成荒田。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">你现在是大地的清新的点缀，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">又是锦绣阳春的唯一的前锋，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="string">为什么把富源葬送在嫩蕊里，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">温柔的鄙夫，要吝啬，反而浪用？</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="string">可怜这个世界吧，要不然，贪夫，</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="string">就吞噬世界的份，由你和坟墓</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#利用 jieba 模板对中文的字符串进行分词</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">cut = jieba.cut(text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">cut_text = <span class="string">' '</span>.join(cut) <span class="comment">#词语之间是空格</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">wc = WordCloud(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    font_path=<span class="string">'msyh.ttc'</span>, <span class="comment"># 中文分词必须有中文字体设置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    width=<span class="number">1000</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    height=<span class="number">800</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    background_color=<span class="string">'white'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">#mask=img_array, # 若没有该项，则生成默认图片</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">wc.generate_from_text(cut_text) <span class="comment"># 绘制图片</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">wc.to_file(<span class="string">'wordcloud6.jpg'</span>) <span class="comment">#保存图片</span></span></pre></td></tr></table></figure><h3 id="wordcloud的参数介绍"><a href="#wordcloud的参数介绍" class="headerlink" title="wordcloud的参数介绍"></a>wordcloud的参数介绍</h3><ul><li><p>font_path : string //字体路径，需要展现什么字体就把该字体路径+后缀名写上，如：font_path = ‘黑体.ttf’</p></li><li><p>width : int (default=400) //输出的画布宽度，默认为400像素</p></li><li><p>height : int (default=200) //输出的画布高度，默认为200像素</p></li><li><p>mask : nd-array or None (default=None) //如果参数为空，则使用二维遮罩绘制词云。如果 mask 非空，设置的宽高值将被忽略，遮罩形状被 mask 取代。除全白（#FFFFFF）的部分将不会绘制，其余部分会用于绘制词云。如：bg_pic = imread(‘读取一张图片.png’)，背景图片的画布一定要设置为白色（#FFFFFF），然后显示的形状为不是白色的其他颜色。可以用ps工具将自己要显示的形状复制到一个纯白色的画布上再保存，就可以了。</p></li><li><p>background_color : color value (default=”black”) //背景颜色，如background_color=’white’,背景颜色为白色。</p></li><li><p>max_font_size : int or None (default=None) //显示的最大的字体大小</p></li><li><p>fit_words(frequencies)  //根据词频生成词云</p></li><li><p>generate(text)  //根据文本生成词云</p></li><li><p>generate_from_frequencies(frequencies[, …])   //根据词频生成词云</p></li><li><p>generate_from_text(text)    //根据文本生成词云</p></li><li><p>to_file(filename)   //输出到文件</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip下载速度过慢解决办法</title>
      <link href="/pip%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/pip%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>本来利用cmd的pip命令安装需要用到的python模板的时候就因为下载速度过慢而无法忍受，尤其是最近安装词云模板的时候崩溃了。</p><a id="more"></a><p>然后就搜集出了解决办法，比如：</p><p><code>pip install wordcloud</code></p><p>你会发现：<code>8kb/s</code> 这感人的数值</p><p>如果加上一行命令，就大不同：</p><p><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p>据说这是清华大学的镜像服务器，比较稳定。</p><p>这时候速度会飙升到你自己家的网速！</p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据处理</title>
      <link href="/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
      <url>/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="JSON-JavaScript-Object-Notation"><a href="#JSON-JavaScript-Object-Notation" class="headerlink" title="JSON ( JavaScript Object Notation)"></a>JSON ( JavaScript Object Notation)</h3><p>json是一种超轻量级的数据交换格式</p><p>如果爬取内容为json格式, 就要用到json模板里面的 json.loads()方法, 从而将json格式的字符串还原成python的数据结构.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取喜欢的小说</title>
      <link href="/%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E5%86%85%E5%AE%B9/"/>
      <url>/%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2426566</span>, <span class="number">2427508</span>):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    url = <span class="string">'http://www.tianxiabachang.cn/5_5864/'</span> + str(i) + <span class="string">'.html'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    headers = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    response = requests.get(url, headers=headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    response.encoding = <span class="string">'gbk'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">#需要进行两次的格式转换，先变成gbk再变成utf-8，不然会报错</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    response.encoding = <span class="string">'utf-8'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 把响应的内容扔到BeautifulSoup里，生成BeautifulSoup对象，用来解析HTML</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    soup = BeautifulSoup(response.text, <span class="string">'lxml'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 找到 id="content"的标签，也就是小说文本内容</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    contentsText = soup.find(id=<span class="string">"content"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 找到title标签</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    title = soup.title</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 获取title的文本内容，也就是去掉&lt;title&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    title = str(title.string)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">with</span> open(<span class="string">"天才相师.txt"</span>, <span class="string">'a'</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> file:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        file.write(contentsText.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        print(title + <span class="string">"完成！"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        file.close()</span></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019总结</title>
      <link href="/2019%E6%80%BB%E7%BB%93/"/>
      <url>/2019%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h4 id="学校生活"><a href="#学校生活" class="headerlink" title="学校生活"></a>学校生活</h4><p>拖拖拉拉两天了，今天才开始动手写这个总结。不知道怎么了，总觉得2019年过的过得异常的快。而当我这一刻努力回忆一些什么的时候，我发现，好像没有多少让我记得的。它们都随着风儿飘去，这一年浪花，拍在我人生的岸上，似乎并没有留下痕迹就已经消逝了，这大概又是我近乎荒废的一年吧。</p><p>今年的暑假期间我们搬了校区，我从512来到了538。说实话，心中有些不舍，毕竟都是交往了一年的好哥们说散就散了。虽然说宿舍很近随时可以聚，但总觉得少了凝聚力。我这人呢，什么都放心里。固然有些不舍，嗐~随它去吧，分分合合的，难道还是少有的事儿吗。</p><p>既然来到了新的环境，那就凑合呗。我的适应能力这么强，啥环境不能习惯。这学期我阴差阳错的当上了班上的心理委员。这职位有多闲呢，整个学期别说有个什么活动了，连个通知都没有。然后我还由于是一号床当上了寝室长。我这人，就烦一堆麻烦事。不过这两个职位也并没有给我带来什么麻烦。寝室长会议，逃了~ 班委会议，逃了~ 年级大会，逃了~ 不是我不愿意去，而是纵观大一一年来看，这些会议真的都是很没有意义，都是几句话就能解决的事，何必那么兴师动众呢。</p><p>一个学期下来，我真是水到家了。上课时的我大部分时间都花在了玩手机或是走神上。不知道为啥，就是不想听课。期末考试也只能算是勉强过关吧，反正奖学金是肯定没戏了。</p><p>写着写着突然发现自己毫无成就, 但转念一想，我也学了一些东西， 比如 ps 以及 pr 还有 python 的入门……emmm, 好吧, 只是浅显的入门。</p><h4 id="关于她"><a href="#关于她" class="headerlink" title="关于她"></a>关于她</h4><p>2018、2019、2020，怎么说，也是第三年了。两年的相处时间，我更加深入的了解了她的性格、脾气。两年来，从我以为我们会一直这样好下去，永远不会吵架。变成了后期的隔三岔五生次气，大多数都是彼此的想当然。异地恋的苦，大概就是所有的我以为和她以为吧。但是说起来，我毕竟也是一个男生，男人嘛，总要大度一些，哄哄哄才是正确的选择。</p><p>大二上这一个学期以来，我们总共见了五次面。虽然一直说去宜家逛逛小愿望一直落空，但也不后悔。我们两个人在一起，遛遛逛逛四处走走也是美妙极了。虽然没有什么可以值得记录的回忆，每次见面都是些生活的点点滴滴，我还是很怀念。怀念每一次我睡懒觉她催我起床的时刻，怀念每次我把她惹生气又把她哄好的过程，怀念我一本正经的胡说八道时她认真听的样子…她傻傻的爱着我，我定不能辜负她。</p><p>我想，这才是更加的贴近生活。既然认定了彼此，提前磨合磨合没有什么不好。</p><h4 id="大事记"><a href="#大事记" class="headerlink" title="大事记"></a>大事记</h4><p>大概是从元旦前后吧，爆发了武汉肺炎。是一种新型冠型病毒，比当年的非典厉害多了。作为一个00后，我没见证76年的唐山大地震、也不了解03年的非典，但这次的武汉肺炎算是我经历的一个大事件了。本来应该是欢天喜地的新年，但家家户户都被这场病毒的爆发而胆战心惊。商场的口罩被抢一空，没有人再愿意聚会、走亲戚。武汉封了、湖北封了、亳州封了、河南封了…就连很多村庄都已经封闭了。这时候，我才明白问题的严重性。作为一名00后，一腔热血还是有的。奈何并没有什么能力帮助这个社会，我所能做的，就是配合政府工作，不走亲戚不串门，勤洗手戴口罩，尽到一个公民应有的义务。</p><p>目前为止，感染人数倍数级增加，病毒又产生变异…但我坚信，这个民族已经传承了几千年，我们是一个坚强又必胜的民族。</p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeautifulSoup</title>
      <link href="/BeautifulSoup/"/>
      <url>/BeautifulSoup/</url>
      
        <content type="html"><![CDATA[<h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><p>▲ 自动将输入文档转换成 Unicode 编码， 输出文档转换成 UTF-8 编码.</p><ul><li>BeautifulSoup 类的基本元素</li></ul><table><thead><tr><th>基本元素</th><th align="center">说明</th></tr></thead><tbody><tr><td>Tag</td><td align="center">标签，最基本的信息组织单元, 分别用&lt;&gt;和&lt;/&gt;标明开头和结尾, 通过 soup.tag 的形式获取标签的信息</td></tr><tr><td>Name</td><td align="center">标签的名字, <p>…</p> 的标签名字是 p ,格式 : soup.tag.name</td></tr><tr><td>Atrributes</td><td align="center">标签的属性，字典形式组织, 格式：tag.attrs</td></tr><tr><td>NavigableString</td><td align="center">标签内非属性字符串, &lt;&gt;…&lt;/&gt;中字符串, 格式：tag.string</td></tr></tbody></table><p>▲ demo</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">r = requests.get(<span class="string">'http://python123.io/ws/demo.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">demo = r.text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(demo, <span class="string">'lxml'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">print(soup.prettify())   <span class="comment">#更为美观的输出 html 语法.</span></span></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   This <span class="keyword">is</span> a python demo page</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> &lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &lt;p class="title"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   &lt;b&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    The demo python introduces several python courses.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">   &lt;/b&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  &lt;p class="course"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">   Python <span class="keyword">is</span> a wonderful general-purpose programming language. You can learn Python <span class="keyword">from</span> novice to professional by tracking the following courses:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">   &lt;a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    Basic Python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">   &lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">   <span class="keyword">and</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">   &lt;a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    Advanced Python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">   &lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">   .</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"> &lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure><ul><li>BeautifulSoup 支持的解析器</li></ul><table><thead><tr><th>解析器</th><th align="center">使用方法</th></tr></thead><tbody><tr><td>Python标准库</td><td align="center">BeautifulSoup(markup, ‘html.parser’)</td></tr><tr><td>lxml HTML解析器</td><td align="center">BeautifulSoup(markup, ‘lxml’)</td></tr><tr><td>lxml XML解析器</td><td align="center">BeautifulSoup(markup, ‘xml’)</td></tr><tr><td>html5lib</td><td align="center">BeautifulSoup(markup, ‘html5lib’)</td></tr></tbody></table><p>lxml解析器有 HTML 和 XML 的功能, 强大且速度快, 所以我们常用的是 lxml 解析器.</p><p>用法:<br><code>soup = BeautifulSoup(html, &#39;lxml&#39;)</code></p><p>实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">html = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;p class="title" name="dormouse"&gt;&lt;b&gt;This is a demo&lt;/b&gt;&lt;/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta property="og:type" content="website"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta property="og:title" content="Lihao"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta property="og:url" content="https:&amp;#x2F;&amp;#x2F;minewelt.github.io&amp;#x2F;index.html"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta property="og:site_name" content="Lihao"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta property="og:locale" content="zh-CN"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta name="twitter:card" content="summary"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">soup = bs(html, <span class="string">'lxml'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">print(soup.p.string)</span></pre></td></tr></table></figure><p>运行结果就是:</p><p><code>This is a demo</code></p><p><code>soup.p.string</code> 的意思就是打印出 title 节点里面的字符内容</p><p>其实任何存在于 html 语法得标签都可以使用 <code>soup.tag</code>  （tag 就是 html 语法中的标签）的方式获取, 如果同样的节点名称有多个，则只取第一个节点的内容.</p><p>获取标签的名字的方法是 <code>soup.tag.name</code></p><p>获取标签的父标签的方法是 <code>soup.tag.parent.name</code></p><h3 id="内容遍历"><a href="#内容遍历" class="headerlink" title="内容遍历"></a>内容遍历</h3><ul><li>上行遍历 <code>for parent in soup.a.parents:</code></li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.parent</td><td>节点的父亲标签</td></tr><tr><td>.parents</td><td>节点先辈标签的迭代类型, 用于循环遍历先辈节点</td></tr></tbody></table><ul><li>下行遍历</li></ul><p>1、 遍历儿子节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.children:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    print(child)</span></pre></td></tr></table></figure><p>2、 遍历子孙节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.children:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    print(child)</span></pre></td></tr></table></figure><hr><p>疑问：为什么如果直接传入 html 代码的时候，要 <code>print(soup.tag.string)</code> 就会显示标签下的字符串, 而如果传入一个 url 的 text 文本就需要 <code>print(tag.string)</code> 才可以 , 因为当用 <code>print(soup.tag.string)</code> 的时候会报错: <code>AttributeError: &#39;NoneType&#39; object has no attribute &#39;string&#39;</code></p><p>由此, 产生了一个疑问, “soup.” 加不加到底有什么区别 ?</p><p>一经思考, 发现这是一个很简单的问题, 甚至当我刚把疑问敲下来的瞬间就已经想出了问题的答案. “soup.” 加这个前缀就是为了一种索引的功能. 而我的源代码是：<code>for child in soup.title.children:</code></p><p>这样，就是已经令 child 代替了 soup.title.children</p><p>就不需要再纠结了…</p><hr><h3 id="方法选择器"><a href="#方法选择器" class="headerlink" title="方法选择器"></a>方法选择器</h3><h4 id="find-all"><a href="#find-all" class="headerlink" title="find_all()"></a>find_all()</h4><p>(是不是让你想到了正则表达式里面的findall(), 如果忘了快去复习一下吧<del>~</del>)</p><p>API: <code>find_all(name, attrs, recursive, text, **kwargs)</code></p><ul><li><p>name : 根据节点名查询元素</p></li><li><p>attrs : 传入属性来查询元素</p></li><li><p>text : 匹配节点的文本，传入的形式可以是字符串也可以是正则表达式对象.</p></li></ul><h3 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h3><p>对比方法选择器， 我觉得还是CSS选择器更加方便快捷简单易懂.</p><p>说到 CSS选择器， 不得不说到 select() 方法.</p><p>▲ select() 返回的是列表类型</p><p>html 源码奉上~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">html &#x3D; &quot;&quot;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        &lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &lt;p class&#x3D;&quot;title&quot; name&#x3D;&quot;dromouse&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            &lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &lt;&#x2F;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        &lt;p class&#x3D;&quot;story&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            Once upon a time there were three little sisters; and their names were</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            &lt;a class&#x3D;&quot;mysis&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                &lt;b&gt;the first b tag&lt;b&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                Elsie</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            &lt;&#x2F;a&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            &lt;a class&#x3D;&quot;mysis&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;lacie&quot; id&#x3D;&quot;link2&quot; myname&#x3D;&quot;kong&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                Lacie</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            &lt;&#x2F;a&gt;and</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            &lt;a class&#x3D;&quot;mysis&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;tillie&quot; id&#x3D;&quot;link3&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                Tillie</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            &lt;&#x2F;a&gt;;and they lived at the bottom of a well.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &lt;&#x2F;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &lt;p class&#x3D;&quot;story&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            myStory</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            &lt;a&gt;the end a tag&lt;&#x2F;a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        &lt;&#x2F;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &lt;a&gt;the p tag sibling&lt;&#x2F;a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;html&gt;</span></pre></td></tr></table></figure><h4 id="1、通过标签选择"><a href="#1、通过标签选择" class="headerlink" title="1、通过标签选择"></a>1、通过标签选择</h4><ul><li>选择所有title标签</li></ul><p>soup.select(“title”)</p><ul><li>选择所有p标签中的第三个标签</li></ul><p>soup.select(“p:nth-of-type(3)”) 相当于soup.select(p)[2]</p><ul><li>选择body标签下的所有a标签</li></ul><p>soup.select(“body a”)</p><ul><li>选择body标签下的直接a子标签</li></ul><p>soup.select(“body &gt; a”)</p><ul><li>选择id=link1后的所有兄弟节点标签</li></ul><p>soup.select(“#link1 ~ .mysis”)</p><ul><li>选择id=link1后的下一个兄弟节点标签</li></ul><p>soup.select(“#link1 + .mysis”)</p><h4 id="2、通过类名查找"><a href="#2、通过类名查找" class="headerlink" title="2、通过类名查找"></a>2、通过类名查找</h4><ul><li>选择a标签，其类属性为mysis的标签</li></ul><p>soup.select(“a.mysis”)</p><h4 id="3、通过id查找"><a href="#3、通过id查找" class="headerlink" title="3、通过id查找"></a>3、通过id查找</h4><ul><li>选择a标签，其id属性为link1的标签</li></ul><p>soup.select(“a#link1”)</p><h4 id="4、通过属性查找，当然也适用于class"><a href="#4、通过属性查找，当然也适用于class" class="headerlink" title="4、通过属性查找，当然也适用于class"></a>4、通过属性查找，当然也适用于class</h4><ul><li>选择a标签，其属性中存在myname的所有标签</li></ul><p>soup.select(“a[myname]”)</p><ul><li>选择a标签，其属性href=<a href="http://example.com/lacie的所有标签" target="_blank" rel="noopener">http://example.com/lacie的所有标签</a></li></ul><p>soup.select(“a[href=’<a href="http://example.com/lacie&#39;]&quot;" target="_blank" rel="noopener">http://example.com/lacie&#39;]&quot;</a>)</p><ul><li>选择a标签，其href属性以http开头</li></ul><p>soup.select(‘a[href^=”http”]’)</p><ul><li>选择a标签，其href属性以lacie结尾</li></ul><p>soup.select(‘a[href$=”lacie”]’)</p><ul><li>选择a标签，其href属性包含“.com”</li></ul><p>soup.select(‘a[href*=”.com”]’)</p><ul><li>从html中排除某标签，此时soup中不再有script标签</li></ul><p>[s.extract() for s in soup(‘script’)]</p><ul><li>排除多个</li></ul><p>[s.extract() for s in soup([‘script’,’fram’]</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pyquery</title>
      <link href="/pyquery/"/>
      <url>/pyquery/</url>
      
        <content type="html"><![CDATA[<p>初始化 pyquery 的时候不仅可以传入 HTML 文档， 还可以直接传入传入 URL 和 本地文件.</p><h4 id="1、-初始化"><a href="#1、-初始化" class="headerlink" title="1、 初始化"></a>1、 初始化</h4><ul><li>html字符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">html = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div id="error-notice-container"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">      &lt;div id="error-notice" class="notice-hide" role="alert"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-icon"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-msg"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-link" class="ripple" tabindex="0" role="button"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">      &lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">doc = pq(html)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">print(doc(<span class="string">'span'</span>))</span></pre></td></tr></table></figure><p>这样, 就把 div 节点的内容打印出来了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;span id&#x3D;&quot;error-notice-icon&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        &lt;span id&#x3D;&quot;error-notice-msg&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        &lt;span id&#x3D;&quot;error-notice-link&quot; class&#x3D;&quot;ripple&quot; tabindex&#x3D;&quot;0&quot; role&#x3D;&quot;button&quot;&#x2F;&gt;</span></pre></td></tr></table></figure><ul><li>URL 初始化</li></ul><p>比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">headers = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">doc = pq(url = <span class="string">'https://maoyan.com/board/4?offset=0'</span>, headers=headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">print(doc(<span class="string">'title'</span>))</span></pre></td></tr></table></figure><p>结果如下:</p><p><code>&lt;title&gt;TOP100榜 - 猫眼电影 - 一网打尽好电影&lt;/title&gt;</code></p><ul><li>文件初始化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">doc = pq(filename = <span class="string">'demo.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">print(doc(<span class="string">'li'</span>))</span></pre></td></tr></table></figure><p>这就要求本地有一个名为 demo.html 的文件夹，内容是 html 代码.</p><h4 id="2-、基本-CSS-选择器"><a href="#2-、基本-CSS-选择器" class="headerlink" title="2 、基本 CSS 选择器"></a>2 、基本 CSS 选择器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">html = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div id="error-notice-container"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">      &lt;div id="error-notice" class="notice-hide" role="alert"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-icon"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-msg"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">        &lt;span id="error-notice-link" class="ripple" tabindex="0" role="button"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">      &lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">    &lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">doc = pq(html)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">print(doc(<span class="string">'#error-notice-container .notice-hide span'</span>))</span></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;span id&#x3D;&quot;error-notice-icon&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        &lt;span id&#x3D;&quot;error-notice-msg&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        &lt;span id&#x3D;&quot;error-notice-link&quot; class&#x3D;&quot;ripple&quot; tabindex&#x3D;&quot;0&quot; role&#x3D;&quot;button&quot;&#x2F;&gt;</span></pre></td></tr></table></figure><p>在初始化PyQuery 对象之后， 我们传入了一个CSS选择器 #error-notice-container .notice-hide span 意思就是先选取 id 为 error-notice-container 的节点, 然后选取内部的 class 为 notice-hide 的节点内部所有的 span 节点.(好吧，读起来很绕口，根据代码理解更好)</p><h4 id="3、查找节点"><a href="#3、查找节点" class="headerlink" title="3、查找节点"></a>3、查找节点</h4><p>·1</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ps[图片转换成Gif格式]</title>
      <link href="/Ps-%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E6%88%90Gif%E6%A0%BC%E5%BC%8F/"/>
      <url>/Ps-%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E6%88%90Gif%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>表情包横行的今天，一言不合对方就丢来一个Gif动图. 这让我们有了一个初步的认识， “ 哦，原来 Gif 是动图的标志. 是的，gif是一种比较常用的动态图像格式，多数是由多帧图像合并在一起组成的gif动画，当然也有单帧的。gif文件几乎可以使用任何格式的gif播放器打开，比如常用的flash、看图软件、gif动画制作软件等等。</p><p>现在我们就要尝试把一张不是动图的图片转换成 Gif 格式.</p><p>想到转换，我电脑里现存的图片处理软件只有 Photoshop , 回想起之前做好图片之后的 “ 导出为 ” ， 我豁然开朗.</p><p><img src="https://i.loli.net/2020/01/09/dB4SXzPiFLn9sZR.png" alt=""></p><p><img src="https://i.loli.net/2020/01/09/MLkOnvwbo56e3ra.png" alt=""></p><p>一顿操作，发现…好像不行</p><p>然后百度发现可以先导出为 Web 的格式，然后再打开之后保存图片即可.如下：</p><p><img src="https://i.loli.net/2020/01/09/B68ip2YLVorU57s.png" alt=""></p><p><img src="https://i.loli.net/2020/01/09/TY6D97KoGECpWdz.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> photoshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣top250</title>
      <link href="/%E8%B1%86%E7%93%A3top250/"/>
      <url>/%E8%B1%86%E7%93%A3top250/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">226</span>,<span class="number">25</span>):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    url = <span class="string">'https://movie.douban.com/top250?start='</span> + str(i) + <span class="string">'&amp;filter='</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    headers = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    response = requests.get(url, headers=headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    html = response.text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    result = re.findall(<span class="string">'class="info".*?title.*?&gt;(.*?)&lt;'</span>,html, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> results <span class="keyword">in</span> result:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">with</span> open(<span class="string">'result.txt'</span>,<span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">             f.write(json.dumps(results, ensure_ascii=<span class="literal">False</span>) + <span class="string">'\n'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        time.sleep(<span class="number">1</span>)</span></pre></td></tr></table></figure><p>其它的模板通过前面的学习已经知道他们的作用了, 但此刻的 json 却不知道是从哪里冒出来的.</p><p>我们知道，我们获得的 result 是 list 类型, 而列表是不能直接写入文件中的, 那我们只好进行转化, 使列表变得有序化.</p><p>python 提供了一种方法, json 中的 dumps() 方法可以使其序列化, 而dumps()里面有一个参数是 ensure_ascii , 默认是 True ，<br>如果改成 False 编码方式就可以保证输出中文而不是 Unicode 编码。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_spider[正则表达式]</title>
      <link href="/Web-spider-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/Web-spider-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="常用的匹配规则"><a href="#常用的匹配规则" class="headerlink" title="常用的匹配规则"></a>常用的匹配规则</h4><table><thead><tr><th>模式</th><th align="center">描述</th></tr></thead><tbody><tr><td>\w</td><td align="center">匹配字母、数字及下划线</td></tr><tr><td>\d</td><td align="center">匹配任意数字（0-9）</td></tr><tr><td>\s</td><td align="center">匹配任意空白字符</td></tr><tr><td>\n</td><td align="center">匹配一个换行符</td></tr><tr><td>\t</td><td align="center">匹配一个制表符</td></tr><tr><td>^</td><td align="center">匹配一行字符串的开头</td></tr><tr><td>$</td><td align="center">匹配一行字符串的结尾</td></tr><tr><td>.</td><td align="center">匹配任意字符（除换行符）</td></tr><tr><td>*</td><td align="center">匹配0个或多个表达式</td></tr><tr><td>？</td><td align="center">匹配0个或一个前面的正则表达式定义的片段，非贪婪方式</td></tr></tbody></table><ul><li>match()  :  从头开始匹配</li></ul><p>作为一个常用的匹配方式， 向它传入要匹配的字符串以及正则表达式，就可以检测这个正则表达式是否匹配字符串.它的第一个参数要传入正则表达式, 第二个参数要传入字符串.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">content = <span class="string">'hello cike 567'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">result = re.match(<span class="string">'^hello\s\w&#123;4&#125;\s\d&#123;3&#125;$'</span>, content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">print(result)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">print(result.group())</span></pre></td></tr></table></figure><p>如果匹配成功就会返回结果，如果失败就会返回 None.</p><p>运行结果如下：</p><p><code>&lt;re.Match object; span=(0, 14), match=&#39;hello cike 567&#39;&gt;</code><br><code>hello cike 567</code></p><p>如果想要匹配目标, 比如 567 ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">content = <span class="string">'hello cike 567'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">result = re.match(<span class="string">'^hello\s\w&#123;4&#125;\s(\d+)'</span>, content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">print(result.group(<span class="number">1</span>))</span></pre></td></tr></table></figure><p>运行结果:</p><p><code>567</code></p><p>这样我们就可以通过一个括号把想要的部分括起来, 然后通过 group(1) 访问第一个括号里面的内容.</p><h4 id="通用匹配"><a href="#通用匹配" class="headerlink" title="通用匹配"></a>通用匹配</h4><p>如果要一个一个的匹配, 我们倒还不如不用正则表达式, 那么有没有一种通用的匹配方法呢？ 当然有了.</p><ul><li>贪婪</li></ul><p>在 python 中， 把 “ .* “ 当作通用的匹配方式（当然，除了换行符外）在最后记得加上一个 $ 结尾符号即可， 不然， 贪婪的 .* 会把你后面所有的字符吃掉 (当然，也是除了换行符外) </p><ul><li>非贪婪</li></ul><p>.*? ： </p><p>相对于想要匹配尽量多字符的 .* ， .*? 却恰恰相反，它匹配的是尽量少的字符</p><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">content = <span class="string">'hello cike 567'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">result = re.match(<span class="string">'^he.*?(\d+)$'</span>, content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">print(result.group(<span class="number">1</span>))</span></pre></td></tr></table></figure><p>运行结果如下：</p><p><code>567</code></p><p>猜一下如果我们不加 ？ , 会是什么结果.</p><p><code>7</code></p><p>因为 .* 是匹配尽量多的字符, 所以由于它的贪婪, 只给 \d+ 留下了一个数字 7, 当然这也是因为 \d+ 是匹配一个或多个数字的原因使得可以进行这样的分配.</p><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><p>前面我们说过， 通用符可以包括任意的字符, 但是不能包括换行符， 那么如果想要再包括换行符，就要加上 re.S</p><p>比如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">content = <span class="string">'''hello</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">cike 567</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">result = re.match(<span class="string">'^he.*?(\d+)$'</span>, content, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">print(result.group(<span class="number">1</span>))</span></pre></td></tr></table></figure><p>运行结果：</p><p><code>567</code></p><p>常见的修饰符如下:</p><table><thead><tr><th>修饰符</th><th align="center">描述</th></tr></thead><tbody><tr><td>re.I</td><td align="center">使匹配对大小写不敏感</td></tr><tr><td>re.L</td><td align="center">使本地化识别匹配</td></tr><tr><td>re.M</td><td align="center">多行匹配</td></tr><tr><td>re.S</td><td align="center">使.匹配包括行在内的所有字符</td></tr><tr><td>re.U</td><td align="center">根据Unicode字符集解析字符</td></tr></tbody></table><hr><p>道理我们都懂，but…</p><p>当我们的字符串里面包含有 “ . “ 又该怎么办呢？</p><p>这时候我们就需要转义.和c语言一样，在需要转义的字符前面加上 \</p><p>比如：</p><p><code>result = &#39;www\.baidu\.com&#39;</code></p><h4 id="search-：-扫描整个字符串，返回第一个匹配成功的结果"><a href="#search-：-扫描整个字符串，返回第一个匹配成功的结果" class="headerlink" title="search()  ： 扫描整个字符串，返回第一个匹配成功的结果"></a>search()  ： 扫描整个字符串，返回第一个匹配成功的结果</h4><p>实例感受一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">html = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;span class="glyphicon glyphicon-user"&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;span class="glyphicon-class"&gt;消息通知(</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;span  style="color: #ed5736; font-weight: bold" id="xxtz" &gt;0&lt;/span&gt;&amp;nbsp;)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">      '''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">result = re.search(<span class="string">'-class.*?&gt;(.*?)\('</span>, html, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">print(result.group(<span class="number">1</span>))</span></pre></td></tr></table></figure><p>运行结果如下:</p><p><code>消息通知</code></p><p>没有了繁琐的内容，我们可以直接快速的找到自己想要的内容.</p><p>但是有一个不得不提，search() 方法只能获取第一个符合要求的， 但是如果我们想要获取一组数据, search 方法就显得有些心有余而力不足了.<br>我们就不得不引入 findall()</p><h4 id="findall-搜索整个字符串，-返回匹配正则表达式的所有内容"><a href="#findall-搜索整个字符串，-返回匹配正则表达式的所有内容" class="headerlink" title="findall() : 搜索整个字符串， 返回匹配正则表达式的所有内容."></a>findall() : 搜索整个字符串， 返回匹配正则表达式的所有内容.</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">html = <span class="string">'''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;a href="/jsxsd/xsxkjg/xsxkkb" target="kbFrame"&gt;选课课表&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/li&gt;  </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">              </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;li id="xkjgLi"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;a href="/jsxsd/xsxkjg/comeXkjglb" target="kbFrame"&gt;选课结果查看及退选&lt;/a&gt; </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">               </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;li id="xkrzLi"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;a href="/jsxsd/xsxkjg/getTkrzList" target="kbFrame"&gt;退课日志查看&lt;/a&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--   </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;li id="xktkLi"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;a href="/jsxsd/xsxkjg/comeXkjglb" target="kbFrame"&gt;课程停开列表&lt;/a&gt; </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/li&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="string">      '''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">'target.*?&gt;(.*?)&lt;'</span>, html, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    print(result[i])</span></pre></td></tr></table></figure><p>输出结果如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">选课课表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">选课结果查看及退选</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">退课日志查看</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">课程停开列表</span></pre></td></tr></table></figure><ul><li>乱入： 不知到现在你是否和我一样有一个疑问， 那就是为什么在这里用了列表的访问方式 []<br>因为用 type() 方法检查之后发现 result 的类型就是 list 类型的. 而对于之前的 match 和 search方法都是返回一个内容， 故可以用 group()<br>但是 因为 findall() 方法是输出多个内容故不能再用 group 方法.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有道翻译</title>
      <link href="/Web-spider-%5B%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%5D/"/>
      <url>/Web-spider-%5B%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%5D/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">content = input(<span class="string">"请输入待翻译的内容(输入0退出程序):"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> content == <span class="string">"0"</span>: <span class="keyword">break</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">url = <span class="string">'http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">data = &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'i'</span>] = content</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'from'</span>] = <span class="string">'AUTO'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'to'</span>] =  <span class="string">'AUTO'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'smartresult'</span>] = <span class="string">'dict'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'client'</span>] = <span class="string">'fanyideskweb'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'salt'</span>] = <span class="string">'15780286531233'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'sign'</span>] = <span class="string">'fea785927e5dc89ee5d05f9b5d4035b3'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'ts'</span>] = <span class="string">'1578028653123'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'bv'</span>] = <span class="string">'42160534cfa82a6884077598362bbc9d'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'doctype'</span>] = <span class="string">'json'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'version'</span>] = <span class="string">'2.1'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'keyfrom'</span>] = <span class="string">'fanyi.web'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'action'</span>] = <span class="string">'FY_BY_REALTlME'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">data = urllib.parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">response = urllib.request.urlopen(url, data) <span class="comment">#新增了data参数.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">html = response.read().decode(<span class="string">'utf-8'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">result = json.loads(html)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">print(result[<span class="string">"translateResult"</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">"tgt"</span>])</span></pre></td></tr></table></figure><p>在 python 中，json结构 和 字典结构的形式很相似,上面的 “html” 类型就是 json （在Data中的 “doctype” 可见）.</p><p>如果直接输出 html (比如输入的是”love”), 结果是:</p><p><code>{&quot;type&quot;:&quot;EN2ZH_CN&quot;,&quot;errorCode&quot;:0,&quot;elapsedTime&quot;:1,&quot;translateResult&quot;:[[{&quot;src&quot;:&quot;love&quot;,&quot;tgt&quot;:&quot;爱&quot;}]]}</code></p><p>python中提供的转换方式是 json.loads() 这样, result 就变成了字典类型, 我们就可以通过访问字典里面的键访问翻译的内容.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_spider[解析链接]</title>
      <link href="/Web-spider-%E8%A7%A3%E6%9E%90%E9%93%BE%E6%8E%A5/"/>
      <url>/Web-spider-%E8%A7%A3%E6%9E%90%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>urllib 的 parse 模板定义了处理 URL 的标准接口, 例如实现 url 各部分的抽取， 合并， 以及链接的转换.</p><h4 id="urlparse"><a href="#urlparse" class="headerlink" title="urlparse"></a>urlparse</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">result = urlparse(<span class="string">'http://www.baidu.com/index.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">print(type(result), <span class="string">'\n'</span>, result)</span></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;class &#39;urllib.parse.ParseResult&#39;&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> ParseResult(scheme&#x3D;&#39;http&#39;, netloc&#x3D;&#39;www.baidu.com&#39;, path&#x3D;&#39;&#x2F;index.html&#39;, params&#x3D;&#39;&#39;, query&#x3D;&#39;&#39;, fragment&#x3D;&#39;&#39;)</span></pre></td></tr></table></figure><p>看以看出， 返回的是一个 ParseResult 类型的对象. 包含了六个部分， scheme, netloc, path, params, fragment.</p><p>scheme : 协议</p><p>netloc : 域名</p><p>path : 访问路径</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_spider[异常处理]</title>
      <link href="/Web-spider-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/Web-spider-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>了解了发送请求的过程之后, 我们不得不产生疑问： 天哪！在网络环境不好的情况下, 那我的爬虫脚本岂不是要终止运行了 ？ 程序很有可能在一些非人为因素情况下因报错而终止运行, 所以异常处理很重要.</p><p>urllib 中的 error 模板定义了 request 模块产生的异常.</p><h4 id="URLErrorr"><a href="#URLErrorr" class="headerlink" title="URLErrorr"></a>URLErrorr</h4><p>URLError 来自于 urllib 的 error 模块, 它有一个属性 reason ，可以返回错误的原因.</p><p>比如说…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> error, request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    response = request.urlopen(<span class="string">'https://minewelt.cn/index.htm'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    print(e.reason)</span></pre></td></tr></table></figure><p>我们打开了一个不存在的页面, 程序自然会报错, 但我们用 URLError 这个异常， 就会出现</p><p><code>Not Found</code></p><p>我们亲切的称呼它为 404.</p><h4 id="HTTPError"><a href="#HTTPError" class="headerlink" title="HTTPError"></a>HTTPError</h4><p>它是 URLError 的子类, 专门用来处理 HTTP  请求错误. </p><ul><li><p>code ： 返回 HTTP 状态码.</p></li><li><p>reason ： 同 URLError.</p></li><li><p>headers ： 返回请求头.</p></li></ul><p>实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> error, request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    response = request.urlopen(<span class="string">'https://minewelt.cn/index.htm'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    print(e.reason,<span class="string">'\n'</span>, e.code,<span class="string">'\n'</span>, e.headers)</span></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Not Found </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> 404 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> Content-Type: text&#x2F;html; charset&#x3D;utf-8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Server: GitHub.com</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">ETag: &quot;5cc3539e-247b&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;none&#39;; style-src &#39;unsafe-inline&#39;; img-src data:; connect-src &#39;self&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">X-Proxy-Cache: MISS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">X-GitHub-Request-Id: 5B24:5635:1BC6492:1D88265:5E141BCC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Content-Length: 9339</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Accept-Ranges: bytes</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Date: Tue, 07 Jan 2020 05:58:17 GMT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Via: 1.1 varnish</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Age: 557</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">X-Served-By: cache-tyo19943-TYO</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">X-Cache: HIT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">X-Cache-Hits: 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">X-Timer: S1578376698.636971,VS0,VE1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">Vary: Accept-Encoding</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">X-Fastly-Request-ID: af139429859815307ec6c7a9822fc56d4967bee0</span></pre></td></tr></table></figure><p>既然 HTTPError 是 URLError 的子类， 所以我们不妨先检查子类， 再检查父类. 这样可以提高效率.</p><pre><code>from urllib import request, errortry:    response = request.urlopen(&apos;https://minewelt.cn/index.htm&apos;)except error.HTTPError as e:    print(e.reason,&apos;\n&apos;, e.code,&apos;\n&apos;, e.headers)except error.URLError as e:    print(e.reason)else:    print(&apos;Request Successfully&apos;)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web spider[打开链接]]</title>
      <link href="/Web-spider-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94/"/>
      <url>/Web-spider-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<p>urllib 内置四个模板 : </p><ul><li>request : HTTP 请求模板, 可以用来模拟发送请求.</li><li>error : 异常处理模块, 用以保证程序不会异常中断.</li><li>parse : 工具模板, 提供了很多的 URL 处理方法.(拆分, 解析, 合并等)</li><li>robotparser : 主要识别网站的 robots.txt 文件, 然后判断哪些网站可以爬取.</li></ul><hr><h4 id="urlopen"><a href="#urlopen" class="headerlink" title="urlopen()"></a>urlopen()</h4><p>在python的官方文档中, urlopen() 函数的 API ：</p><p><code>urllib.request.urlopen(url, data=None, [time,]*, cafile=None, capath=None, cadefault=False, context=None)</code></p><p>首先我们看看它的强大之处.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">response = urllib.request.urlopen(<span class="string">'https://www.baidu.com'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span></pre></td></tr></table></figure><p>运行结果如下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">location.replace(location.href.replace(<span class="string">"https://"</span>,<span class="string">"http://"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;noscript&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/noscript&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure><p>仅仅两行代码, 便完成了对 pyhton 代码的抓取, 得到了网页的源码之后, 我们可以得到任何想要的信息 : 链接、图片地址、文本信息…</p><ul><li>data</li></ul><p>data 参数是可选的， urlopen 的默认的 data 方式是 GET ，给 data 赋值之后它的请求方式就变成了 POST 形式. </p><p>需要注意的是, 在 python 的官方文档中, 指定 data 这个参数的形式必须是 urlencode() 的形式, 所以我们需要用到 urllib.parse 模板里面的 urllib.parse.urlencode() 方法.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">data = &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">data[<span class="string">'word'</span>] = <span class="string">'hello'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">data = urllib.parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">response = urllib.request.urlopen(<span class="string">'http://httpbin.org/post'</span>, data = data)  <span class="comment">#此处的url是用来测试POST请求的链接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">print(response.read())</span></pre></td></tr></table></figure><p>运行结果如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="string">"args"</span> : &#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="string">"data"</span> : <span class="string">""</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="string">"files"</span> : &#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">"form"</span> : &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">"word"</span> : <span class="string">"hello"</span>        <span class="comment">#我们传递的参数出现在了 form 中，表明是模拟了表单的提交方式是以 POST 形式传输数据</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">"headers"</span> : &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">"Accept-Encoding"</span> : <span class="string">"identity"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">"Content-Length"</span> : <span class="string">"10"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">"Content-Type"</span> : <span class="string">"application/x-www-form-urlencode"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">"Host"</span> : <span class="string">"httpbin.org"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">"User-Agent"</span> : <span class="string">"Python-urllib/3.8"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="string">"json"</span> : null,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">"origin"</span> : <span class="string">"123.124.23.253"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="string">"url"</span> : <span class="string">"http://httpbin.org/post"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>timeout</li></ul><p>timeout 参数用于设置超时时间，单位是秒, 如果超过这个设定的时间， 就会抛出异常.</p><ul><li>其他参数</li></ul><p>详情请移步: <a href="https://docs.python.org/3/library/urllib.request.html" target="_blank" rel="noopener">https://docs.python.org/3/library/urllib.request.html</a></p><hr><h4 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h4><p>对于简单的请求, urlopen 可以胜任, 但是不足以构成完整的请求. 如果要添加 Headers 等信息， 就要更强大的 Request 类.</p><p>实例感受一下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">request = urllib.request.Request(<span class="string">'http://python.org'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">response = urllib.request.urlopen(request)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span></pre></td></tr></table></figure><p>注意, 这里我们依然是用 urlopen 打开， 不同的是， 其参数不再是 url ，而是 Request 对象.</p><ul><li>Request 的参数构造：</li></ul><p><code>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</code></p><ul><li><p>headers : 是一个字典, 它就是请求头, 添加请求的最常用方法就是 通过修改 User—Agent 来伪装浏览器 , 默认的 Python-urllib.（直接 copy 源码中的 User-Agent ）</p></li><li><p>origin_req_host : 指的是请求方的 host 名称或者 ip地址.</p></li><li><p>unverifiable : 是用来表示请求是否无法验证, 默认是False. </p></li><li><p>method : 是一个字符串, 指示请求的方法, 比如 GET，POST 和 PUT.</p></li></ul><hr><h4 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h4><p>如果我们需要功能更高级 ( 比如Cookies处理， 代理设置 ) 的请求方式, 就要使用 Handler.</p><p><a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler" target="_blank" rel="noopener">https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler</a></p><h3 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h3><p>相对于 urlpoen 的含糊不清， 我更喜欢 requests 的简单直接。它可以指明请求方式（POST还是GET），可以进行代理设置，Cookies 设置，添加 headers .</p><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><ul><li>添加 headers</li></ul><p>现如今，很多网页都禁止爬取，所以有必要添加 headers 来模拟用户访问.</p><p><code>requests.get(url, headers = headers)</code></p><p>具体用法和 urlopen 一样， 这里就不再复述了.</p><ul><li>抓取二进制数据</li></ul><p>其实，图片，音频，视频这些文件都是二进制代码，由于有特殊的保存方式和解码方式所以才会产生不同的结果.所以，如果我们想要获取他们，就要抓取二进制代码.</p><ul><li>代理设置</li></ul><p>对于很多网站, 在你测试的时候请求几次之后，能获取正常内容，一旦开始大规模爬取, 网页就会弹出验证页面. 或者禁止你的 ip 访问权限.<br>这时候我们就要选用不同的代理.</p><p>而与代理设置有关的参数就是 proxies.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">url = <span class="string">'http://www.baidu.com'</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">proxies  = &#123;<span class="string">'http'</span>:<span class="string">'http://183.207.224.43:80'</span>,<span class="string">'http'</span>:<span class="string">'http://180.97.34.35:80'</span>&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">requests.get(url, proxies=proxies)</span></pre></td></tr></table></figure><p>当然，我们有需要的话，可以同时把 headers 也塞进去.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的魔法棒</title>
      <link href="/Python%E7%9A%84%E9%AD%94%E6%B3%95%E6%A3%92/"/>
      <url>/Python%E7%9A%84%E9%AD%94%E6%B3%95%E6%A3%92/</url>
      
        <content type="html"><![CDATA[<p>还记的第一次见到 “<strong>init</strong>” 的心情吗？实在不知道这个拥有双下横线的到底是什么东西.</p><p>一通百度加谷歌, 发现其实就是 python 中的魔法方法.</p><h4 id="What’s-the-python’s-magic-methods"><a href="#What’s-the-python’s-magic-methods" class="headerlink" title="What’s  the  python’s  magic methods ?"></a>What’s  the  python’s  magic methods ?</h4><p>魔法方法是python的内置方法，几乎每一个魔法方法都有一个对应的内置函数，或者运算符,它是面向对象的一切.</p><h4 id="init"><a href="#init" class="headerlink" title="init"></a><strong>init</strong></h4><p>“<strong>init</strong>“ 是什么呢？其实它就是一个构造器， 当你创建一个类的实例的时候， 调用 “<strong>init</strong>“ 是为了对这个实例进行初始化赋值.就像是类的固有属性.</p><p>比如，定义一个矩形类，需要有实例化的时候长和宽两个参数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> Rectangle:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">def</span> __init__<span class="params">(self, x, y)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     self.x = x</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     self.y = y</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     <span class="comment">#self.x是类实例化之后的实例对象的一个局部变量, 而 x 则是传入的参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">def</span> getPeri<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">         <span class="keyword">return</span> (self.x + self.y) * <span class="number">2</span></span></pre></td></tr></table></figure><p>上面的程序运行结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;rect = Rectangle(<span class="number">3</span>, <span class="number">4</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;rect.getPeri()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="number">14</span></span></pre></td></tr></table></figure><p>还需要提出的是，init方法是没有返回值的, 比如说:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> Test<span class="params">()</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> __init__<span class="params">(self, str)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        self.str = str</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> str</span></pre></td></tr></table></figure><p>在 python_sell 中:</p><p><code>&gt;&gt;&gt; words = Test(&quot;我才是熬夜冠军哈哈哈&quot;)</code></p><p><code>TypeError: __init__() should return None, not &#39;str&#39;</code> </p><p>而知道了<strong>init</strong> 之后，我们再去接触其它的魔法方法就不会再云里雾里了.</p><h4 id="str-和-repr"><a href="#str-和-repr" class="headerlink" title="str 和 repr"></a><strong>str</strong> 和 <strong>repr</strong></h4><p>先上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="class"><span class="keyword">class</span> A:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">def</span> __init__<span class="params">(self, name)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">            self.name = name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">def</span> __str__<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> self.name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = A(<span class="string">"Tom"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(a)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Tom</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;__main__.A object at <span class="number">0x03B9E628</span>&gt;   <span class="comment">#这次打印出来的是 a 的地址.</span></span></pre></td></tr></table></figure><p>其实, 当使用方法 print 的时候, 默认会调用 str 方法, 从而将其字符串返回. 如果直接敲 a 呢, 那就不会调用 str 方法的, 从而显示出了 str 的地址.</p><p>为了能敲出实例对象就能返回信息, 我们要用 <strong>repr</strong> 方法.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="class"><span class="keyword">class</span> B:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">def</span> __init__<span class="params">(self, name)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">            self.name = name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">def</span> __repr__<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> self.name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; b = B(<span class="string">"Jake"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(a)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Jake</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Jake</span></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记python生成exe程序</title>
      <link href="/%E8%AE%B0python%E7%94%9F%E6%88%90exe%E7%A8%8B%E5%BA%8F/"/>
      <url>/%E8%AE%B0python%E7%94%9F%E6%88%90exe%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>1、安装 PyInstaller</p><p>要说把 python 代码打包成 exe 可执行文件， 那所利用的工具非 PyInstaller 莫属了.</p><p><code>pip install pyinstaller</code></p><p>打开 cmd ，一条命令搞定.</p><p>2、使用 PyInstaller</p><p>在你想要打包的程序(比如test.py)的同目录下， 打开 cmd， 也是一条命令 ：</p><p><code>pyinstaller test.py</code></p><p>然后会看到新增加了两个目录build和dist，dist下面的文件就是可以发布的可执行文件，对于上面的命令你会发现dist目录下面有一堆文件，各种都动态库文件和myscrip可执行文件。有时这样感觉比较麻烦，需要打包dist下面的所有东西才能发布，万一丢掉一个动态库就无法运行了.</p><p>有什么好的解决办法吗？ </p><p>当然有了 ！</p><p><code>pyinstaller -F test.py</code></p><p>这样，会发现dist文件夹下有一个名为 test 的 exe 类型的程序.</p><p>至于其他的文件不想要就删除了吧….</p><p>搞定~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>self到底是什么</title>
      <link href="/self%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/self%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p>最近在学习类和对象的时候，类中定义的一个函数总是有一个参数是self,它并没有被赋值,它到底是干啥的？？？</p><p>在我们尝试搞清楚self之前, 我们应该搞清楚类与对象的概念</p><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>对象=属性+方法</p><p>对象不一定非要在类中,将对象放在类中只是为了实现批量的 “生产”.</p><p>这样，我们就定义了一个类对象.</p><p>因此, 对象无处不在, 类就是类对象, 函数也是对象…</p><h4 id="类"><a href="#类" class="headerlink" title="类"></a>类</h4><p>正所谓, 物以类聚，人以群分.</p><p>类就是一些具有共同特征的一个组合, 是方法和属性的封装, 是有一定的特有属性（静态的、动态的）.</p><p>举个简单的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> People:</span>  <span class="comment">#python中的类名约定以大写字母开头，以示与函数名的区分</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     <span class="comment">#属性（其实就是一些变量）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     legs = <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     arms = <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     mouth = <span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">     appearance = [<span class="string">"ugly"</span>, <span class="string">"beautiful"</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     color = [<span class="string">"white"</span>, <span class="string">"black"</span>, <span class="string">"yellow"</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">     <span class="comment">#方法（其实就是一个个的函数）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">def</span> eat<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">         print(<span class="string">"人是铁饭是钢,一顿不吃饿得慌!"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">def</span> drink<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">         print(<span class="string">"据说人一直不喝水只能坚持3天..."</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">def</span> sleep<span class="params">(self)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">         print(<span class="string">"睡觉喽o(*￣▽￣*)ブ"</span>)</span></pre></td></tr></table></figure><p>这样，我们就定义了一个名为People的类，这个类有自己特有的的属性和方法： 有两条腿、两个胳膊、一个嘴… 它也具有一些动态的特性: 睡觉、吃饭、喝水…</p><h4 id="实例对象"><a href="#实例对象" class="headerlink" title="实例对象"></a>实例对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; p = People()</span></pre></td></tr></table></figure><p>见证伟大的时刻到了: 我们就创建了一个名为 p 的实例对象 !!! </p><p>当然, 我们也可以不给它命名, 直接用下面的方法也同样创建了一个实例对象， 只不过…我们还没有给它上户口.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; People()</span></pre></td></tr></table></figure><p>实例对象被创建之后, 我们就可以尽情的享用它内部的方法 （函数） 了.</p><p>好了, 有了这些概念, 我们就可以放心大胆的回答 self 的用法了.</p><h5 id="self-是什么？"><a href="#self-是什么？" class="headerlink" title="self 是什么？"></a>self 是什么？</h5><p>经过例子我们大概可以知道 : 类中的方法与普通函数只有一个区别——即它们除了用户所给他设定的函数之外, 还有一个额外的第一个参数, 但是你不需要为这个参数赋值, python 会自动帮其赋值.</p><h5 id="self-是固定的吗？"><a href="#self-是固定的吗？" class="headerlink" title="self 是固定的吗？"></a>self 是固定的吗？</h5><p>虽然这个参数的名字不一定非要是 self , 但是这已经成为了 python 中约定俗成的标准. 对, 就是这样, 不要你觉得, 我只要我觉得.</p><h5 id="我可以不加-self-吗"><a href="#我可以不加-self-吗" class="headerlink" title="我可以不加 self 吗?"></a>我可以不加 self 吗?</h5><p>一般情况下, 当然可以了, 前提是如果你不想看到 TypeError: a() takes 0 positional arguments but 1 was given 的话.</p><p>即使一个方法中没有任何参数, 仍需有 self.</p><p>其实非要说的话, 如果定义和调用的时候不传递类实例就可以…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="class"><span class="keyword">class</span> Test:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;     <span class="function"><span class="keyword">def</span> p<span class="params">()</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;        print(__class__)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;Test.p()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;&lt;<span class="class"><span class="keyword">class</span> '__main__.Test'&gt;</span></span></pre></td></tr></table></figure><p>emmmm，我怎么觉得对象加上self.之后就能在一个类中互通了…</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web spider[引子]</title>
      <link href="/Web-spider/"/>
      <url>/Web-spider/</url>
      
        <content type="html"><![CDATA[<h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3><p>1.发起请求：</p><p>通过HTTP库向目标站点发起请求，即发送一个Request，请求可以包含额外的headers、data等信息，然后等待服务器响应。这个请求的过程就像我们打开浏览器，在浏览器地址栏输入网址：<a href="http://www.baidu.com，然后点击回车。这个过程其实就相当于浏览器作为一个浏览的客户端，向服务器端发送了一次请求。" target="_blank" rel="noopener">www.baidu.com，然后点击回车。这个过程其实就相当于浏览器作为一个浏览的客户端，向服务器端发送了一次请求。</a></p><p>2.获取响应内容：</p><p>如果服务器能正常响应，我们会得到一个Response，Response的内容便是所要获取的内容，类型可能有HTML、Json字符串，二进制数据(图片，视频等）等类型。这个过程就是服务器接收客户端的请求，进过解析发送给浏览器的网页HTML文件。</p><p>3.解析内容：</p><p>得到的内容可能是HTML，可以使用正则表达式，网页解析库进行解析。也可能是Json，可以直接转为Json对象解析。可能是二进制数据，可以做保存或者进一步处理。这一步相当于浏览器把服务器端的文件获取到本地，再进行解释并且展现出来。</p><p>4.保存数据：</p><p>保存的方式可以是把数据存为文本，也可以把数据保存到数据库，或者保存为特定的jpg，mp4 等格式的文件。这就相当于我们在浏览网页时，下载了网页上的图片或者视频。</p><p>互联网就是一个蜘蛛网，每一个结点都是一个域名，编写一个蜘蛛，爬来爬去，爬取有用的内容.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web_spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python杂记</title>
      <link href="/python%E6%9D%82%E8%AE%B0/"/>
      <url>/python%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>最近开始接触 python, 越学习越发现它的强大和简洁.也越深刻的体会到为什么别人说 “人生苦短, 我学python”. python 是一门很强大的语言,希望能够在接下来的时间里, 能够找到我来打开这个世界的方式.</p><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="四个内置数据结构：列表、元组、字典、集合（80-）"><a href="#四个内置数据结构：列表、元组、字典、集合（80-）" class="headerlink" title="四个内置数据结构：列表、元组、字典、集合（80%）"></a>四个内置数据结构：列表、元组、字典、集合（80%）</h4><h4 id="1、列表-list-：有序的可变的对象集合"><a href="#1、列表-list-：有序的可变的对象集合" class="headerlink" title="1、列表(list)：有序的可变的对象集合"></a>1、列表(list)：有序的可变的对象集合</h4><p>列表是可变的，可以把列表类似于数组的概念，不同的是，python中的列表是动态的，会根据你的需要来动态的收缩和扩展。</p><p>另外，列表是异构的，即不需要声明储存对象的类型，甚至可以在一个列表中混合不同类型的对象。</p><table><thead><tr><th>对象</th><th align="center">索引值</th></tr></thead><tbody><tr><td>对象2</td><td align="center">2</td></tr><tr><td>对象1</td><td align="center">1</td></tr><tr><td>对象0</td><td align="center">0</td></tr></tbody></table><p>操作应用：</p><table><thead><tr><th>表达式</th><th align="center">结果说明</th></tr></thead><tbody><tr><td>lst * n</td><td align="center">把lst列表重复n次</td></tr><tr><td>lst[n1:n2]</td><td align="center">将索引值n1，n2对应的内容取出，组成另一个列表</td></tr><tr><td>del lst[n1:n2]</td><td align="center">删除索引值n1到n2之间的内容</td></tr><tr><td>lst[n1:n2] = n</td><td align="center">把n1到n2之间的元素设置为n</td></tr><tr><td>lst.append(x)</td><td align="center">将 x 视为一个元素，附加到列表末尾</td></tr><tr><td>lst.extend(x)</td><td align="center">将 x 中的所有元素附加到列表后面</td></tr><tr><td>lst.sort()</td><td align="center">将列表加以排序</td></tr><tr><td>lst.remove(x)</td><td align="center">删除列表中第一个出现的x</td></tr></tbody></table><p>下面展示的是 append 和 extend 的区别：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;ext = [<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst.append(ext)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst.extend(ext)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;lst</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>]</span></pre></td></tr></table></figure><h4 id="2、元组-tuple-：有序的不可变的对象集合"><a href="#2、元组-tuple-：有序的不可变的对象集合" class="headerlink" title="2、元组(tuple)：有序的不可变的对象集合"></a>2、元组(tuple)：有序的不可变的对象集合</h4><p>因为元组的不可变特性，通常把元组想象成一个常量列表。</p><p>元组和列表很类似，不同的是元组不可变，这意味着，一旦元组被创建就不能被修改，不然会出现久违的 error</p><h4 id="3、字典-dict-：无序的键-值对集合"><a href="#3、字典-dict-：无序的键-值对集合" class="headerlink" title="3、字典(dict)：无序的键/值对集合"></a>3、字典(dict)：无序的键/值对集合</h4><p>字典是无序且可变的，可以把字典想象成一个两列多行的数据结构。</p><p>注意：因为字典是无序的，所以你不要指望编译器会按照你输入的顺序来依次输出它们</p><p>同样的，字典也是可以根据你的需求来动态的收缩或扩展。</p><table><thead><tr><th>键</th><th align="center">对象</th></tr></thead><tbody><tr><td>键#2</td><td align="center">对象2</td></tr><tr><td>键#1</td><td align="center">对象1</td></tr><tr><td>键#3</td><td align="center">对象3</td></tr></tbody></table><h4 id="4、集合-set-：无序的唯一对象的集合"><a href="#4、集合-set-：无序的唯一对象的集合" class="headerlink" title="4、集合(set)：无序的唯一对象的集合"></a>4、集合(set)：无序的唯一对象的集合</h4><p>集合像字典一样没有顺序，它的亮点在于它内部的对象都是唯一的，不允许存在重复的情况。</p><p>如果单纯用一对 {} 来给变量赋值，变量的类型会被认定为 dict，如果{}里面只有值，而没有键会被认为set</p><h4 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h4><h4 id="1-、if-elif-else"><a href="#1-、if-elif-else" class="headerlink" title="1 、if \ elif \ else"></a>1 、if \ elif \ else</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  x == A:                     <span class="comment">#条件一</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    do something <span class="keyword">for</span> A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> x == B:                    <span class="comment">#条件二</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    do something <span class="keyword">for</span> B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span>:                           <span class="comment">#条件三</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    do something <span class="keyword">for</span> C</span></pre></td></tr></table></figure><p>注意：if、elif、else 的后面一定要加  :</p><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><p>在python中，对于已经知道循环次数的循环体或者至少知道预期对象，用 for ，而对于不知道循环次数的循环适合用while.</p><h5 id="1、for循环"><a href="#1、for循环" class="headerlink" title="1、for循环"></a>1、for循环</h5><p>形式:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="string">"变量"</span> <span class="keyword">in</span>  <span class="string">"遍历（循环）对象"</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    表达式</span></pre></td></tr></table></figure><p>比如：依次打印一个列表的内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   print(x)</span></pre></td></tr></table></figure><h5 id="附：range"><a href="#附：range" class="headerlink" title="附：range()"></a>附：range()</h5><p>提到 for 循环, 我就不得不补充一个知识点, 那就是与 for 密不可分的 range()。</p><p><code>range(start, stop, step)</code></p><p>看了它的 API 已经一目了然了, 首位是它循环开始的数, 第二位是它循环结束的数字 （ 注意， 并不包括这个数字 ） , 第三位是它每一次走的步数.</p><p>比如<code>range(1,101,10)</code> 就是从 1 开始到 100 结束 , 且每一步的步长是 10.</p><p>有时候为了方便就只写一个数字 <code>range(10)</code></p><p>这个的意思就是, 默认从 0 开始， 到 9 结束, 步长默认为 1.</p><h5 id="2、while循环"><a href="#2、while循环" class="headerlink" title="2、while循环"></a>2、while循环</h5><p>形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="string">"条件"</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     <span class="string">"循环体"</span></span></pre></td></tr></table></figure><p>比如，模仿掷色子。因为在掷色子之前我们并不知道要循环几次才能得到我们想要的数字，所以要用while循环.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入random模板</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">x = random.randint(<span class="number">1</span>, <span class="number">6</span>)  <span class="comment">#先产生一个1—6的随机数，如果不是 5，就执行下面的循环</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">print(x)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印产生的随机数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> x != <span class="number">5</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      x = random.randint(<span class="number">1</span>,<span class="number">6</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      print(x)</span></pre></td></tr></table></figure><h4 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h4><p>break : 用于提前结束循环体</p><p>利用break，可以改写上面的掷色子小程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入random模板：调用randint函数产生随机数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     x = random.randint(<span class="number">1</span>,<span class="number">6</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     print(x)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     <span class="keyword">if</span> x == <span class="number">5</span>: <span class="keyword">break</span></span></pre></td></tr></table></figure><p>continue : 用于跳过本次循环，再从下一次循环开始。即只要遇到continue，立即放弃本次循环，回到 for/while .</p><h4 id="enmuerate"><a href="#enmuerate" class="headerlink" title="enmuerate()"></a>enmuerate()</h4><p>在for循环中，如果需要在循环中获取当前的索引值，可以使用enmuerate()函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'梦泪'</span>,<span class="string">'奥特曼'</span>,<span class="string">'孙悟空'</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, name <span class="keyword">in</span> enmuerate(names):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    print(<span class="string">"No.&#123;&#125;:&#123;&#125;"</span>.format(i, name))</span></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">No<span class="number">.0</span>:梦泪</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">No<span class="number">.1</span>:奥特曼</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">No<span class="number">.2</span>:孙悟空</span></pre></td></tr></table></figure><h4 id="format"><a href="#format" class="headerlink" title="format"></a>format</h4><p>py2.6之后新增的函数 : str.format(). 通过 {} 代替 %</p><p>str.format()函数理论上可以接收无限个参数，而且位置也可以不按顺序.</p><p>比如 :</p><p>（1）不为参数设置指定位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">"&#123;&#125; &#123;&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"lihao"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="string">'hello lihao'</span></span></pre></td></tr></table></figure><p>（2）为参数设置指定位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">"&#123;1&#125; &#123;0&#125;"</span>.format(<span class="string">"hello"</span>. <span class="string">"lihao"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="string">'lihao hello'</span></span></pre></td></tr></table></figure><h4 id="try-except-例外处理"><a href="#try-except-例外处理" class="headerlink" title="try/except 例外处理"></a>try/except 例外处理</h4><p>顾名思义,先 try（尝试） 一下，再用 except 捕捉出现例外的情况.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">try</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        int(input(<span class="string">"what's your age?"</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">break</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">except</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        print(<span class="string">"please enter a number!"</span>)</span></pre></td></tr></table></figure><p>为什么要多花几行代码呢？ 目的就是防止用户输入非数字的情况.</p><h4 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h4><p>python有一种针对处理有序数据的运算器，即迭代器.</p><p>1、 map 函数的用法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">map(执行的函数, 容器变量)</span></pre></td></tr></table></figure><p>下面通过一个例子介绍用法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> pick<span class="params">(x)</span>:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    fruits = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'orange'</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> fruits[x]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">#定义一个函数,通过索引值返回相应的水果</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">choices = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">result = map(pick, choices)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> choice <span class="keyword">in</span> result:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    print(choice)</span></pre></td></tr></table></figure><p>程序的运行结果如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">banana</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">orange</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">apple</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">apple</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">orange</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">banana</span></pre></td></tr></table></figure><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><h5 id="文件的读取与写入"><a href="#文件的读取与写入" class="headerlink" title="文件的读取与写入"></a>文件的读取与写入</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"文件名"</span>, <span class="string">"文件处理方式"</span>)</span></pre></td></tr></table></figure><table><thead><tr><th>操作</th><th align="center">功能</th></tr></thead><tbody><tr><td>r</td><td align="center">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>w</td><td align="center">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件</td></tr><tr><td>a</td><td align="center">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入</td></tr></tbody></table><p>一般情况下，读取文件的方法有三种 : read(), readline(), readlines().  </p><p>从字面意思上来看，read()是一口气读完, readline()像是一下读一行</p><h3 id="随记"><a href="#随记" class="headerlink" title="随记"></a>随记</h3><h4 id="join"><a href="#join" class="headerlink" title=".join()"></a>.join()</h4><p>使用 join 函数可以实现数据的有序输出。</p><p><code>print(&#39;\n&#39;.join([&#39;Name&#39;,&#39;age&#39;,&#39;sex&#39;]))</code></p><p>这样就会输出:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">age</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sex</span></pre></td></tr></table></figure><h4 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h4><p>python中的 split() 函数就是一个切片工具，对字符串进行指定的切割.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">str = <span class="string">'窗外的麻雀在电线杆上多嘴'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">print(str.split(<span class="string">'线'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">print(type(str.split(<span class="string">'线'</span>)))</span></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[<span class="string">'窗外的麻雀在电'</span>, <span class="string">'杆上多嘴'</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> 'list'&gt;</span></span></pre></td></tr></table></figure><p>返回的是一个列表类型，可以通过索引值得到任何我们想要的内容。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言小程序</title>
      <link href="/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p><a href="#jump1">汉诺塔</a></p><p><a href="#jump2">lihao</a></p><hr><p><span id="jump1">汉诺塔</span> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">将 n 个盘子从 A 移到 C 可以分解为三个步骤：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">（1）将 A 上的 n-1 个盘子借助C移动到 B 上；</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">（2）把 A 上的剩下的一个盘子移动到 C 上；</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">（3）把 n-1 个盘子从 B 借助 A 移动到 C 上。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> hanoi<span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> one, <span class="keyword">char</span> two, <span class="keyword">char</span> three)</span></span>;      <span class="comment">//声明 hanoi 函数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"input the number of diskes:"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"The step to move %d diskes:\n"</span>, m);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    hanoi(m, <span class="string">'A'</span> , <span class="string">'B'</span>, <span class="string">'C'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> hanoi<span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> one, <span class="keyword">char</span> two, <span class="keyword">char</span> three)</span>         <span class="comment">//定义 hanoi 函数，其作用是将 n 个盘子从 one 借助 two 移动到 three 的过程</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="built_in">move</span><span class="params">(<span class="keyword">char</span> x, <span class="keyword">char</span> y)</span></span>;                      <span class="comment">//声明 move 函数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      <span class="built_in">move</span>(one, three);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">       &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">           hanoi(n<span class="number">-1</span>, one, three, two);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">           <span class="built_in">move</span>(one, three);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">           hanoi(n<span class="number">-1</span>, two, one, three);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">       &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">void move(char x, char y)  定义 move 函数，其作用是表示 x 到 y 的过程</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c --&gt; %c\n"</span>,x, y);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><span id="jump2">lihao</span> </p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言笔记</title>
      <link href="/C%E7%AC%94%E8%AE%B0/"/>
      <url>/C%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><hr><h3 id="为什么要使用函数"><a href="#为什么要使用函数" class="headerlink" title="为什么要使用函数"></a>为什么要使用函数</h3><p>函数是什么呢？除了编译软件自带的函数外，用户是否可以自己定义一个函数并调用它呢？如果可以的话，这样将会使代码更加简洁明朗。</p><h3 id="一、声明"><a href="#一、声明" class="headerlink" title="一、声明"></a>一、声明</h3><p>在定义一个函数之前我们要赋予它一个函数名，而所谓函数名其实就是给一个某种功能起一个名字。</p><p>用户要定义的函数类型有 void(无类型，即没有返回值)、int（返回整数值）、float、double、char（返回字符）……</p><h3 id="二、定义"><a href="#二、定义" class="headerlink" title="二、定义"></a>二、定义</h3><p>1、定义无参函数</p><pre><code>类型名   函数名(){    函数体}</code></pre><p>2、定义有参函数</p><pre><code>类型名   函数名(类型+变量){    函数体}</code></pre><p>3、定义空函数</p><pre><code>类型名   函数名() { }   </code></pre><h3 id="三、调用函数"><a href="#三、调用函数" class="headerlink" title="三、调用函数"></a>三、调用函数</h3><p>1、调用函数之前需要在主函数的第一个语句中声明一下函数，因为编译是从main函数开始编译，当编译到用户定义的函数，如果之前没有对函数进行声明，就会出错。</p><p>2、函数的声明语句是一个语句，需要用 <strong>;</strong> 结尾</p><p>3、在调用过程中，系统会把实参的值传递给形参，而函数的返回值是由 return 语句获得的。函数的类型决定返回值的类型在未出现函数调用的时候，形参并不占用内存单元，发生调用的时候才会临时分配内存单元。调用结束后，形参单元被释放，实参单元仍保留原值。</p><p>4、例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//先定义函数还是先编写主函数没有什么差别，但本人倾向于先编写</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">主函数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="built_in">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;                      <span class="comment">//对max函数声明 “;”不要忘</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> a, b, c;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"please input two numbers:"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    sacnf(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    c = <span class="built_in">max</span>(a,b);                        <span class="comment">//调用max函数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"max is %d"</span>,c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="built_in">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span>         <span class="comment">//定义max函数，其功能是求两个数中的最大值</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> z;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    z = x &gt; y ? x : y;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> z;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="四、函数的嵌套"><a href="#四、函数的嵌套" class="headerlink" title="四、函数的嵌套"></a>四、函数的嵌套</h3><p>1、定义：直接或间接的调用函数本身，称为函数的递归调用。</p><p>2、规则：程序中不允许无终止的递归调用，必须加条件限制（if、 while、 for…… ）</p><p>3、特点：从一个已知的事实出发，按照一定规律推出下一个事实，再从这个新的已知事实出发，再向下一个新的事实。</p><p>3、例:用递归法求 n!</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">n 的阶乘就是从一，一直乘到 n;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">当 n = 1, n! = 1;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">当 n &gt; 1, n! = n * (n - 1)!</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">下面开始设计程序：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> fac<span class="params">(<span class="keyword">int</span> n)</span></span>;                <span class="comment">//对fac函数声明</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> n, y;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"input one number:"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    y = fac(n);                          <span class="comment">//调用fac函数，其作用是求一个数的阶乘</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>,n, y);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> fac<span class="params">(<span class="keyword">int</span> n)</span>                   <span class="comment">//定义fac函数</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> f;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">       <span class="built_in">printf</span>(<span class="string">"n &lt; 0, error"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">0</span> || n == <span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">       f = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span> f = fac(n - <span class="number">1</span>) * n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> f;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="8-2指针"><a href="#8-2指针" class="headerlink" title="8.2指针"></a>8.2指针</h2><hr><h3 id="8-2-1使用指针变量的例子"><a href="#8-2-1使用指针变量的例子" class="headerlink" title="8.2.1使用指针变量的例子"></a>8.2.1使用指针变量的例子</h3><p>【例8.1】通过指针访问整型变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> a = <span class="number">100</span>, b = <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> *p1, *p2;   <span class="comment">//定义两个指向整型的指针变量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    p1 = &amp;a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    p2 = &amp;b;   <span class="comment">//把a,b的地址分别赋给它们</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d, b = %d\n"</span>,a,b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d, b = %d"</span>,*p1,*p2); <span class="comment">// “*”作为取值操作符，取出他们所指的整数，即a,b的值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>【程序分析】</p><p>① 开头定义了两个可以指向整型的指针变量</p><p>② 第六行的 “ * ” 是用来定义指针变量，第11行的 “ * ” 表示指向，即 *p1 就是说指针变量 p1 指向的变量，即为 a</p><p>【注意】</p><p>① 定义指针变量的时候必须要有类型名，且它所指向的那个变量的类型也要一样。</p><p>② 指针是用来存放地址的， 指针是地址，指针变量是一个定义的变量。</p><h3 id="8-2-2怎样定义指针变量"><a href="#8-2-2怎样定义指针变量" class="headerlink" title="8.2.2怎样定义指针变量"></a>8.2.2怎样定义指针变量</h3><p>类型名 * 指针变量名;</p><p>左端的类型名，比如 “int、float” 被称为基类型</p><p>【说明】</p><p>① 指针前面的 “ * “ 表示该变量为指针型变量</p><p>② 在定义指针变量的时候必须指定基类型。<strong>一个变量的指针包括两个含义：一是以存储单元的编号表示的纯地址（如编号为2000的字节），一是它指向的存储单元的数据类型（如 int, char, float ）</strong></p><p>③ 指向整型数据的指针类型表示为 “ int * “, 读作指向 int 的指针 或是 int 指针</p><p>④ 指针变量只能存放地址（指针） 不能把一个整数赋值给指针变量</p><h3 id="8-2-3怎样引用指针变量"><a href="#8-2-3怎样引用指针变量" class="headerlink" title="8.2.3怎样引用指针变量"></a>8.2.3怎样引用指针变量</h3><p>(1)  *：取值操作符</p><p>(2) &amp;：取地址操作符；</p><p>【例8.2】输入两个整数a,b ，使用先大后小的顺序输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* p, * q;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"输入两个整数 : "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>, &amp;a, &amp;b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">p = &amp;a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">q = &amp;b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &lt; b)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *g;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">g = p; p = q; q = g; <span class="comment">//不交换a,b的值，而是交换两个指针变量的值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"max = %d, min = %d"</span>, *p, *q);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="8-2-4指针变量作为函数参数"><a href="#8-2-4指针变量作为函数参数" class="headerlink" title="8.2.4指针变量作为函数参数"></a>8.2.4指针变量作为函数参数</h3><p>【例8.3】同例8.2，现要求用函数来实现互换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入两个数字: "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">"%d,%d"</span>, &amp;a, &amp;b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* p=&amp;a, * q=&amp;b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &lt; b)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#123;swap(p, q);&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"max = %d,min = %d"</span>, a, b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> g;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">g = *p1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">*p1 = *p2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">*p2 = g;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>【疑问1】为什么非要利用指针？比如以下程序呢</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入两个数 : "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">"%d,%d"</span>, &amp;a, &amp;b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">swap(a, b); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %d, b = %d"</span>, a, b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">t = p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">p = q;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">q = t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>运行结果是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">请输入两个数：<span class="number">100</span>,<span class="number">10</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span>, b = <span class="number">10</span></span></pre></td></tr></table></figure><p>并没有完成互换功能</p><p>【分析】在主函数中调用的swap函数，把实参a和实参b的值传给了p,q,从而在函数swap中实现了p和q的互换，但是swap运行结束之后p和q的内存就会释放。可以理解为变量的 *<em>生存周期 *</em> 。而函数swap没有任何返回值，输出的a，b当然也没有改变</p><p>【疑问2】为什么不能互换地址值呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入两个数 : "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">"%d,%d"</span>, &amp;a, &amp;b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> *p = &amp;a, *q = &amp;b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">swap(p, q); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %d, b = %d"</span>, a, b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">t = p1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">p1 = p2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">p2 = t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>输出结果是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">请输入两个数 : <span class="number">32</span>,<span class="number">65</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">a = <span class="number">32</span>, b = <span class="number">65</span></span></pre></td></tr></table></figure><p>很显然也没有改变。</p><p>【分析】</p><p><img src="https://i.loli.net/2020/05/09/C7X5LQdqEpheUyV.jpg" alt="指针_交换两个数字.jpg"></p><p>很显然，swap函数中只是把p1和p2的内容（即地址）变换了，p1的内容变成了4000H，p2的内容变成了3000H，就是说p1指向了q，p2指向了p。但是并不影响p,q的指向，更改变不了a，b的值。</p><p><strong>C语言中实参变量和形参变量之间的数据传递是单向的 “值传递” 方式</strong></p><p>【例8.4】输入三个数，从大到小输出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> exchange<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2, <span class="keyword">int</span>* p3)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* k1, <span class="keyword">int</span>* k2)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b, c;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入三个数 : "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">"%d,%d,%d"</span>, &amp;a, &amp;b, &amp;c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* q1 = &amp;a, * q2 = &amp;b, * q3 = &amp;c;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">exchange(q1, q2, q3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%d,%d"</span>, a, b, c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> exchange<span class="params">(<span class="keyword">int</span>* p1, <span class="keyword">int</span>* p2, <span class="keyword">int</span>* p3)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* k1, <span class="keyword">int</span>* k2)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (*p1 &lt; *p2) &#123; swap(p1, p2); &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (*p2 &lt; *p3) &#123; swap(p2, p3); &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (*p1 &lt; *p2) &#123; swap(p1, p2); &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> swap<span class="params">(<span class="keyword">int</span>* k1, <span class="keyword">int</span>* k2)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">t = *k1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">*k1 = *k2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">*k2 = t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="8-3数组和指针"><a href="#8-3数组和指针" class="headerlink" title="8.3数组和指针"></a>8.3数组和指针</h2><h3 id="8-3-1数组元素的指针"><a href="#8-3-1数组元素的指针" class="headerlink" title="8.3.1数组元素的指针"></a>8.3.1数组元素的指针</h3><p>在C语言中，<strong>数组名代表数组中首元素的地址</strong>。因此下面的两个表示方法等价</p><p>p = &amp;a[0];</p><p>p = a;</p><h3 id="8-3-2引用数组元素时指针的运算"><a href="#8-3-2引用数组元素时指针的运算" class="headerlink" title="8.3.2引用数组元素时指针的运算"></a>8.3.2引用数组元素时指针的运算</h3><p>指针就是地址，那么地址能否进行算术运算呢？答案是：在一定条件下可以进行加减乘除算术运算的。</p><p>当指针指向一个数组元素的时候：</p><p>（1）p+1指向同一数组中的下一个元素，p-1指向同一数组中的下一元素。</p><p>（2）p+i 或 a+i 就是数组元素a[i] 的地址。 </p><p>（3）*(p+i) 或 *(a+i) 就是数组元素a[i] 的值。</p><p>（4）如果指针变量 p1 和 p2 都指向同一数组中的元素，则 p2-p1 结果就是 p2-p1 的值（两个地址之差）除以数组元素的长度（数据类型所占的字节）。 </p><h3 id="8-3-3通过指针引用数组元素"><a href="#8-3-3通过指针引用数组元素" class="headerlink" title="8.3.3通过指针引用数组元素"></a>8.3.3通过指针引用数组元素</h3><p>引用一个数组，可以用下面两种方法：</p><p>（1）下标法，如a[i]形式；</p><p>（2）指针法，如*(a+i) 或 *(p+i);</p><p>【例8.5】输出整型数组a的全部元素</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> *p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(p=a;p&lt;(a+<span class="number">10</span>);p++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d "</span>,*p);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>【分析】</p><p>第八行p指针变量指向了数组a的首地址，在小于(a+10)即a[10]的范围内进行自加运算，知道循环结束。</p><p>【例8.6】通过指针变量输出数组a的10个元素</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* p, i, a[<span class="number">10</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">p = a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入十个数: "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">"%d,"</span>, p++);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++, p++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, *p);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">请输入十个数: <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span> <span class="number">-858993460</span></span></pre></td></tr></table></figure><p>【程序分析】在第一个 for 循环后，指针变量 p 就已经指向了数组元素的最后一个位置 ，如果再进行输出，那么存储单元的值就是不可预料的。但实际上，指针变量可以指向数组以后的存储单元，就算元素不存在这个数组中，C编译器并不认为它是非法的，但是输出结果却不理想。解决办法就是在第一个for循环之后，第二个for循环之前，加上一句：p = a;相当于让指针重新指向了数组的首元素的地址。</p><h3 id="8-3-4用数组名做函数参数"><a href="#8-3-4用数组名做函数参数" class="headerlink" title="8.3.4用数组名做函数参数"></a>8.3.4用数组名做函数参数</h3><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> fun<span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>;  <span class="comment">//对fun函数声明</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> arr[<span class="number">10</span>];                 <span class="comment">//定义a数组</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">       :</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">       : </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    fun(arr,<span class="number">10</span>);                  <span class="comment">//用数组名做参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> fun<span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span>       <span class="comment">//定义fun函数</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    :</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>arr是实参数组名，a是形参数组名。当用数组名做参数时，<strong>如果形参数组中各元素的值发生变化，实参数组元素的值也发生变化。</strong></p><p>【说明】C语言调用函数时虚实结合的方法都是采用“值传递”的方式，当用变量名作为函数参数时传递的是变量的值，当用数组名作为函数参数时，由于数组名代表的是数组首元素的地址，因此传递的值是地址，所以要求形参为指针变量。</p><p>实参数组名代表该数组首元素的地址，而形参是用来接受从实参传递过来的数组首元素地址的。因此，<strong>形参数组应该是一个指针变量</strong>（只有指针变量才能存放地址）。也就是说：</p><p>fun(int a[], int n);  等价于  fun(int *a, int n);</p><p>【例8.7】将数组 a 中 n 个整数按相反顺序存放</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> main<span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> inv<span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> n)</span></span>;     <span class="comment">//对inv函数进行声明</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]= &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> &#125;;     <span class="comment">//初始化a数组</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* p = a;                     <span class="comment">//如果不赋予确定值，就会出错</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">inv(p, <span class="number">10</span>);                     <span class="comment">//用指针变量做参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (p = a; p &lt; a+<span class="number">10</span>; p++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, *p);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> inv<span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> n)</span>     <span class="comment">//定义inv函数，指针变量作为形参</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* p, t, * i, * j;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">i = x; j = x + n - <span class="number">1</span>; p = x + (n<span class="number">-1</span>)/<span class="number">2</span>;  <span class="comment">//把第一个与最后一个进行互换，第二个和倒数第二个互换，以此类推...</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( ;i &lt;= p; i++, j--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#123;t = *i; *i = *j; *j = t;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>【归纳分析】如果有一个实参数组，要想在函数中改变此数组中的元素的值，实参与形参的对应关系有四种：</p><p>（1）形参与实参都用数组名</p><p>（2）实参用数组名，形参用指针变量</p><p>（3）实参形参都用指针变量</p><p>（4）实参为指针变量，形参为数组名</p><p>【注意】如果用指针变量作为实参，必须先使指针变量有确定值，指向一个已定义的对象。</p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wonderful moment</title>
      <link href="/filename/"/>
      <url>/filename/</url>
      
        <content type="html"><![CDATA[<p>2019年11月25日中午，刚考完线代，下着小雨，我踏上了开往淮北的列车。</p><p>这是我们冷战结束的第一天，心里总觉得有些愧疚。就这样，我秘密的买好了票，想要给她一个惊喜。我事先骗她到操场走走，然后我们在操场“偶遇”。果然，这傻不啦叽的女孩，第一反应居然是发型凌乱。我们抱了许久，仔细想想好像很久都没有这样了，仿佛能听到她简单纯粹的激动和开心，那一刻，失望和不满荡然无存。这是异地恋的无奈……我们一起度过了美好的两天，等她下课，一起吃食堂，陪她打卡。我想尽量在属于她的世界里尽量留下我来过的痕迹，就当是我走后的温存吧。</p><p>亲爱的，下次见。</p><p><img src="https://i.loli.net/2019/12/08/2Q1zaJYvNUf4iK9.jpg" alt="11.26日晚于天桥下"></p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>历时两天，我的博客网站终于搭建完成，对于一个小白来说，这的确有些不容易，不过好在成功了。其实之前是没有这个想法的，但是最近有些朋友弄了，我当然也要玩玩。虽然现在我才19岁，但是十九年里发生的事我很多都不记得，我有时想，如果那些痕迹、那些有价值的事物都被忘记的话，那不仅仅是一个人，而是和他关联的一部分就自然而然地消失了啊。希望我能坚持写下去，记录生活的沙子、拾取成长的贝壳。</p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
